# Makefile.in generated by automake 1.7.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# code/Makefile.am for fs2_open
#
# $Id: Makefile.in,v 1.1 2003-03-02 06:49:23 penguin Exp $

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
@FS2_JOYSTICK_TRUE@am__append_1 = \
@FS2_JOYSTICK_TRUE@ io/joy.cpp \
@FS2_JOYSTICK_TRUE@ io/joy_ff.cpp \
@FS2_JOYSTICK_TRUE@ io/swff_lib.cpp

@FS2_NETWORKING_TRUE@am__append_2 = \
@FS2_NETWORKING_TRUE@ hud/hudobserver.cpp \
@FS2_NETWORKING_TRUE@ network/multi.cpp \
@FS2_NETWORKING_TRUE@ network/multimsgs.cpp \
@FS2_NETWORKING_TRUE@ network/multiteamselect.cpp \
@FS2_NETWORKING_TRUE@ network/multiui.cpp \
@FS2_NETWORKING_TRUE@ network/multiutil.cpp \
@FS2_NETWORKING_TRUE@ network/multi_campaign.cpp \
@FS2_NETWORKING_TRUE@ network/multi_data.cpp \
@FS2_NETWORKING_TRUE@ network/multi_dogfight.cpp \
@FS2_NETWORKING_TRUE@ network/multi_endgame.cpp \
@FS2_NETWORKING_TRUE@ network/multi_ingame.cpp \
@FS2_NETWORKING_TRUE@ network/multi_kick.cpp \
@FS2_NETWORKING_TRUE@ network/multi_log.cpp \
@FS2_NETWORKING_TRUE@ network/multi_obj.cpp \
@FS2_NETWORKING_TRUE@ network/multi_observer.cpp \
@FS2_NETWORKING_TRUE@ network/multi_options.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pause.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pinfo.cpp \
@FS2_NETWORKING_TRUE@ network/multi_ping.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pmsg.cpp \
@FS2_NETWORKING_TRUE@ network/multi_rate.cpp \
@FS2_NETWORKING_TRUE@ network/multi_respawn.cpp \
@FS2_NETWORKING_TRUE@ network/multi_team.cpp \
@FS2_NETWORKING_TRUE@ network/multi_voice.cpp \
@FS2_NETWORKING_TRUE@ network/multi_xfer.cpp \
@FS2_NETWORKING_TRUE@ network/psnet.cpp \
@FS2_NETWORKING_TRUE@ network/psnet2.cpp \
@FS2_NETWORKING_TRUE@ menuui/optionsmenumulti.cpp \
@FS2_NETWORKING_TRUE@ missionui/chatbox.cpp

@FS2_SOUND_TRUE@am__append_3 = \
@FS2_SOUND_TRUE@ gamesnd/eventmusic.cpp \
@FS2_SOUND_TRUE@ gamesnd/gamesnd.cpp \
@FS2_SOUND_TRUE@ object/objectsnd.cpp \
@FS2_SOUND_TRUE@ sound/acm.cpp \
@FS2_SOUND_TRUE@ sound/audiostr.cpp \
@FS2_SOUND_TRUE@ sound/ds.cpp \
@FS2_SOUND_TRUE@ sound/ds3d.cpp \
@FS2_SOUND_TRUE@ sound/dscap.cpp \
@FS2_SOUND_TRUE@ sound/midifile.cpp \
@FS2_SOUND_TRUE@ sound/rbaudio.cpp \
@FS2_SOUND_TRUE@ sound/rtvoice.cpp \
@FS2_SOUND_TRUE@ sound/sound.cpp \
@FS2_SOUND_TRUE@ sound/winmidi.cpp \
@FS2_SOUND_TRUE@ sound/winmidi_base.cpp \
@FS2_SOUND_TRUE@ vcodec/codec1.cpp

@FS2_GRSOFT_TRUE@am__append_4 = \
@FS2_GRSOFT_TRUE@ graphics/grsoft.cpp \
@FS2_GRSOFT_TRUE@ graphics/tmapper.cpp

@FS2_OS_WIN32_TRUE@am__append_5 = \
@FS2_OS_WIN32_TRUE@ ddsutils/ddsutils.cpp \
@FS2_OS_WIN32_TRUE@ globalincs/windebug.cpp \
@FS2_OS_WIN32_TRUE@ glide/glide.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3d.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3drender.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3dtexture.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grdirectdraw.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grglide.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grglidetexture.cpp \
@FS2_OS_WIN32_TRUE@ network/stand_gui.cpp \
@FS2_OS_WIN32_TRUE@ osapi/osapi.cpp \
@FS2_OS_WIN32_TRUE@ osapi/osregistry.cpp \
@FS2_OS_WIN32_TRUE@ osapi/outwnd.cpp

@FS2_OS_UNIX_TRUE@am__append_6 = \
@FS2_OS_UNIX_TRUE@ io/xmouse.cpp \
@FS2_OS_UNIX_TRUE@ osapi/osapi_unix.cpp \
@FS2_OS_UNIX_TRUE@ osapi/osregistry_unix.cpp \
@FS2_OS_UNIX_TRUE@ osapi/outwnd_unix.cpp

@FS2_OS_WIN32_TRUE@am__append_7 = \
@FS2_OS_WIN32_TRUE@ -lgdi32 -lole32 -lwsock32 -lwinmm -lmsacm32 -ldxguid -lopengl32 \
@FS2_OS_WIN32_TRUE@ -lcomctl32 -lddraw -ldinput

ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
FS2_GRSOFT_FALSE = @FS2_GRSOFT_FALSE@
FS2_GRSOFT_TRUE = @FS2_GRSOFT_TRUE@
FS2_JOYSTICK_FALSE = @FS2_JOYSTICK_FALSE@
FS2_JOYSTICK_TRUE = @FS2_JOYSTICK_TRUE@
FS2_NETWORKING_FALSE = @FS2_NETWORKING_FALSE@
FS2_NETWORKING_TRUE = @FS2_NETWORKING_TRUE@
FS2_OS_UNIX_FALSE = @FS2_OS_UNIX_FALSE@
FS2_OS_UNIX_TRUE = @FS2_OS_UNIX_TRUE@
FS2_OS_WIN32_FALSE = @FS2_OS_WIN32_FALSE@
FS2_OS_WIN32_TRUE = @FS2_OS_WIN32_TRUE@
FS2_SOUND_FALSE = @FS2_SOUND_FALSE@
FS2_SOUND_TRUE = @FS2_SOUND_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

noinst_PROGRAMS = fs2

fs2_SOURCES = \
 anim/animplay.cpp \
 anim/packunpack.cpp \
 asteroid/asteroid.cpp \
 bmpman/bmpman.cpp \
 cfile/cfile.cpp \
 cfile/cfilearchive.cpp \
 cfile/cfilelist.cpp \
 cfile/cfilesystem.cpp \
 cmdline/cmdline.cpp \
 cmeasure/cmeasure.cpp \
 controlconfig/controlsconfig.cpp \
 controlconfig/controlsconfigcommon.cpp \
 cutscene/cutscenes.cpp \
 debris/debris.cpp \
 debugconsole/console.cpp \
 decals/decals.cpp \
 demo/demo.cpp \
 exceptionhandler/exceptionhandler.cpp \
 fireball/fireballs.cpp \
 fireball/warpineffect.cpp \
 freespace2/freespace.cpp \
 freespace2/levelpaging.cpp \
 gamehelp/contexthelp.cpp \
 gamehelp/gameplayhelp.cpp \
 gamesequence/gamesequence.cpp \
 globalincs/alphacolors.cpp \
 globalincs/crypt.cpp \
 globalincs/systemvars.cpp \
 globalincs/version.cpp \
 graphics/2d.cpp \
 graphics/aaline.cpp \
 graphics/bitblt.cpp \
 graphics/circle.cpp \
 graphics/colors.cpp \
 graphics/font.cpp \
 graphics/gradient.cpp \
 graphics/gropengl.cpp \
 graphics/grzbuffer.cpp \
 graphics/line.cpp \
 graphics/pixel.cpp \
 graphics/rect.cpp \
 graphics/scaler.cpp \
 graphics/shade.cpp \
 hud/hud.cpp \
 hud/hudartillery.cpp \
 hud/hudbrackets.cpp \
 hud/hudconfig.cpp \
 hud/hudescort.cpp \
 hud/hudets.cpp \
 hud/hudlock.cpp \
 hud/hudmessage.cpp \
 hud/hudreticle.cpp \
 hud/hudshield.cpp \
 hud/hudsquadmsg.cpp \
 hud/hudtarget.cpp \
 hud/hudtargetbox.cpp \
 hud/hudwingmanstatus.cpp \
 io/key.cpp \
 io/keycontrol.cpp \
 io/mouse.cpp \
 io/timer.cpp \
 jumpnode/jumpnode.cpp \
 lighting/lighting.cpp \
 localization/fhash.cpp \
 localization/localize.cpp \
 math/fix.cpp \
 math/floating.cpp \
 math/fvi.cpp \
 math/spline.cpp \
 math/staticrand.cpp \
 math/vecmat.cpp \
 menuui/barracks.cpp \
 menuui/credits.cpp \
 menuui/fishtank.cpp \
 menuui/mainhallmenu.cpp \
 menuui/mainhalltemp.cpp \
 menuui/optionsmenu.cpp \
 menuui/playermenu.cpp \
 menuui/readyroom.cpp \
 menuui/snazzyui.cpp \
 menuui/techmenu.cpp \
 menuui/trainingmenu.cpp \
 mission/missionbriefcommon.cpp \
 mission/missioncampaign.cpp \
 mission/missiongoals.cpp \
 mission/missiongrid.cpp \
 mission/missionhotkey.cpp \
 mission/missionload.cpp \
 mission/missionlog.cpp \
 mission/missionmessage.cpp \
 mission/missionparse.cpp \
 mission/missiontraining.cpp \
 missionui/missionbrief.cpp \
 missionui/missioncmdbrief.cpp \
 missionui/missiondebrief.cpp \
 missionui/missionloopbrief.cpp \
 missionui/missionpause.cpp \
 missionui/missionrecommend.cpp \
 missionui/missionscreencommon.cpp \
 missionui/missionshipchoice.cpp \
 missionui/missionstats.cpp \
 missionui/missionweaponchoice.cpp \
 missionui/redalert.cpp \
 model/modelcollide.cpp \
 model/modelinterp.cpp \
 model/modeloctant.cpp \
 model/modelread.cpp \
 nebula/neb.cpp \
 nebula/neblightning.cpp \
 object/collidedebrisship.cpp \
 object/collidedebrisweapon.cpp \
 object/collideshipship.cpp \
 object/collideshipweapon.cpp \
 object/collideweaponweapon.cpp \
 object/objcollide.cpp \
 object/object.cpp \
 object/objectsort.cpp \
 observer/observer.cpp \
 palman/palman.cpp \
 parse/encrypt.cpp \
 parse/parselo.cpp \
 parse/sexp.cpp \
 particle/particle.cpp \
 pcxutils/pcxutils.cpp \
 physics/physics.cpp \
 playerman/managepilot.cpp \
 playerman/playercontrol.cpp \
 popup/popup.cpp \
 popup/popupdead.cpp \
 radar/radar.cpp \
 render/3dclipper.cpp \
 render/3ddraw.cpp \
 render/3dlaser.cpp \
 render/3dmath.cpp \
 render/3dsetup.cpp \
 ship/afterburner.cpp \
 ship/ai.cpp \
 ship/aibig.cpp \
 ship/aicode.cpp \
 ship/aigoals.cpp \
 ship/awacs.cpp \
 ship/shield.cpp \
 ship/ship.cpp \
 ship/shipcontrails.cpp \
 ship/shipfx.cpp \
 ship/shiphit.cpp \
 starfield/nebula.cpp \
 starfield/starfield.cpp \
 starfield/supernova.cpp \
 stats/medals.cpp \
 stats/scoring.cpp \
 stats/stats.cpp \
 tgautils/tgautils.cpp \
 ui/button.cpp \
 ui/checkbox.cpp \
 ui/gadget.cpp \
 ui/icon.cpp \
 ui/inputbox.cpp \
 ui/keytrap.cpp \
 ui/listbox.cpp \
 ui/radio.cpp \
 ui/scroll.cpp \
 ui/slider.cpp \
 ui/slider2.cpp \
 ui/uidraw.cpp \
 ui/uimouse.cpp \
 ui/window.cpp \
 weapon/beam.cpp \
 weapon/corkscrew.cpp \
 weapon/emp.cpp \
 weapon/flak.cpp \
 weapon/muzzleflash.cpp \
 weapon/shockwave.cpp \
 weapon/swarm.cpp \
 weapon/trails.cpp \
 weapon/weapons.cpp\
$(am__append_1) $(am__append_2) $(am__append_3) $(am__append_4) $(am__append_5) $(am__append_6)

INCLUDES = -I.
fs2_CXXFLAGS = -fno-exceptions

fs2_LDADD = $(am__append_7)
subdir = code
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = fs2$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am__fs2_SOURCES_DIST = anim/animplay.cpp anim/packunpack.cpp \
	asteroid/asteroid.cpp bmpman/bmpman.cpp cfile/cfile.cpp \
	cfile/cfilearchive.cpp cfile/cfilelist.cpp \
	cfile/cfilesystem.cpp cmdline/cmdline.cpp cmeasure/cmeasure.cpp \
	controlconfig/controlsconfig.cpp \
	controlconfig/controlsconfigcommon.cpp cutscene/cutscenes.cpp \
	debris/debris.cpp debugconsole/console.cpp decals/decals.cpp \
	demo/demo.cpp exceptionhandler/exceptionhandler.cpp \
	fireball/fireballs.cpp fireball/warpineffect.cpp \
	freespace2/freespace.cpp freespace2/levelpaging.cpp \
	gamehelp/contexthelp.cpp gamehelp/gameplayhelp.cpp \
	gamesequence/gamesequence.cpp globalincs/alphacolors.cpp \
	globalincs/crypt.cpp globalincs/systemvars.cpp \
	globalincs/version.cpp graphics/2d.cpp graphics/aaline.cpp \
	graphics/bitblt.cpp graphics/circle.cpp graphics/colors.cpp \
	graphics/font.cpp graphics/gradient.cpp graphics/gropengl.cpp \
	graphics/grzbuffer.cpp graphics/line.cpp graphics/pixel.cpp \
	graphics/rect.cpp graphics/scaler.cpp graphics/shade.cpp \
	hud/hud.cpp hud/hudartillery.cpp hud/hudbrackets.cpp \
	hud/hudconfig.cpp hud/hudescort.cpp hud/hudets.cpp \
	hud/hudlock.cpp hud/hudmessage.cpp hud/hudreticle.cpp \
	hud/hudshield.cpp hud/hudsquadmsg.cpp hud/hudtarget.cpp \
	hud/hudtargetbox.cpp hud/hudwingmanstatus.cpp io/key.cpp \
	io/keycontrol.cpp io/mouse.cpp io/timer.cpp \
	jumpnode/jumpnode.cpp lighting/lighting.cpp \
	localization/fhash.cpp localization/localize.cpp math/fix.cpp \
	math/floating.cpp math/fvi.cpp math/spline.cpp \
	math/staticrand.cpp math/vecmat.cpp menuui/barracks.cpp \
	menuui/credits.cpp menuui/fishtank.cpp menuui/mainhallmenu.cpp \
	menuui/mainhalltemp.cpp menuui/optionsmenu.cpp \
	menuui/playermenu.cpp menuui/readyroom.cpp menuui/snazzyui.cpp \
	menuui/techmenu.cpp menuui/trainingmenu.cpp \
	mission/missionbriefcommon.cpp mission/missioncampaign.cpp \
	mission/missiongoals.cpp mission/missiongrid.cpp \
	mission/missionhotkey.cpp mission/missionload.cpp \
	mission/missionlog.cpp mission/missionmessage.cpp \
	mission/missionparse.cpp mission/missiontraining.cpp \
	missionui/missionbrief.cpp missionui/missioncmdbrief.cpp \
	missionui/missiondebrief.cpp missionui/missionloopbrief.cpp \
	missionui/missionpause.cpp missionui/missionrecommend.cpp \
	missionui/missionscreencommon.cpp \
	missionui/missionshipchoice.cpp missionui/missionstats.cpp \
	missionui/missionweaponchoice.cpp missionui/redalert.cpp \
	model/modelcollide.cpp model/modelinterp.cpp \
	model/modeloctant.cpp model/modelread.cpp nebula/neb.cpp \
	nebula/neblightning.cpp object/collidedebrisship.cpp \
	object/collidedebrisweapon.cpp object/collideshipship.cpp \
	object/collideshipweapon.cpp object/collideweaponweapon.cpp \
	object/objcollide.cpp object/object.cpp object/objectsort.cpp \
	observer/observer.cpp palman/palman.cpp parse/encrypt.cpp \
	parse/parselo.cpp parse/sexp.cpp particle/particle.cpp \
	pcxutils/pcxutils.cpp physics/physics.cpp \
	playerman/managepilot.cpp playerman/playercontrol.cpp \
	popup/popup.cpp popup/popupdead.cpp radar/radar.cpp \
	render/3dclipper.cpp render/3ddraw.cpp render/3dlaser.cpp \
	render/3dmath.cpp render/3dsetup.cpp ship/afterburner.cpp \
	ship/ai.cpp ship/aibig.cpp ship/aicode.cpp ship/aigoals.cpp \
	ship/awacs.cpp ship/shield.cpp ship/ship.cpp \
	ship/shipcontrails.cpp ship/shipfx.cpp ship/shiphit.cpp \
	starfield/nebula.cpp starfield/starfield.cpp \
	starfield/supernova.cpp stats/medals.cpp stats/scoring.cpp \
	stats/stats.cpp tgautils/tgautils.cpp ui/button.cpp \
	ui/checkbox.cpp ui/gadget.cpp ui/icon.cpp ui/inputbox.cpp \
	ui/keytrap.cpp ui/listbox.cpp ui/radio.cpp ui/scroll.cpp \
	ui/slider.cpp ui/slider2.cpp ui/uidraw.cpp ui/uimouse.cpp \
	ui/window.cpp weapon/beam.cpp weapon/corkscrew.cpp \
	weapon/emp.cpp weapon/flak.cpp weapon/muzzleflash.cpp \
	weapon/shockwave.cpp weapon/swarm.cpp weapon/trails.cpp \
	weapon/weapons.cpp io/joy.cpp io/joy_ff.cpp io/swff_lib.cpp \
	hud/hudobserver.cpp network/multi.cpp network/multimsgs.cpp \
	network/multiteamselect.cpp network/multiui.cpp \
	network/multiutil.cpp network/multi_campaign.cpp \
	network/multi_data.cpp network/multi_dogfight.cpp \
	network/multi_endgame.cpp network/multi_ingame.cpp \
	network/multi_kick.cpp network/multi_log.cpp \
	network/multi_obj.cpp network/multi_observer.cpp \
	network/multi_options.cpp network/multi_pause.cpp \
	network/multi_pinfo.cpp network/multi_ping.cpp \
	network/multi_pmsg.cpp network/multi_rate.cpp \
	network/multi_respawn.cpp network/multi_team.cpp \
	network/multi_voice.cpp network/multi_xfer.cpp \
	network/psnet.cpp network/psnet2.cpp \
	menuui/optionsmenumulti.cpp missionui/chatbox.cpp \
	gamesnd/eventmusic.cpp gamesnd/gamesnd.cpp object/objectsnd.cpp \
	sound/acm.cpp sound/audiostr.cpp sound/ds.cpp sound/ds3d.cpp \
	sound/dscap.cpp sound/midifile.cpp sound/rbaudio.cpp \
	sound/rtvoice.cpp sound/sound.cpp sound/winmidi.cpp \
	sound/winmidi_base.cpp vcodec/codec1.cpp graphics/grsoft.cpp \
	graphics/tmapper.cpp ddsutils/ddsutils.cpp \
	globalincs/windebug.cpp glide/glide.cpp graphics/grd3d.cpp \
	graphics/grd3drender.cpp graphics/grd3dtexture.cpp \
	graphics/grdirectdraw.cpp graphics/grglide.cpp \
	graphics/grglidetexture.cpp network/stand_gui.cpp \
	osapi/osapi.cpp osapi/osregistry.cpp osapi/outwnd.cpp \
	io/xmouse.cpp osapi/osapi_unix.cpp osapi/osregistry_unix.cpp \
	osapi/outwnd_unix.cpp
@FS2_JOYSTICK_TRUE@am__objects_1 = fs2-joy.$(OBJEXT) \
@FS2_JOYSTICK_TRUE@	fs2-joy_ff.$(OBJEXT) fs2-swff_lib.$(OBJEXT)
@FS2_NETWORKING_TRUE@am__objects_2 = fs2-hudobserver.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multimsgs.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multiteamselect.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multiui.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multiutil.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_campaign.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_data.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_dogfight.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_endgame.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_ingame.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_kick.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_log.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_obj.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_observer.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_options.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_pause.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_pinfo.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_ping.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_pmsg.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_rate.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_respawn.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_team.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_voice.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-multi_xfer.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-psnet.$(OBJEXT) fs2-psnet2.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-optionsmenumulti.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	fs2-chatbox.$(OBJEXT)
@FS2_SOUND_TRUE@am__objects_3 = fs2-eventmusic.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-gamesnd.$(OBJEXT) fs2-objectsnd.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-acm.$(OBJEXT) fs2-audiostr.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-ds.$(OBJEXT) fs2-ds3d.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-dscap.$(OBJEXT) fs2-midifile.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-rbaudio.$(OBJEXT) fs2-rtvoice.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-sound.$(OBJEXT) fs2-winmidi.$(OBJEXT) \
@FS2_SOUND_TRUE@	fs2-winmidi_base.$(OBJEXT) fs2-codec1.$(OBJEXT)
@FS2_GRSOFT_TRUE@am__objects_4 = fs2-grsoft.$(OBJEXT) \
@FS2_GRSOFT_TRUE@	fs2-tmapper.$(OBJEXT)
@FS2_OS_WIN32_TRUE@am__objects_5 = fs2-ddsutils.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-windebug.$(OBJEXT) fs2-glide.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grd3d.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grd3drender.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grd3dtexture.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grdirectdraw.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grglide.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-grglidetexture.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-stand_gui.$(OBJEXT) fs2-osapi.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-osregistry.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	fs2-outwnd.$(OBJEXT)
@FS2_OS_UNIX_TRUE@am__objects_6 = fs2-xmouse.$(OBJEXT) \
@FS2_OS_UNIX_TRUE@	fs2-osapi_unix.$(OBJEXT) \
@FS2_OS_UNIX_TRUE@	fs2-osregistry_unix.$(OBJEXT) \
@FS2_OS_UNIX_TRUE@	fs2-outwnd_unix.$(OBJEXT)
am_fs2_OBJECTS = fs2-animplay.$(OBJEXT) fs2-packunpack.$(OBJEXT) \
	fs2-asteroid.$(OBJEXT) fs2-bmpman.$(OBJEXT) fs2-cfile.$(OBJEXT) \
	fs2-cfilearchive.$(OBJEXT) fs2-cfilelist.$(OBJEXT) \
	fs2-cfilesystem.$(OBJEXT) fs2-cmdline.$(OBJEXT) \
	fs2-cmeasure.$(OBJEXT) fs2-controlsconfig.$(OBJEXT) \
	fs2-controlsconfigcommon.$(OBJEXT) fs2-cutscenes.$(OBJEXT) \
	fs2-debris.$(OBJEXT) fs2-console.$(OBJEXT) fs2-decals.$(OBJEXT) \
	fs2-demo.$(OBJEXT) fs2-exceptionhandler.$(OBJEXT) \
	fs2-fireballs.$(OBJEXT) fs2-warpineffect.$(OBJEXT) \
	fs2-freespace.$(OBJEXT) fs2-levelpaging.$(OBJEXT) \
	fs2-contexthelp.$(OBJEXT) fs2-gameplayhelp.$(OBJEXT) \
	fs2-gamesequence.$(OBJEXT) fs2-alphacolors.$(OBJEXT) \
	fs2-crypt.$(OBJEXT) fs2-systemvars.$(OBJEXT) \
	fs2-version.$(OBJEXT) fs2-2d.$(OBJEXT) fs2-aaline.$(OBJEXT) \
	fs2-bitblt.$(OBJEXT) fs2-circle.$(OBJEXT) fs2-colors.$(OBJEXT) \
	fs2-font.$(OBJEXT) fs2-gradient.$(OBJEXT) \
	fs2-gropengl.$(OBJEXT) fs2-grzbuffer.$(OBJEXT) \
	fs2-line.$(OBJEXT) fs2-pixel.$(OBJEXT) fs2-rect.$(OBJEXT) \
	fs2-scaler.$(OBJEXT) fs2-shade.$(OBJEXT) fs2-hud.$(OBJEXT) \
	fs2-hudartillery.$(OBJEXT) fs2-hudbrackets.$(OBJEXT) \
	fs2-hudconfig.$(OBJEXT) fs2-hudescort.$(OBJEXT) \
	fs2-hudets.$(OBJEXT) fs2-hudlock.$(OBJEXT) \
	fs2-hudmessage.$(OBJEXT) fs2-hudreticle.$(OBJEXT) \
	fs2-hudshield.$(OBJEXT) fs2-hudsquadmsg.$(OBJEXT) \
	fs2-hudtarget.$(OBJEXT) fs2-hudtargetbox.$(OBJEXT) \
	fs2-hudwingmanstatus.$(OBJEXT) fs2-key.$(OBJEXT) \
	fs2-keycontrol.$(OBJEXT) fs2-mouse.$(OBJEXT) \
	fs2-timer.$(OBJEXT) fs2-jumpnode.$(OBJEXT) \
	fs2-lighting.$(OBJEXT) fs2-fhash.$(OBJEXT) \
	fs2-localize.$(OBJEXT) fs2-fix.$(OBJEXT) fs2-floating.$(OBJEXT) \
	fs2-fvi.$(OBJEXT) fs2-spline.$(OBJEXT) fs2-staticrand.$(OBJEXT) \
	fs2-vecmat.$(OBJEXT) fs2-barracks.$(OBJEXT) \
	fs2-credits.$(OBJEXT) fs2-fishtank.$(OBJEXT) \
	fs2-mainhallmenu.$(OBJEXT) fs2-mainhalltemp.$(OBJEXT) \
	fs2-optionsmenu.$(OBJEXT) fs2-playermenu.$(OBJEXT) \
	fs2-readyroom.$(OBJEXT) fs2-snazzyui.$(OBJEXT) \
	fs2-techmenu.$(OBJEXT) fs2-trainingmenu.$(OBJEXT) \
	fs2-missionbriefcommon.$(OBJEXT) fs2-missioncampaign.$(OBJEXT) \
	fs2-missiongoals.$(OBJEXT) fs2-missiongrid.$(OBJEXT) \
	fs2-missionhotkey.$(OBJEXT) fs2-missionload.$(OBJEXT) \
	fs2-missionlog.$(OBJEXT) fs2-missionmessage.$(OBJEXT) \
	fs2-missionparse.$(OBJEXT) fs2-missiontraining.$(OBJEXT) \
	fs2-missionbrief.$(OBJEXT) fs2-missioncmdbrief.$(OBJEXT) \
	fs2-missiondebrief.$(OBJEXT) fs2-missionloopbrief.$(OBJEXT) \
	fs2-missionpause.$(OBJEXT) fs2-missionrecommend.$(OBJEXT) \
	fs2-missionscreencommon.$(OBJEXT) \
	fs2-missionshipchoice.$(OBJEXT) fs2-missionstats.$(OBJEXT) \
	fs2-missionweaponchoice.$(OBJEXT) fs2-redalert.$(OBJEXT) \
	fs2-modelcollide.$(OBJEXT) fs2-modelinterp.$(OBJEXT) \
	fs2-modeloctant.$(OBJEXT) fs2-modelread.$(OBJEXT) \
	fs2-neb.$(OBJEXT) fs2-neblightning.$(OBJEXT) \
	fs2-collidedebrisship.$(OBJEXT) \
	fs2-collidedebrisweapon.$(OBJEXT) fs2-collideshipship.$(OBJEXT) \
	fs2-collideshipweapon.$(OBJEXT) \
	fs2-collideweaponweapon.$(OBJEXT) fs2-objcollide.$(OBJEXT) \
	fs2-object.$(OBJEXT) fs2-objectsort.$(OBJEXT) \
	fs2-observer.$(OBJEXT) fs2-palman.$(OBJEXT) \
	fs2-encrypt.$(OBJEXT) fs2-parselo.$(OBJEXT) fs2-sexp.$(OBJEXT) \
	fs2-particle.$(OBJEXT) fs2-pcxutils.$(OBJEXT) \
	fs2-physics.$(OBJEXT) fs2-managepilot.$(OBJEXT) \
	fs2-playercontrol.$(OBJEXT) fs2-popup.$(OBJEXT) \
	fs2-popupdead.$(OBJEXT) fs2-radar.$(OBJEXT) \
	fs2-3dclipper.$(OBJEXT) fs2-3ddraw.$(OBJEXT) \
	fs2-3dlaser.$(OBJEXT) fs2-3dmath.$(OBJEXT) \
	fs2-3dsetup.$(OBJEXT) fs2-afterburner.$(OBJEXT) \
	fs2-ai.$(OBJEXT) fs2-aibig.$(OBJEXT) fs2-aicode.$(OBJEXT) \
	fs2-aigoals.$(OBJEXT) fs2-awacs.$(OBJEXT) fs2-shield.$(OBJEXT) \
	fs2-ship.$(OBJEXT) fs2-shipcontrails.$(OBJEXT) \
	fs2-shipfx.$(OBJEXT) fs2-shiphit.$(OBJEXT) fs2-nebula.$(OBJEXT) \
	fs2-starfield.$(OBJEXT) fs2-supernova.$(OBJEXT) \
	fs2-medals.$(OBJEXT) fs2-scoring.$(OBJEXT) fs2-stats.$(OBJEXT) \
	fs2-tgautils.$(OBJEXT) fs2-button.$(OBJEXT) \
	fs2-checkbox.$(OBJEXT) fs2-gadget.$(OBJEXT) fs2-icon.$(OBJEXT) \
	fs2-inputbox.$(OBJEXT) fs2-keytrap.$(OBJEXT) \
	fs2-listbox.$(OBJEXT) fs2-radio.$(OBJEXT) fs2-scroll.$(OBJEXT) \
	fs2-slider.$(OBJEXT) fs2-slider2.$(OBJEXT) fs2-uidraw.$(OBJEXT) \
	fs2-uimouse.$(OBJEXT) fs2-window.$(OBJEXT) fs2-beam.$(OBJEXT) \
	fs2-corkscrew.$(OBJEXT) fs2-emp.$(OBJEXT) fs2-flak.$(OBJEXT) \
	fs2-muzzleflash.$(OBJEXT) fs2-shockwave.$(OBJEXT) \
	fs2-swarm.$(OBJEXT) fs2-trails.$(OBJEXT) fs2-weapons.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6)
fs2_OBJECTS = $(am_fs2_OBJECTS)
@FS2_OS_WIN32_TRUE@fs2_DEPENDENCIES =
@FS2_OS_WIN32_FALSE@fs2_DEPENDENCIES =
fs2_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/fs2-2d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-3dclipper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-3ddraw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-3dlaser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-3dmath.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-3dsetup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-aaline.Po ./$(DEPDIR)/fs2-acm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-afterburner.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-ai.Po ./$(DEPDIR)/fs2-aibig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-aicode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-aigoals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-alphacolors.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-animplay.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-asteroid.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-audiostr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-awacs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-barracks.Po ./$(DEPDIR)/fs2-beam.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-bitblt.Po ./$(DEPDIR)/fs2-bmpman.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-button.Po ./$(DEPDIR)/fs2-cfile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cfilearchive.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cfilelist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cfilesystem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-chatbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-checkbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-circle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cmdline.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cmeasure.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-codec1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-collidedebrisship.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-collidedebrisweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-collideshipship.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-collideshipweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-collideweaponweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-colors.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-console.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-contexthelp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-controlsconfig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-controlsconfigcommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-corkscrew.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-credits.Po ./$(DEPDIR)/fs2-crypt.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-cutscenes.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-ddsutils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-debris.Po ./$(DEPDIR)/fs2-decals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-demo.Po ./$(DEPDIR)/fs2-ds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-ds3d.Po ./$(DEPDIR)/fs2-dscap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-emp.Po ./$(DEPDIR)/fs2-encrypt.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-eventmusic.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-exceptionhandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-fhash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-fireballs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-fishtank.Po ./$(DEPDIR)/fs2-fix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-flak.Po ./$(DEPDIR)/fs2-floating.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-font.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-freespace.Po ./$(DEPDIR)/fs2-fvi.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gadget.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gameplayhelp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gamesequence.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gamesnd.Po ./$(DEPDIR)/fs2-glide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gradient.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grd3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grd3drender.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grd3dtexture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grdirectdraw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grglide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grglidetexture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-gropengl.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grsoft.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-grzbuffer.Po ./$(DEPDIR)/fs2-hud.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudartillery.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudbrackets.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudconfig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudescort.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudets.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudlock.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudmessage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudobserver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudreticle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudshield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudsquadmsg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudtarget.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudtargetbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-hudwingmanstatus.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-icon.Po ./$(DEPDIR)/fs2-inputbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-joy.Po ./$(DEPDIR)/fs2-joy_ff.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-jumpnode.Po ./$(DEPDIR)/fs2-key.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-keycontrol.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-keytrap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-levelpaging.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-lighting.Po ./$(DEPDIR)/fs2-line.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-listbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-localize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-mainhallmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-mainhalltemp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-managepilot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-medals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-midifile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionbriefcommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missioncampaign.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missioncmdbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missiondebrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missiongoals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missiongrid.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionhotkey.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionlog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionloopbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionmessage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionparse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionpause.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionrecommend.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionscreencommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionshipchoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionstats.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missiontraining.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-missionweaponchoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-modelcollide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-modelinterp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-modeloctant.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-modelread.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-mouse.Po ./$(DEPDIR)/fs2-multi.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_campaign.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_dogfight.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_endgame.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_ingame.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_kick.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_log.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_obj.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_observer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_options.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_pause.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_pinfo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_ping.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_pmsg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_rate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_respawn.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_team.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_voice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multi_xfer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multimsgs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multiteamselect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multiui.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-multiutil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-muzzleflash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-neb.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-neblightning.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-nebula.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-objcollide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-object.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-objectsnd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-objectsort.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-observer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-optionsmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-optionsmenumulti.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-osapi.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-osapi_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-osregistry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-osregistry_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-outwnd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-outwnd_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-packunpack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-palman.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-parselo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-particle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-pcxutils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-physics.Po ./$(DEPDIR)/fs2-pixel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-playercontrol.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-playermenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-popup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-popupdead.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-psnet.Po ./$(DEPDIR)/fs2-psnet2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-radar.Po ./$(DEPDIR)/fs2-radio.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-rbaudio.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-readyroom.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-rect.Po ./$(DEPDIR)/fs2-redalert.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-rtvoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-scaler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-scoring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-scroll.Po ./$(DEPDIR)/fs2-sexp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-shade.Po ./$(DEPDIR)/fs2-shield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-ship.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-shipcontrails.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-shipfx.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-shiphit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-shockwave.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-slider.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-slider2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-snazzyui.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-sound.Po ./$(DEPDIR)/fs2-spline.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-stand_gui.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-starfield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-staticrand.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-stats.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-supernova.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-swarm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-swff_lib.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-systemvars.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-techmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-tgautils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-timer.Po ./$(DEPDIR)/fs2-tmapper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-trails.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-trainingmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-uidraw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-uimouse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-vecmat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-version.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-warpineffect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-weapons.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-windebug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-window.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-winmidi.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-winmidi_base.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fs2-xmouse.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(am__fs2_SOURCES_DIST)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(fs2_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  code/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
fs2$(EXEEXT): $(fs2_OBJECTS) $(fs2_DEPENDENCIES) 
	@rm -f fs2$(EXEEXT)
	$(CXXLINK) $(fs2_LDFLAGS) $(fs2_OBJECTS) $(fs2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-3dclipper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-3ddraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-3dlaser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-3dmath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-3dsetup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-aaline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-acm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-afterburner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-ai.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-aibig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-aicode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-aigoals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-alphacolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-animplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-asteroid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-audiostr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-awacs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-barracks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-beam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-bitblt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-bmpman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cfilearchive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cfilelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cfilesystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-chatbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-checkbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-circle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cmeasure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-codec1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-collidedebrisship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-collidedebrisweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-collideshipship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-collideshipweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-collideweaponweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-colors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-console.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-contexthelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-controlsconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-controlsconfigcommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-corkscrew.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-credits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-crypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-cutscenes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-ddsutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-debris.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-decals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-ds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-ds3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-dscap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-emp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-encrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-eventmusic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-exceptionhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-fhash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-fireballs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-fishtank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-fix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-flak.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-floating.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-freespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-fvi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gadget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gameplayhelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gamesequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gamesnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-glide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gradient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grd3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grd3drender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grd3dtexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grdirectdraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grglide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grglidetexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-gropengl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grsoft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-grzbuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hud.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudartillery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudbrackets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudescort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudmessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudobserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudreticle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudshield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudsquadmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudtarget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudtargetbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-hudwingmanstatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-icon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-inputbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-joy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-joy_ff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-jumpnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-keycontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-keytrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-levelpaging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-lighting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-line.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-listbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-localize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-mainhallmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-mainhalltemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-managepilot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-medals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-midifile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionbriefcommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missioncampaign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missioncmdbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missiondebrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missiongoals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missiongrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionhotkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionloopbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionmessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionpause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionrecommend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionscreencommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionshipchoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionstats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missiontraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-missionweaponchoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-modelcollide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-modelinterp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-modeloctant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-modelread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-mouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_campaign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_dogfight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_endgame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_ingame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_kick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_observer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_pause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_pinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_pmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_rate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_respawn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_team.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_voice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multi_xfer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multimsgs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multiteamselect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multiui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-multiutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-muzzleflash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-neb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-neblightning.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-nebula.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-objcollide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-objectsnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-objectsort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-observer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-optionsmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-optionsmenumulti.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-osapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-osapi_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-osregistry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-osregistry_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-outwnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-outwnd_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-packunpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-palman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-parselo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-particle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-pcxutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-physics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-pixel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-playercontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-playermenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-popup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-popupdead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-psnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-psnet2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-radar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-radio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-rbaudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-readyroom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-rect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-redalert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-rtvoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-scaler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-scoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-scroll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-sexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-ship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shipcontrails.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shipfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shiphit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-shockwave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-slider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-slider2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-snazzyui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-spline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-stand_gui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-starfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-staticrand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-supernova.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-swarm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-swff_lib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-systemvars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-techmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-tgautils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-tmapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-trails.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-trainingmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-uidraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-uimouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-vecmat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-warpineffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-weapons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-windebug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-winmidi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-winmidi_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fs2-xmouse.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

fs2-animplay.o: anim/animplay.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-animplay.o -MD -MP -MF "$(DEPDIR)/fs2-animplay.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-animplay.o `test -f 'anim/animplay.cpp' || echo '$(srcdir)/'`anim/animplay.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-animplay.Tpo" "$(DEPDIR)/fs2-animplay.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-animplay.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/animplay.cpp' object='fs2-animplay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-animplay.Po' tmpdepfile='$(DEPDIR)/fs2-animplay.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-animplay.o `test -f 'anim/animplay.cpp' || echo '$(srcdir)/'`anim/animplay.cpp

fs2-animplay.obj: anim/animplay.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-animplay.obj -MD -MP -MF "$(DEPDIR)/fs2-animplay.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-animplay.obj `if test -f 'anim/animplay.cpp'; then $(CYGPATH_W) 'anim/animplay.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/animplay.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-animplay.Tpo" "$(DEPDIR)/fs2-animplay.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-animplay.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/animplay.cpp' object='fs2-animplay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-animplay.Po' tmpdepfile='$(DEPDIR)/fs2-animplay.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-animplay.obj `if test -f 'anim/animplay.cpp'; then $(CYGPATH_W) 'anim/animplay.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/animplay.cpp'; fi`

fs2-packunpack.o: anim/packunpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-packunpack.o -MD -MP -MF "$(DEPDIR)/fs2-packunpack.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-packunpack.o `test -f 'anim/packunpack.cpp' || echo '$(srcdir)/'`anim/packunpack.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-packunpack.Tpo" "$(DEPDIR)/fs2-packunpack.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-packunpack.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/packunpack.cpp' object='fs2-packunpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-packunpack.Po' tmpdepfile='$(DEPDIR)/fs2-packunpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-packunpack.o `test -f 'anim/packunpack.cpp' || echo '$(srcdir)/'`anim/packunpack.cpp

fs2-packunpack.obj: anim/packunpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-packunpack.obj -MD -MP -MF "$(DEPDIR)/fs2-packunpack.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-packunpack.obj `if test -f 'anim/packunpack.cpp'; then $(CYGPATH_W) 'anim/packunpack.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/packunpack.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-packunpack.Tpo" "$(DEPDIR)/fs2-packunpack.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-packunpack.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/packunpack.cpp' object='fs2-packunpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-packunpack.Po' tmpdepfile='$(DEPDIR)/fs2-packunpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-packunpack.obj `if test -f 'anim/packunpack.cpp'; then $(CYGPATH_W) 'anim/packunpack.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/packunpack.cpp'; fi`

fs2-asteroid.o: asteroid/asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-asteroid.o -MD -MP -MF "$(DEPDIR)/fs2-asteroid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-asteroid.o `test -f 'asteroid/asteroid.cpp' || echo '$(srcdir)/'`asteroid/asteroid.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-asteroid.Tpo" "$(DEPDIR)/fs2-asteroid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-asteroid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid/asteroid.cpp' object='fs2-asteroid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-asteroid.Po' tmpdepfile='$(DEPDIR)/fs2-asteroid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-asteroid.o `test -f 'asteroid/asteroid.cpp' || echo '$(srcdir)/'`asteroid/asteroid.cpp

fs2-asteroid.obj: asteroid/asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-asteroid.obj -MD -MP -MF "$(DEPDIR)/fs2-asteroid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-asteroid.obj `if test -f 'asteroid/asteroid.cpp'; then $(CYGPATH_W) 'asteroid/asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid/asteroid.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-asteroid.Tpo" "$(DEPDIR)/fs2-asteroid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-asteroid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid/asteroid.cpp' object='fs2-asteroid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-asteroid.Po' tmpdepfile='$(DEPDIR)/fs2-asteroid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-asteroid.obj `if test -f 'asteroid/asteroid.cpp'; then $(CYGPATH_W) 'asteroid/asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid/asteroid.cpp'; fi`

fs2-bmpman.o: bmpman/bmpman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-bmpman.o -MD -MP -MF "$(DEPDIR)/fs2-bmpman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-bmpman.o `test -f 'bmpman/bmpman.cpp' || echo '$(srcdir)/'`bmpman/bmpman.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-bmpman.Tpo" "$(DEPDIR)/fs2-bmpman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-bmpman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bmpman/bmpman.cpp' object='fs2-bmpman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-bmpman.Po' tmpdepfile='$(DEPDIR)/fs2-bmpman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-bmpman.o `test -f 'bmpman/bmpman.cpp' || echo '$(srcdir)/'`bmpman/bmpman.cpp

fs2-bmpman.obj: bmpman/bmpman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-bmpman.obj -MD -MP -MF "$(DEPDIR)/fs2-bmpman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-bmpman.obj `if test -f 'bmpman/bmpman.cpp'; then $(CYGPATH_W) 'bmpman/bmpman.cpp'; else $(CYGPATH_W) '$(srcdir)/bmpman/bmpman.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-bmpman.Tpo" "$(DEPDIR)/fs2-bmpman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-bmpman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bmpman/bmpman.cpp' object='fs2-bmpman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-bmpman.Po' tmpdepfile='$(DEPDIR)/fs2-bmpman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-bmpman.obj `if test -f 'bmpman/bmpman.cpp'; then $(CYGPATH_W) 'bmpman/bmpman.cpp'; else $(CYGPATH_W) '$(srcdir)/bmpman/bmpman.cpp'; fi`

fs2-cfile.o: cfile/cfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfile.o -MD -MP -MF "$(DEPDIR)/fs2-cfile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfile.o `test -f 'cfile/cfile.cpp' || echo '$(srcdir)/'`cfile/cfile.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfile.Tpo" "$(DEPDIR)/fs2-cfile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfile.cpp' object='fs2-cfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfile.Po' tmpdepfile='$(DEPDIR)/fs2-cfile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfile.o `test -f 'cfile/cfile.cpp' || echo '$(srcdir)/'`cfile/cfile.cpp

fs2-cfile.obj: cfile/cfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfile.obj -MD -MP -MF "$(DEPDIR)/fs2-cfile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfile.obj `if test -f 'cfile/cfile.cpp'; then $(CYGPATH_W) 'cfile/cfile.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfile.Tpo" "$(DEPDIR)/fs2-cfile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfile.cpp' object='fs2-cfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfile.Po' tmpdepfile='$(DEPDIR)/fs2-cfile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfile.obj `if test -f 'cfile/cfile.cpp'; then $(CYGPATH_W) 'cfile/cfile.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfile.cpp'; fi`

fs2-cfilearchive.o: cfile/cfilearchive.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilearchive.o -MD -MP -MF "$(DEPDIR)/fs2-cfilearchive.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilearchive.o `test -f 'cfile/cfilearchive.cpp' || echo '$(srcdir)/'`cfile/cfilearchive.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilearchive.Tpo" "$(DEPDIR)/fs2-cfilearchive.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilearchive.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilearchive.cpp' object='fs2-cfilearchive.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilearchive.Po' tmpdepfile='$(DEPDIR)/fs2-cfilearchive.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilearchive.o `test -f 'cfile/cfilearchive.cpp' || echo '$(srcdir)/'`cfile/cfilearchive.cpp

fs2-cfilearchive.obj: cfile/cfilearchive.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilearchive.obj -MD -MP -MF "$(DEPDIR)/fs2-cfilearchive.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilearchive.obj `if test -f 'cfile/cfilearchive.cpp'; then $(CYGPATH_W) 'cfile/cfilearchive.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilearchive.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilearchive.Tpo" "$(DEPDIR)/fs2-cfilearchive.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilearchive.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilearchive.cpp' object='fs2-cfilearchive.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilearchive.Po' tmpdepfile='$(DEPDIR)/fs2-cfilearchive.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilearchive.obj `if test -f 'cfile/cfilearchive.cpp'; then $(CYGPATH_W) 'cfile/cfilearchive.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilearchive.cpp'; fi`

fs2-cfilelist.o: cfile/cfilelist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilelist.o -MD -MP -MF "$(DEPDIR)/fs2-cfilelist.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilelist.o `test -f 'cfile/cfilelist.cpp' || echo '$(srcdir)/'`cfile/cfilelist.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilelist.Tpo" "$(DEPDIR)/fs2-cfilelist.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilelist.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilelist.cpp' object='fs2-cfilelist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilelist.Po' tmpdepfile='$(DEPDIR)/fs2-cfilelist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilelist.o `test -f 'cfile/cfilelist.cpp' || echo '$(srcdir)/'`cfile/cfilelist.cpp

fs2-cfilelist.obj: cfile/cfilelist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilelist.obj -MD -MP -MF "$(DEPDIR)/fs2-cfilelist.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilelist.obj `if test -f 'cfile/cfilelist.cpp'; then $(CYGPATH_W) 'cfile/cfilelist.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilelist.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilelist.Tpo" "$(DEPDIR)/fs2-cfilelist.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilelist.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilelist.cpp' object='fs2-cfilelist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilelist.Po' tmpdepfile='$(DEPDIR)/fs2-cfilelist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilelist.obj `if test -f 'cfile/cfilelist.cpp'; then $(CYGPATH_W) 'cfile/cfilelist.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilelist.cpp'; fi`

fs2-cfilesystem.o: cfile/cfilesystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilesystem.o -MD -MP -MF "$(DEPDIR)/fs2-cfilesystem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilesystem.o `test -f 'cfile/cfilesystem.cpp' || echo '$(srcdir)/'`cfile/cfilesystem.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilesystem.Tpo" "$(DEPDIR)/fs2-cfilesystem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilesystem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilesystem.cpp' object='fs2-cfilesystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilesystem.Po' tmpdepfile='$(DEPDIR)/fs2-cfilesystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilesystem.o `test -f 'cfile/cfilesystem.cpp' || echo '$(srcdir)/'`cfile/cfilesystem.cpp

fs2-cfilesystem.obj: cfile/cfilesystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cfilesystem.obj -MD -MP -MF "$(DEPDIR)/fs2-cfilesystem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cfilesystem.obj `if test -f 'cfile/cfilesystem.cpp'; then $(CYGPATH_W) 'cfile/cfilesystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilesystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cfilesystem.Tpo" "$(DEPDIR)/fs2-cfilesystem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cfilesystem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilesystem.cpp' object='fs2-cfilesystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cfilesystem.Po' tmpdepfile='$(DEPDIR)/fs2-cfilesystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cfilesystem.obj `if test -f 'cfile/cfilesystem.cpp'; then $(CYGPATH_W) 'cfile/cfilesystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilesystem.cpp'; fi`

fs2-cmdline.o: cmdline/cmdline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cmdline.o -MD -MP -MF "$(DEPDIR)/fs2-cmdline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cmdline.o `test -f 'cmdline/cmdline.cpp' || echo '$(srcdir)/'`cmdline/cmdline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cmdline.Tpo" "$(DEPDIR)/fs2-cmdline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cmdline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmdline/cmdline.cpp' object='fs2-cmdline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cmdline.Po' tmpdepfile='$(DEPDIR)/fs2-cmdline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cmdline.o `test -f 'cmdline/cmdline.cpp' || echo '$(srcdir)/'`cmdline/cmdline.cpp

fs2-cmdline.obj: cmdline/cmdline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cmdline.obj -MD -MP -MF "$(DEPDIR)/fs2-cmdline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cmdline.obj `if test -f 'cmdline/cmdline.cpp'; then $(CYGPATH_W) 'cmdline/cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline/cmdline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cmdline.Tpo" "$(DEPDIR)/fs2-cmdline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cmdline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmdline/cmdline.cpp' object='fs2-cmdline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cmdline.Po' tmpdepfile='$(DEPDIR)/fs2-cmdline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cmdline.obj `if test -f 'cmdline/cmdline.cpp'; then $(CYGPATH_W) 'cmdline/cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline/cmdline.cpp'; fi`

fs2-cmeasure.o: cmeasure/cmeasure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cmeasure.o -MD -MP -MF "$(DEPDIR)/fs2-cmeasure.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cmeasure.o `test -f 'cmeasure/cmeasure.cpp' || echo '$(srcdir)/'`cmeasure/cmeasure.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cmeasure.Tpo" "$(DEPDIR)/fs2-cmeasure.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cmeasure.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmeasure/cmeasure.cpp' object='fs2-cmeasure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cmeasure.Po' tmpdepfile='$(DEPDIR)/fs2-cmeasure.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cmeasure.o `test -f 'cmeasure/cmeasure.cpp' || echo '$(srcdir)/'`cmeasure/cmeasure.cpp

fs2-cmeasure.obj: cmeasure/cmeasure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cmeasure.obj -MD -MP -MF "$(DEPDIR)/fs2-cmeasure.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cmeasure.obj `if test -f 'cmeasure/cmeasure.cpp'; then $(CYGPATH_W) 'cmeasure/cmeasure.cpp'; else $(CYGPATH_W) '$(srcdir)/cmeasure/cmeasure.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cmeasure.Tpo" "$(DEPDIR)/fs2-cmeasure.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cmeasure.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmeasure/cmeasure.cpp' object='fs2-cmeasure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cmeasure.Po' tmpdepfile='$(DEPDIR)/fs2-cmeasure.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cmeasure.obj `if test -f 'cmeasure/cmeasure.cpp'; then $(CYGPATH_W) 'cmeasure/cmeasure.cpp'; else $(CYGPATH_W) '$(srcdir)/cmeasure/cmeasure.cpp'; fi`

fs2-controlsconfig.o: controlconfig/controlsconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-controlsconfig.o -MD -MP -MF "$(DEPDIR)/fs2-controlsconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-controlsconfig.o `test -f 'controlconfig/controlsconfig.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-controlsconfig.Tpo" "$(DEPDIR)/fs2-controlsconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-controlsconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfig.cpp' object='fs2-controlsconfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-controlsconfig.Po' tmpdepfile='$(DEPDIR)/fs2-controlsconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-controlsconfig.o `test -f 'controlconfig/controlsconfig.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfig.cpp

fs2-controlsconfig.obj: controlconfig/controlsconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-controlsconfig.obj -MD -MP -MF "$(DEPDIR)/fs2-controlsconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-controlsconfig.obj `if test -f 'controlconfig/controlsconfig.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-controlsconfig.Tpo" "$(DEPDIR)/fs2-controlsconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-controlsconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfig.cpp' object='fs2-controlsconfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-controlsconfig.Po' tmpdepfile='$(DEPDIR)/fs2-controlsconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-controlsconfig.obj `if test -f 'controlconfig/controlsconfig.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfig.cpp'; fi`

fs2-controlsconfigcommon.o: controlconfig/controlsconfigcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-controlsconfigcommon.o -MD -MP -MF "$(DEPDIR)/fs2-controlsconfigcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-controlsconfigcommon.o `test -f 'controlconfig/controlsconfigcommon.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfigcommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-controlsconfigcommon.Tpo" "$(DEPDIR)/fs2-controlsconfigcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-controlsconfigcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfigcommon.cpp' object='fs2-controlsconfigcommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-controlsconfigcommon.Po' tmpdepfile='$(DEPDIR)/fs2-controlsconfigcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-controlsconfigcommon.o `test -f 'controlconfig/controlsconfigcommon.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfigcommon.cpp

fs2-controlsconfigcommon.obj: controlconfig/controlsconfigcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-controlsconfigcommon.obj -MD -MP -MF "$(DEPDIR)/fs2-controlsconfigcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-controlsconfigcommon.obj `if test -f 'controlconfig/controlsconfigcommon.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfigcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfigcommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-controlsconfigcommon.Tpo" "$(DEPDIR)/fs2-controlsconfigcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-controlsconfigcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfigcommon.cpp' object='fs2-controlsconfigcommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-controlsconfigcommon.Po' tmpdepfile='$(DEPDIR)/fs2-controlsconfigcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-controlsconfigcommon.obj `if test -f 'controlconfig/controlsconfigcommon.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfigcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfigcommon.cpp'; fi`

fs2-cutscenes.o: cutscene/cutscenes.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cutscenes.o -MD -MP -MF "$(DEPDIR)/fs2-cutscenes.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cutscenes.o `test -f 'cutscene/cutscenes.cpp' || echo '$(srcdir)/'`cutscene/cutscenes.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cutscenes.Tpo" "$(DEPDIR)/fs2-cutscenes.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cutscenes.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/cutscenes.cpp' object='fs2-cutscenes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cutscenes.Po' tmpdepfile='$(DEPDIR)/fs2-cutscenes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cutscenes.o `test -f 'cutscene/cutscenes.cpp' || echo '$(srcdir)/'`cutscene/cutscenes.cpp

fs2-cutscenes.obj: cutscene/cutscenes.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-cutscenes.obj -MD -MP -MF "$(DEPDIR)/fs2-cutscenes.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-cutscenes.obj `if test -f 'cutscene/cutscenes.cpp'; then $(CYGPATH_W) 'cutscene/cutscenes.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/cutscenes.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-cutscenes.Tpo" "$(DEPDIR)/fs2-cutscenes.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-cutscenes.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/cutscenes.cpp' object='fs2-cutscenes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-cutscenes.Po' tmpdepfile='$(DEPDIR)/fs2-cutscenes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-cutscenes.obj `if test -f 'cutscene/cutscenes.cpp'; then $(CYGPATH_W) 'cutscene/cutscenes.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/cutscenes.cpp'; fi`

fs2-debris.o: debris/debris.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-debris.o -MD -MP -MF "$(DEPDIR)/fs2-debris.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-debris.o `test -f 'debris/debris.cpp' || echo '$(srcdir)/'`debris/debris.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-debris.Tpo" "$(DEPDIR)/fs2-debris.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-debris.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debris/debris.cpp' object='fs2-debris.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-debris.Po' tmpdepfile='$(DEPDIR)/fs2-debris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-debris.o `test -f 'debris/debris.cpp' || echo '$(srcdir)/'`debris/debris.cpp

fs2-debris.obj: debris/debris.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-debris.obj -MD -MP -MF "$(DEPDIR)/fs2-debris.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-debris.obj `if test -f 'debris/debris.cpp'; then $(CYGPATH_W) 'debris/debris.cpp'; else $(CYGPATH_W) '$(srcdir)/debris/debris.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-debris.Tpo" "$(DEPDIR)/fs2-debris.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-debris.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debris/debris.cpp' object='fs2-debris.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-debris.Po' tmpdepfile='$(DEPDIR)/fs2-debris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-debris.obj `if test -f 'debris/debris.cpp'; then $(CYGPATH_W) 'debris/debris.cpp'; else $(CYGPATH_W) '$(srcdir)/debris/debris.cpp'; fi`

fs2-console.o: debugconsole/console.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-console.o -MD -MP -MF "$(DEPDIR)/fs2-console.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-console.o `test -f 'debugconsole/console.cpp' || echo '$(srcdir)/'`debugconsole/console.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-console.Tpo" "$(DEPDIR)/fs2-console.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-console.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debugconsole/console.cpp' object='fs2-console.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-console.Po' tmpdepfile='$(DEPDIR)/fs2-console.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-console.o `test -f 'debugconsole/console.cpp' || echo '$(srcdir)/'`debugconsole/console.cpp

fs2-console.obj: debugconsole/console.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-console.obj -MD -MP -MF "$(DEPDIR)/fs2-console.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-console.obj `if test -f 'debugconsole/console.cpp'; then $(CYGPATH_W) 'debugconsole/console.cpp'; else $(CYGPATH_W) '$(srcdir)/debugconsole/console.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-console.Tpo" "$(DEPDIR)/fs2-console.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-console.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debugconsole/console.cpp' object='fs2-console.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-console.Po' tmpdepfile='$(DEPDIR)/fs2-console.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-console.obj `if test -f 'debugconsole/console.cpp'; then $(CYGPATH_W) 'debugconsole/console.cpp'; else $(CYGPATH_W) '$(srcdir)/debugconsole/console.cpp'; fi`

fs2-decals.o: decals/decals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-decals.o -MD -MP -MF "$(DEPDIR)/fs2-decals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-decals.o `test -f 'decals/decals.cpp' || echo '$(srcdir)/'`decals/decals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-decals.Tpo" "$(DEPDIR)/fs2-decals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-decals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='decals/decals.cpp' object='fs2-decals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-decals.Po' tmpdepfile='$(DEPDIR)/fs2-decals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-decals.o `test -f 'decals/decals.cpp' || echo '$(srcdir)/'`decals/decals.cpp

fs2-decals.obj: decals/decals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-decals.obj -MD -MP -MF "$(DEPDIR)/fs2-decals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-decals.obj `if test -f 'decals/decals.cpp'; then $(CYGPATH_W) 'decals/decals.cpp'; else $(CYGPATH_W) '$(srcdir)/decals/decals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-decals.Tpo" "$(DEPDIR)/fs2-decals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-decals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='decals/decals.cpp' object='fs2-decals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-decals.Po' tmpdepfile='$(DEPDIR)/fs2-decals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-decals.obj `if test -f 'decals/decals.cpp'; then $(CYGPATH_W) 'decals/decals.cpp'; else $(CYGPATH_W) '$(srcdir)/decals/decals.cpp'; fi`

fs2-demo.o: demo/demo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-demo.o -MD -MP -MF "$(DEPDIR)/fs2-demo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-demo.o `test -f 'demo/demo.cpp' || echo '$(srcdir)/'`demo/demo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-demo.Tpo" "$(DEPDIR)/fs2-demo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-demo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='demo/demo.cpp' object='fs2-demo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-demo.Po' tmpdepfile='$(DEPDIR)/fs2-demo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-demo.o `test -f 'demo/demo.cpp' || echo '$(srcdir)/'`demo/demo.cpp

fs2-demo.obj: demo/demo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-demo.obj -MD -MP -MF "$(DEPDIR)/fs2-demo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-demo.obj `if test -f 'demo/demo.cpp'; then $(CYGPATH_W) 'demo/demo.cpp'; else $(CYGPATH_W) '$(srcdir)/demo/demo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-demo.Tpo" "$(DEPDIR)/fs2-demo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-demo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='demo/demo.cpp' object='fs2-demo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-demo.Po' tmpdepfile='$(DEPDIR)/fs2-demo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-demo.obj `if test -f 'demo/demo.cpp'; then $(CYGPATH_W) 'demo/demo.cpp'; else $(CYGPATH_W) '$(srcdir)/demo/demo.cpp'; fi`

fs2-exceptionhandler.o: exceptionhandler/exceptionhandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-exceptionhandler.o -MD -MP -MF "$(DEPDIR)/fs2-exceptionhandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-exceptionhandler.o `test -f 'exceptionhandler/exceptionhandler.cpp' || echo '$(srcdir)/'`exceptionhandler/exceptionhandler.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-exceptionhandler.Tpo" "$(DEPDIR)/fs2-exceptionhandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-exceptionhandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='exceptionhandler/exceptionhandler.cpp' object='fs2-exceptionhandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-exceptionhandler.Po' tmpdepfile='$(DEPDIR)/fs2-exceptionhandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-exceptionhandler.o `test -f 'exceptionhandler/exceptionhandler.cpp' || echo '$(srcdir)/'`exceptionhandler/exceptionhandler.cpp

fs2-exceptionhandler.obj: exceptionhandler/exceptionhandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-exceptionhandler.obj -MD -MP -MF "$(DEPDIR)/fs2-exceptionhandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-exceptionhandler.obj `if test -f 'exceptionhandler/exceptionhandler.cpp'; then $(CYGPATH_W) 'exceptionhandler/exceptionhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/exceptionhandler/exceptionhandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-exceptionhandler.Tpo" "$(DEPDIR)/fs2-exceptionhandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-exceptionhandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='exceptionhandler/exceptionhandler.cpp' object='fs2-exceptionhandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-exceptionhandler.Po' tmpdepfile='$(DEPDIR)/fs2-exceptionhandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-exceptionhandler.obj `if test -f 'exceptionhandler/exceptionhandler.cpp'; then $(CYGPATH_W) 'exceptionhandler/exceptionhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/exceptionhandler/exceptionhandler.cpp'; fi`

fs2-fireballs.o: fireball/fireballs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fireballs.o -MD -MP -MF "$(DEPDIR)/fs2-fireballs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fireballs.o `test -f 'fireball/fireballs.cpp' || echo '$(srcdir)/'`fireball/fireballs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fireballs.Tpo" "$(DEPDIR)/fs2-fireballs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fireballs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/fireballs.cpp' object='fs2-fireballs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fireballs.Po' tmpdepfile='$(DEPDIR)/fs2-fireballs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fireballs.o `test -f 'fireball/fireballs.cpp' || echo '$(srcdir)/'`fireball/fireballs.cpp

fs2-fireballs.obj: fireball/fireballs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fireballs.obj -MD -MP -MF "$(DEPDIR)/fs2-fireballs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fireballs.obj `if test -f 'fireball/fireballs.cpp'; then $(CYGPATH_W) 'fireball/fireballs.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/fireballs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fireballs.Tpo" "$(DEPDIR)/fs2-fireballs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fireballs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/fireballs.cpp' object='fs2-fireballs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fireballs.Po' tmpdepfile='$(DEPDIR)/fs2-fireballs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fireballs.obj `if test -f 'fireball/fireballs.cpp'; then $(CYGPATH_W) 'fireball/fireballs.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/fireballs.cpp'; fi`

fs2-warpineffect.o: fireball/warpineffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-warpineffect.o -MD -MP -MF "$(DEPDIR)/fs2-warpineffect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-warpineffect.o `test -f 'fireball/warpineffect.cpp' || echo '$(srcdir)/'`fireball/warpineffect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-warpineffect.Tpo" "$(DEPDIR)/fs2-warpineffect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-warpineffect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/warpineffect.cpp' object='fs2-warpineffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-warpineffect.Po' tmpdepfile='$(DEPDIR)/fs2-warpineffect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-warpineffect.o `test -f 'fireball/warpineffect.cpp' || echo '$(srcdir)/'`fireball/warpineffect.cpp

fs2-warpineffect.obj: fireball/warpineffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-warpineffect.obj -MD -MP -MF "$(DEPDIR)/fs2-warpineffect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-warpineffect.obj `if test -f 'fireball/warpineffect.cpp'; then $(CYGPATH_W) 'fireball/warpineffect.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/warpineffect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-warpineffect.Tpo" "$(DEPDIR)/fs2-warpineffect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-warpineffect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/warpineffect.cpp' object='fs2-warpineffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-warpineffect.Po' tmpdepfile='$(DEPDIR)/fs2-warpineffect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-warpineffect.obj `if test -f 'fireball/warpineffect.cpp'; then $(CYGPATH_W) 'fireball/warpineffect.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/warpineffect.cpp'; fi`

fs2-freespace.o: freespace2/freespace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-freespace.o -MD -MP -MF "$(DEPDIR)/fs2-freespace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-freespace.o `test -f 'freespace2/freespace.cpp' || echo '$(srcdir)/'`freespace2/freespace.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-freespace.Tpo" "$(DEPDIR)/fs2-freespace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-freespace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/freespace.cpp' object='fs2-freespace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-freespace.Po' tmpdepfile='$(DEPDIR)/fs2-freespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-freespace.o `test -f 'freespace2/freespace.cpp' || echo '$(srcdir)/'`freespace2/freespace.cpp

fs2-freespace.obj: freespace2/freespace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-freespace.obj -MD -MP -MF "$(DEPDIR)/fs2-freespace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-freespace.obj `if test -f 'freespace2/freespace.cpp'; then $(CYGPATH_W) 'freespace2/freespace.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/freespace.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-freespace.Tpo" "$(DEPDIR)/fs2-freespace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-freespace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/freespace.cpp' object='fs2-freespace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-freespace.Po' tmpdepfile='$(DEPDIR)/fs2-freespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-freespace.obj `if test -f 'freespace2/freespace.cpp'; then $(CYGPATH_W) 'freespace2/freespace.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/freespace.cpp'; fi`

fs2-levelpaging.o: freespace2/levelpaging.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-levelpaging.o -MD -MP -MF "$(DEPDIR)/fs2-levelpaging.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-levelpaging.o `test -f 'freespace2/levelpaging.cpp' || echo '$(srcdir)/'`freespace2/levelpaging.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-levelpaging.Tpo" "$(DEPDIR)/fs2-levelpaging.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-levelpaging.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/levelpaging.cpp' object='fs2-levelpaging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-levelpaging.Po' tmpdepfile='$(DEPDIR)/fs2-levelpaging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-levelpaging.o `test -f 'freespace2/levelpaging.cpp' || echo '$(srcdir)/'`freespace2/levelpaging.cpp

fs2-levelpaging.obj: freespace2/levelpaging.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-levelpaging.obj -MD -MP -MF "$(DEPDIR)/fs2-levelpaging.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-levelpaging.obj `if test -f 'freespace2/levelpaging.cpp'; then $(CYGPATH_W) 'freespace2/levelpaging.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/levelpaging.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-levelpaging.Tpo" "$(DEPDIR)/fs2-levelpaging.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-levelpaging.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/levelpaging.cpp' object='fs2-levelpaging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-levelpaging.Po' tmpdepfile='$(DEPDIR)/fs2-levelpaging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-levelpaging.obj `if test -f 'freespace2/levelpaging.cpp'; then $(CYGPATH_W) 'freespace2/levelpaging.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/levelpaging.cpp'; fi`

fs2-contexthelp.o: gamehelp/contexthelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-contexthelp.o -MD -MP -MF "$(DEPDIR)/fs2-contexthelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-contexthelp.o `test -f 'gamehelp/contexthelp.cpp' || echo '$(srcdir)/'`gamehelp/contexthelp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-contexthelp.Tpo" "$(DEPDIR)/fs2-contexthelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-contexthelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/contexthelp.cpp' object='fs2-contexthelp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-contexthelp.Po' tmpdepfile='$(DEPDIR)/fs2-contexthelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-contexthelp.o `test -f 'gamehelp/contexthelp.cpp' || echo '$(srcdir)/'`gamehelp/contexthelp.cpp

fs2-contexthelp.obj: gamehelp/contexthelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-contexthelp.obj -MD -MP -MF "$(DEPDIR)/fs2-contexthelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-contexthelp.obj `if test -f 'gamehelp/contexthelp.cpp'; then $(CYGPATH_W) 'gamehelp/contexthelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/contexthelp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-contexthelp.Tpo" "$(DEPDIR)/fs2-contexthelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-contexthelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/contexthelp.cpp' object='fs2-contexthelp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-contexthelp.Po' tmpdepfile='$(DEPDIR)/fs2-contexthelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-contexthelp.obj `if test -f 'gamehelp/contexthelp.cpp'; then $(CYGPATH_W) 'gamehelp/contexthelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/contexthelp.cpp'; fi`

fs2-gameplayhelp.o: gamehelp/gameplayhelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gameplayhelp.o -MD -MP -MF "$(DEPDIR)/fs2-gameplayhelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gameplayhelp.o `test -f 'gamehelp/gameplayhelp.cpp' || echo '$(srcdir)/'`gamehelp/gameplayhelp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gameplayhelp.Tpo" "$(DEPDIR)/fs2-gameplayhelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gameplayhelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/gameplayhelp.cpp' object='fs2-gameplayhelp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gameplayhelp.Po' tmpdepfile='$(DEPDIR)/fs2-gameplayhelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gameplayhelp.o `test -f 'gamehelp/gameplayhelp.cpp' || echo '$(srcdir)/'`gamehelp/gameplayhelp.cpp

fs2-gameplayhelp.obj: gamehelp/gameplayhelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gameplayhelp.obj -MD -MP -MF "$(DEPDIR)/fs2-gameplayhelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gameplayhelp.obj `if test -f 'gamehelp/gameplayhelp.cpp'; then $(CYGPATH_W) 'gamehelp/gameplayhelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/gameplayhelp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gameplayhelp.Tpo" "$(DEPDIR)/fs2-gameplayhelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gameplayhelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/gameplayhelp.cpp' object='fs2-gameplayhelp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gameplayhelp.Po' tmpdepfile='$(DEPDIR)/fs2-gameplayhelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gameplayhelp.obj `if test -f 'gamehelp/gameplayhelp.cpp'; then $(CYGPATH_W) 'gamehelp/gameplayhelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/gameplayhelp.cpp'; fi`

fs2-gamesequence.o: gamesequence/gamesequence.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gamesequence.o -MD -MP -MF "$(DEPDIR)/fs2-gamesequence.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gamesequence.o `test -f 'gamesequence/gamesequence.cpp' || echo '$(srcdir)/'`gamesequence/gamesequence.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gamesequence.Tpo" "$(DEPDIR)/fs2-gamesequence.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gamesequence.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesequence/gamesequence.cpp' object='fs2-gamesequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gamesequence.Po' tmpdepfile='$(DEPDIR)/fs2-gamesequence.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gamesequence.o `test -f 'gamesequence/gamesequence.cpp' || echo '$(srcdir)/'`gamesequence/gamesequence.cpp

fs2-gamesequence.obj: gamesequence/gamesequence.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gamesequence.obj -MD -MP -MF "$(DEPDIR)/fs2-gamesequence.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gamesequence.obj `if test -f 'gamesequence/gamesequence.cpp'; then $(CYGPATH_W) 'gamesequence/gamesequence.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesequence/gamesequence.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gamesequence.Tpo" "$(DEPDIR)/fs2-gamesequence.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gamesequence.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesequence/gamesequence.cpp' object='fs2-gamesequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gamesequence.Po' tmpdepfile='$(DEPDIR)/fs2-gamesequence.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gamesequence.obj `if test -f 'gamesequence/gamesequence.cpp'; then $(CYGPATH_W) 'gamesequence/gamesequence.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesequence/gamesequence.cpp'; fi`

fs2-alphacolors.o: globalincs/alphacolors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-alphacolors.o -MD -MP -MF "$(DEPDIR)/fs2-alphacolors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-alphacolors.o `test -f 'globalincs/alphacolors.cpp' || echo '$(srcdir)/'`globalincs/alphacolors.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-alphacolors.Tpo" "$(DEPDIR)/fs2-alphacolors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-alphacolors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/alphacolors.cpp' object='fs2-alphacolors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-alphacolors.Po' tmpdepfile='$(DEPDIR)/fs2-alphacolors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-alphacolors.o `test -f 'globalincs/alphacolors.cpp' || echo '$(srcdir)/'`globalincs/alphacolors.cpp

fs2-alphacolors.obj: globalincs/alphacolors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-alphacolors.obj -MD -MP -MF "$(DEPDIR)/fs2-alphacolors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-alphacolors.obj `if test -f 'globalincs/alphacolors.cpp'; then $(CYGPATH_W) 'globalincs/alphacolors.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/alphacolors.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-alphacolors.Tpo" "$(DEPDIR)/fs2-alphacolors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-alphacolors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/alphacolors.cpp' object='fs2-alphacolors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-alphacolors.Po' tmpdepfile='$(DEPDIR)/fs2-alphacolors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-alphacolors.obj `if test -f 'globalincs/alphacolors.cpp'; then $(CYGPATH_W) 'globalincs/alphacolors.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/alphacolors.cpp'; fi`

fs2-crypt.o: globalincs/crypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-crypt.o -MD -MP -MF "$(DEPDIR)/fs2-crypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-crypt.o `test -f 'globalincs/crypt.cpp' || echo '$(srcdir)/'`globalincs/crypt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-crypt.Tpo" "$(DEPDIR)/fs2-crypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-crypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/crypt.cpp' object='fs2-crypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-crypt.Po' tmpdepfile='$(DEPDIR)/fs2-crypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-crypt.o `test -f 'globalincs/crypt.cpp' || echo '$(srcdir)/'`globalincs/crypt.cpp

fs2-crypt.obj: globalincs/crypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-crypt.obj -MD -MP -MF "$(DEPDIR)/fs2-crypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-crypt.obj `if test -f 'globalincs/crypt.cpp'; then $(CYGPATH_W) 'globalincs/crypt.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/crypt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-crypt.Tpo" "$(DEPDIR)/fs2-crypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-crypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/crypt.cpp' object='fs2-crypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-crypt.Po' tmpdepfile='$(DEPDIR)/fs2-crypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-crypt.obj `if test -f 'globalincs/crypt.cpp'; then $(CYGPATH_W) 'globalincs/crypt.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/crypt.cpp'; fi`

fs2-systemvars.o: globalincs/systemvars.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-systemvars.o -MD -MP -MF "$(DEPDIR)/fs2-systemvars.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-systemvars.o `test -f 'globalincs/systemvars.cpp' || echo '$(srcdir)/'`globalincs/systemvars.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-systemvars.Tpo" "$(DEPDIR)/fs2-systemvars.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-systemvars.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/systemvars.cpp' object='fs2-systemvars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-systemvars.Po' tmpdepfile='$(DEPDIR)/fs2-systemvars.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-systemvars.o `test -f 'globalincs/systemvars.cpp' || echo '$(srcdir)/'`globalincs/systemvars.cpp

fs2-systemvars.obj: globalincs/systemvars.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-systemvars.obj -MD -MP -MF "$(DEPDIR)/fs2-systemvars.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-systemvars.obj `if test -f 'globalincs/systemvars.cpp'; then $(CYGPATH_W) 'globalincs/systemvars.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/systemvars.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-systemvars.Tpo" "$(DEPDIR)/fs2-systemvars.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-systemvars.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/systemvars.cpp' object='fs2-systemvars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-systemvars.Po' tmpdepfile='$(DEPDIR)/fs2-systemvars.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-systemvars.obj `if test -f 'globalincs/systemvars.cpp'; then $(CYGPATH_W) 'globalincs/systemvars.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/systemvars.cpp'; fi`

fs2-version.o: globalincs/version.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-version.o -MD -MP -MF "$(DEPDIR)/fs2-version.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-version.o `test -f 'globalincs/version.cpp' || echo '$(srcdir)/'`globalincs/version.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-version.Tpo" "$(DEPDIR)/fs2-version.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-version.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/version.cpp' object='fs2-version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-version.Po' tmpdepfile='$(DEPDIR)/fs2-version.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-version.o `test -f 'globalincs/version.cpp' || echo '$(srcdir)/'`globalincs/version.cpp

fs2-version.obj: globalincs/version.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-version.obj -MD -MP -MF "$(DEPDIR)/fs2-version.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-version.obj `if test -f 'globalincs/version.cpp'; then $(CYGPATH_W) 'globalincs/version.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/version.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-version.Tpo" "$(DEPDIR)/fs2-version.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-version.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/version.cpp' object='fs2-version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-version.Po' tmpdepfile='$(DEPDIR)/fs2-version.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-version.obj `if test -f 'globalincs/version.cpp'; then $(CYGPATH_W) 'globalincs/version.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/version.cpp'; fi`

fs2-2d.o: graphics/2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-2d.o -MD -MP -MF "$(DEPDIR)/fs2-2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-2d.o `test -f 'graphics/2d.cpp' || echo '$(srcdir)/'`graphics/2d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-2d.Tpo" "$(DEPDIR)/fs2-2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/2d.cpp' object='fs2-2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-2d.Po' tmpdepfile='$(DEPDIR)/fs2-2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-2d.o `test -f 'graphics/2d.cpp' || echo '$(srcdir)/'`graphics/2d.cpp

fs2-2d.obj: graphics/2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-2d.obj -MD -MP -MF "$(DEPDIR)/fs2-2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-2d.obj `if test -f 'graphics/2d.cpp'; then $(CYGPATH_W) 'graphics/2d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-2d.Tpo" "$(DEPDIR)/fs2-2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/2d.cpp' object='fs2-2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-2d.Po' tmpdepfile='$(DEPDIR)/fs2-2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-2d.obj `if test -f 'graphics/2d.cpp'; then $(CYGPATH_W) 'graphics/2d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/2d.cpp'; fi`

fs2-aaline.o: graphics/aaline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aaline.o -MD -MP -MF "$(DEPDIR)/fs2-aaline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aaline.o `test -f 'graphics/aaline.cpp' || echo '$(srcdir)/'`graphics/aaline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aaline.Tpo" "$(DEPDIR)/fs2-aaline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aaline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/aaline.cpp' object='fs2-aaline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aaline.Po' tmpdepfile='$(DEPDIR)/fs2-aaline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aaline.o `test -f 'graphics/aaline.cpp' || echo '$(srcdir)/'`graphics/aaline.cpp

fs2-aaline.obj: graphics/aaline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aaline.obj -MD -MP -MF "$(DEPDIR)/fs2-aaline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aaline.obj `if test -f 'graphics/aaline.cpp'; then $(CYGPATH_W) 'graphics/aaline.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/aaline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aaline.Tpo" "$(DEPDIR)/fs2-aaline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aaline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/aaline.cpp' object='fs2-aaline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aaline.Po' tmpdepfile='$(DEPDIR)/fs2-aaline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aaline.obj `if test -f 'graphics/aaline.cpp'; then $(CYGPATH_W) 'graphics/aaline.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/aaline.cpp'; fi`

fs2-bitblt.o: graphics/bitblt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-bitblt.o -MD -MP -MF "$(DEPDIR)/fs2-bitblt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-bitblt.o `test -f 'graphics/bitblt.cpp' || echo '$(srcdir)/'`graphics/bitblt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-bitblt.Tpo" "$(DEPDIR)/fs2-bitblt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-bitblt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/bitblt.cpp' object='fs2-bitblt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-bitblt.Po' tmpdepfile='$(DEPDIR)/fs2-bitblt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-bitblt.o `test -f 'graphics/bitblt.cpp' || echo '$(srcdir)/'`graphics/bitblt.cpp

fs2-bitblt.obj: graphics/bitblt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-bitblt.obj -MD -MP -MF "$(DEPDIR)/fs2-bitblt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-bitblt.obj `if test -f 'graphics/bitblt.cpp'; then $(CYGPATH_W) 'graphics/bitblt.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/bitblt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-bitblt.Tpo" "$(DEPDIR)/fs2-bitblt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-bitblt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/bitblt.cpp' object='fs2-bitblt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-bitblt.Po' tmpdepfile='$(DEPDIR)/fs2-bitblt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-bitblt.obj `if test -f 'graphics/bitblt.cpp'; then $(CYGPATH_W) 'graphics/bitblt.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/bitblt.cpp'; fi`

fs2-circle.o: graphics/circle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-circle.o -MD -MP -MF "$(DEPDIR)/fs2-circle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-circle.o `test -f 'graphics/circle.cpp' || echo '$(srcdir)/'`graphics/circle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-circle.Tpo" "$(DEPDIR)/fs2-circle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-circle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/circle.cpp' object='fs2-circle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-circle.Po' tmpdepfile='$(DEPDIR)/fs2-circle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-circle.o `test -f 'graphics/circle.cpp' || echo '$(srcdir)/'`graphics/circle.cpp

fs2-circle.obj: graphics/circle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-circle.obj -MD -MP -MF "$(DEPDIR)/fs2-circle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-circle.obj `if test -f 'graphics/circle.cpp'; then $(CYGPATH_W) 'graphics/circle.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/circle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-circle.Tpo" "$(DEPDIR)/fs2-circle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-circle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/circle.cpp' object='fs2-circle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-circle.Po' tmpdepfile='$(DEPDIR)/fs2-circle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-circle.obj `if test -f 'graphics/circle.cpp'; then $(CYGPATH_W) 'graphics/circle.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/circle.cpp'; fi`

fs2-colors.o: graphics/colors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-colors.o -MD -MP -MF "$(DEPDIR)/fs2-colors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-colors.o `test -f 'graphics/colors.cpp' || echo '$(srcdir)/'`graphics/colors.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-colors.Tpo" "$(DEPDIR)/fs2-colors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-colors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/colors.cpp' object='fs2-colors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-colors.Po' tmpdepfile='$(DEPDIR)/fs2-colors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-colors.o `test -f 'graphics/colors.cpp' || echo '$(srcdir)/'`graphics/colors.cpp

fs2-colors.obj: graphics/colors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-colors.obj -MD -MP -MF "$(DEPDIR)/fs2-colors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-colors.obj `if test -f 'graphics/colors.cpp'; then $(CYGPATH_W) 'graphics/colors.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/colors.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-colors.Tpo" "$(DEPDIR)/fs2-colors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-colors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/colors.cpp' object='fs2-colors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-colors.Po' tmpdepfile='$(DEPDIR)/fs2-colors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-colors.obj `if test -f 'graphics/colors.cpp'; then $(CYGPATH_W) 'graphics/colors.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/colors.cpp'; fi`

fs2-font.o: graphics/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-font.o -MD -MP -MF "$(DEPDIR)/fs2-font.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-font.o `test -f 'graphics/font.cpp' || echo '$(srcdir)/'`graphics/font.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-font.Tpo" "$(DEPDIR)/fs2-font.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-font.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/font.cpp' object='fs2-font.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-font.Po' tmpdepfile='$(DEPDIR)/fs2-font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-font.o `test -f 'graphics/font.cpp' || echo '$(srcdir)/'`graphics/font.cpp

fs2-font.obj: graphics/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-font.obj -MD -MP -MF "$(DEPDIR)/fs2-font.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-font.obj `if test -f 'graphics/font.cpp'; then $(CYGPATH_W) 'graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/font.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-font.Tpo" "$(DEPDIR)/fs2-font.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-font.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/font.cpp' object='fs2-font.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-font.Po' tmpdepfile='$(DEPDIR)/fs2-font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-font.obj `if test -f 'graphics/font.cpp'; then $(CYGPATH_W) 'graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/font.cpp'; fi`

fs2-gradient.o: graphics/gradient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gradient.o -MD -MP -MF "$(DEPDIR)/fs2-gradient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gradient.o `test -f 'graphics/gradient.cpp' || echo '$(srcdir)/'`graphics/gradient.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gradient.Tpo" "$(DEPDIR)/fs2-gradient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gradient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gradient.cpp' object='fs2-gradient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gradient.Po' tmpdepfile='$(DEPDIR)/fs2-gradient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gradient.o `test -f 'graphics/gradient.cpp' || echo '$(srcdir)/'`graphics/gradient.cpp

fs2-gradient.obj: graphics/gradient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gradient.obj -MD -MP -MF "$(DEPDIR)/fs2-gradient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gradient.obj `if test -f 'graphics/gradient.cpp'; then $(CYGPATH_W) 'graphics/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gradient.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gradient.Tpo" "$(DEPDIR)/fs2-gradient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gradient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gradient.cpp' object='fs2-gradient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gradient.Po' tmpdepfile='$(DEPDIR)/fs2-gradient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gradient.obj `if test -f 'graphics/gradient.cpp'; then $(CYGPATH_W) 'graphics/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gradient.cpp'; fi`

fs2-gropengl.o: graphics/gropengl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gropengl.o -MD -MP -MF "$(DEPDIR)/fs2-gropengl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gropengl.o `test -f 'graphics/gropengl.cpp' || echo '$(srcdir)/'`graphics/gropengl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gropengl.Tpo" "$(DEPDIR)/fs2-gropengl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gropengl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gropengl.cpp' object='fs2-gropengl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gropengl.Po' tmpdepfile='$(DEPDIR)/fs2-gropengl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gropengl.o `test -f 'graphics/gropengl.cpp' || echo '$(srcdir)/'`graphics/gropengl.cpp

fs2-gropengl.obj: graphics/gropengl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gropengl.obj -MD -MP -MF "$(DEPDIR)/fs2-gropengl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gropengl.obj `if test -f 'graphics/gropengl.cpp'; then $(CYGPATH_W) 'graphics/gropengl.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gropengl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gropengl.Tpo" "$(DEPDIR)/fs2-gropengl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gropengl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gropengl.cpp' object='fs2-gropengl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gropengl.Po' tmpdepfile='$(DEPDIR)/fs2-gropengl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gropengl.obj `if test -f 'graphics/gropengl.cpp'; then $(CYGPATH_W) 'graphics/gropengl.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gropengl.cpp'; fi`

fs2-grzbuffer.o: graphics/grzbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grzbuffer.o -MD -MP -MF "$(DEPDIR)/fs2-grzbuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grzbuffer.o `test -f 'graphics/grzbuffer.cpp' || echo '$(srcdir)/'`graphics/grzbuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grzbuffer.Tpo" "$(DEPDIR)/fs2-grzbuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grzbuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grzbuffer.cpp' object='fs2-grzbuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grzbuffer.Po' tmpdepfile='$(DEPDIR)/fs2-grzbuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grzbuffer.o `test -f 'graphics/grzbuffer.cpp' || echo '$(srcdir)/'`graphics/grzbuffer.cpp

fs2-grzbuffer.obj: graphics/grzbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grzbuffer.obj -MD -MP -MF "$(DEPDIR)/fs2-grzbuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grzbuffer.obj `if test -f 'graphics/grzbuffer.cpp'; then $(CYGPATH_W) 'graphics/grzbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grzbuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grzbuffer.Tpo" "$(DEPDIR)/fs2-grzbuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grzbuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grzbuffer.cpp' object='fs2-grzbuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grzbuffer.Po' tmpdepfile='$(DEPDIR)/fs2-grzbuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grzbuffer.obj `if test -f 'graphics/grzbuffer.cpp'; then $(CYGPATH_W) 'graphics/grzbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grzbuffer.cpp'; fi`

fs2-line.o: graphics/line.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-line.o -MD -MP -MF "$(DEPDIR)/fs2-line.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-line.o `test -f 'graphics/line.cpp' || echo '$(srcdir)/'`graphics/line.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-line.Tpo" "$(DEPDIR)/fs2-line.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-line.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/line.cpp' object='fs2-line.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-line.Po' tmpdepfile='$(DEPDIR)/fs2-line.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-line.o `test -f 'graphics/line.cpp' || echo '$(srcdir)/'`graphics/line.cpp

fs2-line.obj: graphics/line.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-line.obj -MD -MP -MF "$(DEPDIR)/fs2-line.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-line.obj `if test -f 'graphics/line.cpp'; then $(CYGPATH_W) 'graphics/line.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/line.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-line.Tpo" "$(DEPDIR)/fs2-line.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-line.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/line.cpp' object='fs2-line.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-line.Po' tmpdepfile='$(DEPDIR)/fs2-line.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-line.obj `if test -f 'graphics/line.cpp'; then $(CYGPATH_W) 'graphics/line.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/line.cpp'; fi`

fs2-pixel.o: graphics/pixel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-pixel.o -MD -MP -MF "$(DEPDIR)/fs2-pixel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-pixel.o `test -f 'graphics/pixel.cpp' || echo '$(srcdir)/'`graphics/pixel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-pixel.Tpo" "$(DEPDIR)/fs2-pixel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-pixel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/pixel.cpp' object='fs2-pixel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-pixel.Po' tmpdepfile='$(DEPDIR)/fs2-pixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-pixel.o `test -f 'graphics/pixel.cpp' || echo '$(srcdir)/'`graphics/pixel.cpp

fs2-pixel.obj: graphics/pixel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-pixel.obj -MD -MP -MF "$(DEPDIR)/fs2-pixel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-pixel.obj `if test -f 'graphics/pixel.cpp'; then $(CYGPATH_W) 'graphics/pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/pixel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-pixel.Tpo" "$(DEPDIR)/fs2-pixel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-pixel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/pixel.cpp' object='fs2-pixel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-pixel.Po' tmpdepfile='$(DEPDIR)/fs2-pixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-pixel.obj `if test -f 'graphics/pixel.cpp'; then $(CYGPATH_W) 'graphics/pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/pixel.cpp'; fi`

fs2-rect.o: graphics/rect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rect.o -MD -MP -MF "$(DEPDIR)/fs2-rect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rect.o `test -f 'graphics/rect.cpp' || echo '$(srcdir)/'`graphics/rect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rect.Tpo" "$(DEPDIR)/fs2-rect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/rect.cpp' object='fs2-rect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rect.Po' tmpdepfile='$(DEPDIR)/fs2-rect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rect.o `test -f 'graphics/rect.cpp' || echo '$(srcdir)/'`graphics/rect.cpp

fs2-rect.obj: graphics/rect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rect.obj -MD -MP -MF "$(DEPDIR)/fs2-rect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rect.obj `if test -f 'graphics/rect.cpp'; then $(CYGPATH_W) 'graphics/rect.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/rect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rect.Tpo" "$(DEPDIR)/fs2-rect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/rect.cpp' object='fs2-rect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rect.Po' tmpdepfile='$(DEPDIR)/fs2-rect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rect.obj `if test -f 'graphics/rect.cpp'; then $(CYGPATH_W) 'graphics/rect.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/rect.cpp'; fi`

fs2-scaler.o: graphics/scaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scaler.o -MD -MP -MF "$(DEPDIR)/fs2-scaler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scaler.o `test -f 'graphics/scaler.cpp' || echo '$(srcdir)/'`graphics/scaler.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scaler.Tpo" "$(DEPDIR)/fs2-scaler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scaler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/scaler.cpp' object='fs2-scaler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scaler.Po' tmpdepfile='$(DEPDIR)/fs2-scaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scaler.o `test -f 'graphics/scaler.cpp' || echo '$(srcdir)/'`graphics/scaler.cpp

fs2-scaler.obj: graphics/scaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scaler.obj -MD -MP -MF "$(DEPDIR)/fs2-scaler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scaler.obj `if test -f 'graphics/scaler.cpp'; then $(CYGPATH_W) 'graphics/scaler.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/scaler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scaler.Tpo" "$(DEPDIR)/fs2-scaler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scaler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/scaler.cpp' object='fs2-scaler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scaler.Po' tmpdepfile='$(DEPDIR)/fs2-scaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scaler.obj `if test -f 'graphics/scaler.cpp'; then $(CYGPATH_W) 'graphics/scaler.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/scaler.cpp'; fi`

fs2-shade.o: graphics/shade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shade.o -MD -MP -MF "$(DEPDIR)/fs2-shade.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shade.o `test -f 'graphics/shade.cpp' || echo '$(srcdir)/'`graphics/shade.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shade.Tpo" "$(DEPDIR)/fs2-shade.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shade.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/shade.cpp' object='fs2-shade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shade.Po' tmpdepfile='$(DEPDIR)/fs2-shade.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shade.o `test -f 'graphics/shade.cpp' || echo '$(srcdir)/'`graphics/shade.cpp

fs2-shade.obj: graphics/shade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shade.obj -MD -MP -MF "$(DEPDIR)/fs2-shade.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shade.obj `if test -f 'graphics/shade.cpp'; then $(CYGPATH_W) 'graphics/shade.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/shade.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shade.Tpo" "$(DEPDIR)/fs2-shade.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shade.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/shade.cpp' object='fs2-shade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shade.Po' tmpdepfile='$(DEPDIR)/fs2-shade.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shade.obj `if test -f 'graphics/shade.cpp'; then $(CYGPATH_W) 'graphics/shade.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/shade.cpp'; fi`

fs2-hud.o: hud/hud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hud.o -MD -MP -MF "$(DEPDIR)/fs2-hud.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hud.o `test -f 'hud/hud.cpp' || echo '$(srcdir)/'`hud/hud.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hud.Tpo" "$(DEPDIR)/fs2-hud.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hud.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hud.cpp' object='fs2-hud.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hud.Po' tmpdepfile='$(DEPDIR)/fs2-hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hud.o `test -f 'hud/hud.cpp' || echo '$(srcdir)/'`hud/hud.cpp

fs2-hud.obj: hud/hud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hud.obj -MD -MP -MF "$(DEPDIR)/fs2-hud.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hud.obj `if test -f 'hud/hud.cpp'; then $(CYGPATH_W) 'hud/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hud.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hud.Tpo" "$(DEPDIR)/fs2-hud.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hud.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hud.cpp' object='fs2-hud.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hud.Po' tmpdepfile='$(DEPDIR)/fs2-hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hud.obj `if test -f 'hud/hud.cpp'; then $(CYGPATH_W) 'hud/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hud.cpp'; fi`

fs2-hudartillery.o: hud/hudartillery.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudartillery.o -MD -MP -MF "$(DEPDIR)/fs2-hudartillery.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudartillery.o `test -f 'hud/hudartillery.cpp' || echo '$(srcdir)/'`hud/hudartillery.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudartillery.Tpo" "$(DEPDIR)/fs2-hudartillery.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudartillery.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudartillery.cpp' object='fs2-hudartillery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudartillery.Po' tmpdepfile='$(DEPDIR)/fs2-hudartillery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudartillery.o `test -f 'hud/hudartillery.cpp' || echo '$(srcdir)/'`hud/hudartillery.cpp

fs2-hudartillery.obj: hud/hudartillery.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudartillery.obj -MD -MP -MF "$(DEPDIR)/fs2-hudartillery.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudartillery.obj `if test -f 'hud/hudartillery.cpp'; then $(CYGPATH_W) 'hud/hudartillery.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudartillery.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudartillery.Tpo" "$(DEPDIR)/fs2-hudartillery.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudartillery.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudartillery.cpp' object='fs2-hudartillery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudartillery.Po' tmpdepfile='$(DEPDIR)/fs2-hudartillery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudartillery.obj `if test -f 'hud/hudartillery.cpp'; then $(CYGPATH_W) 'hud/hudartillery.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudartillery.cpp'; fi`

fs2-hudbrackets.o: hud/hudbrackets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudbrackets.o -MD -MP -MF "$(DEPDIR)/fs2-hudbrackets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudbrackets.o `test -f 'hud/hudbrackets.cpp' || echo '$(srcdir)/'`hud/hudbrackets.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudbrackets.Tpo" "$(DEPDIR)/fs2-hudbrackets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudbrackets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudbrackets.cpp' object='fs2-hudbrackets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudbrackets.Po' tmpdepfile='$(DEPDIR)/fs2-hudbrackets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudbrackets.o `test -f 'hud/hudbrackets.cpp' || echo '$(srcdir)/'`hud/hudbrackets.cpp

fs2-hudbrackets.obj: hud/hudbrackets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudbrackets.obj -MD -MP -MF "$(DEPDIR)/fs2-hudbrackets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudbrackets.obj `if test -f 'hud/hudbrackets.cpp'; then $(CYGPATH_W) 'hud/hudbrackets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudbrackets.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudbrackets.Tpo" "$(DEPDIR)/fs2-hudbrackets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudbrackets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudbrackets.cpp' object='fs2-hudbrackets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudbrackets.Po' tmpdepfile='$(DEPDIR)/fs2-hudbrackets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudbrackets.obj `if test -f 'hud/hudbrackets.cpp'; then $(CYGPATH_W) 'hud/hudbrackets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudbrackets.cpp'; fi`

fs2-hudconfig.o: hud/hudconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudconfig.o -MD -MP -MF "$(DEPDIR)/fs2-hudconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudconfig.o `test -f 'hud/hudconfig.cpp' || echo '$(srcdir)/'`hud/hudconfig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudconfig.Tpo" "$(DEPDIR)/fs2-hudconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudconfig.cpp' object='fs2-hudconfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudconfig.Po' tmpdepfile='$(DEPDIR)/fs2-hudconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudconfig.o `test -f 'hud/hudconfig.cpp' || echo '$(srcdir)/'`hud/hudconfig.cpp

fs2-hudconfig.obj: hud/hudconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudconfig.obj -MD -MP -MF "$(DEPDIR)/fs2-hudconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudconfig.obj `if test -f 'hud/hudconfig.cpp'; then $(CYGPATH_W) 'hud/hudconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudconfig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudconfig.Tpo" "$(DEPDIR)/fs2-hudconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudconfig.cpp' object='fs2-hudconfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudconfig.Po' tmpdepfile='$(DEPDIR)/fs2-hudconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudconfig.obj `if test -f 'hud/hudconfig.cpp'; then $(CYGPATH_W) 'hud/hudconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudconfig.cpp'; fi`

fs2-hudescort.o: hud/hudescort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudescort.o -MD -MP -MF "$(DEPDIR)/fs2-hudescort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudescort.o `test -f 'hud/hudescort.cpp' || echo '$(srcdir)/'`hud/hudescort.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudescort.Tpo" "$(DEPDIR)/fs2-hudescort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudescort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudescort.cpp' object='fs2-hudescort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudescort.Po' tmpdepfile='$(DEPDIR)/fs2-hudescort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudescort.o `test -f 'hud/hudescort.cpp' || echo '$(srcdir)/'`hud/hudescort.cpp

fs2-hudescort.obj: hud/hudescort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudescort.obj -MD -MP -MF "$(DEPDIR)/fs2-hudescort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudescort.obj `if test -f 'hud/hudescort.cpp'; then $(CYGPATH_W) 'hud/hudescort.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudescort.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudescort.Tpo" "$(DEPDIR)/fs2-hudescort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudescort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudescort.cpp' object='fs2-hudescort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudescort.Po' tmpdepfile='$(DEPDIR)/fs2-hudescort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudescort.obj `if test -f 'hud/hudescort.cpp'; then $(CYGPATH_W) 'hud/hudescort.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudescort.cpp'; fi`

fs2-hudets.o: hud/hudets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudets.o -MD -MP -MF "$(DEPDIR)/fs2-hudets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudets.o `test -f 'hud/hudets.cpp' || echo '$(srcdir)/'`hud/hudets.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudets.Tpo" "$(DEPDIR)/fs2-hudets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudets.cpp' object='fs2-hudets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudets.Po' tmpdepfile='$(DEPDIR)/fs2-hudets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudets.o `test -f 'hud/hudets.cpp' || echo '$(srcdir)/'`hud/hudets.cpp

fs2-hudets.obj: hud/hudets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudets.obj -MD -MP -MF "$(DEPDIR)/fs2-hudets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudets.obj `if test -f 'hud/hudets.cpp'; then $(CYGPATH_W) 'hud/hudets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudets.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudets.Tpo" "$(DEPDIR)/fs2-hudets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudets.cpp' object='fs2-hudets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudets.Po' tmpdepfile='$(DEPDIR)/fs2-hudets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudets.obj `if test -f 'hud/hudets.cpp'; then $(CYGPATH_W) 'hud/hudets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudets.cpp'; fi`

fs2-hudlock.o: hud/hudlock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudlock.o -MD -MP -MF "$(DEPDIR)/fs2-hudlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudlock.o `test -f 'hud/hudlock.cpp' || echo '$(srcdir)/'`hud/hudlock.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudlock.Tpo" "$(DEPDIR)/fs2-hudlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudlock.cpp' object='fs2-hudlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudlock.Po' tmpdepfile='$(DEPDIR)/fs2-hudlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudlock.o `test -f 'hud/hudlock.cpp' || echo '$(srcdir)/'`hud/hudlock.cpp

fs2-hudlock.obj: hud/hudlock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudlock.obj -MD -MP -MF "$(DEPDIR)/fs2-hudlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudlock.obj `if test -f 'hud/hudlock.cpp'; then $(CYGPATH_W) 'hud/hudlock.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudlock.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudlock.Tpo" "$(DEPDIR)/fs2-hudlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudlock.cpp' object='fs2-hudlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudlock.Po' tmpdepfile='$(DEPDIR)/fs2-hudlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudlock.obj `if test -f 'hud/hudlock.cpp'; then $(CYGPATH_W) 'hud/hudlock.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudlock.cpp'; fi`

fs2-hudmessage.o: hud/hudmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudmessage.o -MD -MP -MF "$(DEPDIR)/fs2-hudmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudmessage.o `test -f 'hud/hudmessage.cpp' || echo '$(srcdir)/'`hud/hudmessage.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudmessage.Tpo" "$(DEPDIR)/fs2-hudmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudmessage.cpp' object='fs2-hudmessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudmessage.Po' tmpdepfile='$(DEPDIR)/fs2-hudmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudmessage.o `test -f 'hud/hudmessage.cpp' || echo '$(srcdir)/'`hud/hudmessage.cpp

fs2-hudmessage.obj: hud/hudmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudmessage.obj -MD -MP -MF "$(DEPDIR)/fs2-hudmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudmessage.obj `if test -f 'hud/hudmessage.cpp'; then $(CYGPATH_W) 'hud/hudmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudmessage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudmessage.Tpo" "$(DEPDIR)/fs2-hudmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudmessage.cpp' object='fs2-hudmessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudmessage.Po' tmpdepfile='$(DEPDIR)/fs2-hudmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudmessage.obj `if test -f 'hud/hudmessage.cpp'; then $(CYGPATH_W) 'hud/hudmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudmessage.cpp'; fi`

fs2-hudreticle.o: hud/hudreticle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudreticle.o -MD -MP -MF "$(DEPDIR)/fs2-hudreticle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudreticle.o `test -f 'hud/hudreticle.cpp' || echo '$(srcdir)/'`hud/hudreticle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudreticle.Tpo" "$(DEPDIR)/fs2-hudreticle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudreticle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudreticle.cpp' object='fs2-hudreticle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudreticle.Po' tmpdepfile='$(DEPDIR)/fs2-hudreticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudreticle.o `test -f 'hud/hudreticle.cpp' || echo '$(srcdir)/'`hud/hudreticle.cpp

fs2-hudreticle.obj: hud/hudreticle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudreticle.obj -MD -MP -MF "$(DEPDIR)/fs2-hudreticle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudreticle.obj `if test -f 'hud/hudreticle.cpp'; then $(CYGPATH_W) 'hud/hudreticle.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudreticle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudreticle.Tpo" "$(DEPDIR)/fs2-hudreticle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudreticle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudreticle.cpp' object='fs2-hudreticle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudreticle.Po' tmpdepfile='$(DEPDIR)/fs2-hudreticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudreticle.obj `if test -f 'hud/hudreticle.cpp'; then $(CYGPATH_W) 'hud/hudreticle.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudreticle.cpp'; fi`

fs2-hudshield.o: hud/hudshield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudshield.o -MD -MP -MF "$(DEPDIR)/fs2-hudshield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudshield.o `test -f 'hud/hudshield.cpp' || echo '$(srcdir)/'`hud/hudshield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudshield.Tpo" "$(DEPDIR)/fs2-hudshield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudshield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudshield.cpp' object='fs2-hudshield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudshield.Po' tmpdepfile='$(DEPDIR)/fs2-hudshield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudshield.o `test -f 'hud/hudshield.cpp' || echo '$(srcdir)/'`hud/hudshield.cpp

fs2-hudshield.obj: hud/hudshield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudshield.obj -MD -MP -MF "$(DEPDIR)/fs2-hudshield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudshield.obj `if test -f 'hud/hudshield.cpp'; then $(CYGPATH_W) 'hud/hudshield.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudshield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudshield.Tpo" "$(DEPDIR)/fs2-hudshield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudshield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudshield.cpp' object='fs2-hudshield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudshield.Po' tmpdepfile='$(DEPDIR)/fs2-hudshield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudshield.obj `if test -f 'hud/hudshield.cpp'; then $(CYGPATH_W) 'hud/hudshield.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudshield.cpp'; fi`

fs2-hudsquadmsg.o: hud/hudsquadmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudsquadmsg.o -MD -MP -MF "$(DEPDIR)/fs2-hudsquadmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudsquadmsg.o `test -f 'hud/hudsquadmsg.cpp' || echo '$(srcdir)/'`hud/hudsquadmsg.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudsquadmsg.Tpo" "$(DEPDIR)/fs2-hudsquadmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudsquadmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudsquadmsg.cpp' object='fs2-hudsquadmsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudsquadmsg.Po' tmpdepfile='$(DEPDIR)/fs2-hudsquadmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudsquadmsg.o `test -f 'hud/hudsquadmsg.cpp' || echo '$(srcdir)/'`hud/hudsquadmsg.cpp

fs2-hudsquadmsg.obj: hud/hudsquadmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudsquadmsg.obj -MD -MP -MF "$(DEPDIR)/fs2-hudsquadmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudsquadmsg.obj `if test -f 'hud/hudsquadmsg.cpp'; then $(CYGPATH_W) 'hud/hudsquadmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudsquadmsg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudsquadmsg.Tpo" "$(DEPDIR)/fs2-hudsquadmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudsquadmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudsquadmsg.cpp' object='fs2-hudsquadmsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudsquadmsg.Po' tmpdepfile='$(DEPDIR)/fs2-hudsquadmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudsquadmsg.obj `if test -f 'hud/hudsquadmsg.cpp'; then $(CYGPATH_W) 'hud/hudsquadmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudsquadmsg.cpp'; fi`

fs2-hudtarget.o: hud/hudtarget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudtarget.o -MD -MP -MF "$(DEPDIR)/fs2-hudtarget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudtarget.o `test -f 'hud/hudtarget.cpp' || echo '$(srcdir)/'`hud/hudtarget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudtarget.Tpo" "$(DEPDIR)/fs2-hudtarget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudtarget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtarget.cpp' object='fs2-hudtarget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudtarget.Po' tmpdepfile='$(DEPDIR)/fs2-hudtarget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudtarget.o `test -f 'hud/hudtarget.cpp' || echo '$(srcdir)/'`hud/hudtarget.cpp

fs2-hudtarget.obj: hud/hudtarget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudtarget.obj -MD -MP -MF "$(DEPDIR)/fs2-hudtarget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudtarget.obj `if test -f 'hud/hudtarget.cpp'; then $(CYGPATH_W) 'hud/hudtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtarget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudtarget.Tpo" "$(DEPDIR)/fs2-hudtarget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudtarget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtarget.cpp' object='fs2-hudtarget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudtarget.Po' tmpdepfile='$(DEPDIR)/fs2-hudtarget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudtarget.obj `if test -f 'hud/hudtarget.cpp'; then $(CYGPATH_W) 'hud/hudtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtarget.cpp'; fi`

fs2-hudtargetbox.o: hud/hudtargetbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudtargetbox.o -MD -MP -MF "$(DEPDIR)/fs2-hudtargetbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudtargetbox.o `test -f 'hud/hudtargetbox.cpp' || echo '$(srcdir)/'`hud/hudtargetbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudtargetbox.Tpo" "$(DEPDIR)/fs2-hudtargetbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudtargetbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtargetbox.cpp' object='fs2-hudtargetbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudtargetbox.Po' tmpdepfile='$(DEPDIR)/fs2-hudtargetbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudtargetbox.o `test -f 'hud/hudtargetbox.cpp' || echo '$(srcdir)/'`hud/hudtargetbox.cpp

fs2-hudtargetbox.obj: hud/hudtargetbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudtargetbox.obj -MD -MP -MF "$(DEPDIR)/fs2-hudtargetbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudtargetbox.obj `if test -f 'hud/hudtargetbox.cpp'; then $(CYGPATH_W) 'hud/hudtargetbox.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtargetbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudtargetbox.Tpo" "$(DEPDIR)/fs2-hudtargetbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudtargetbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtargetbox.cpp' object='fs2-hudtargetbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudtargetbox.Po' tmpdepfile='$(DEPDIR)/fs2-hudtargetbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudtargetbox.obj `if test -f 'hud/hudtargetbox.cpp'; then $(CYGPATH_W) 'hud/hudtargetbox.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtargetbox.cpp'; fi`

fs2-hudwingmanstatus.o: hud/hudwingmanstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudwingmanstatus.o -MD -MP -MF "$(DEPDIR)/fs2-hudwingmanstatus.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudwingmanstatus.o `test -f 'hud/hudwingmanstatus.cpp' || echo '$(srcdir)/'`hud/hudwingmanstatus.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudwingmanstatus.Tpo" "$(DEPDIR)/fs2-hudwingmanstatus.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudwingmanstatus.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudwingmanstatus.cpp' object='fs2-hudwingmanstatus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudwingmanstatus.Po' tmpdepfile='$(DEPDIR)/fs2-hudwingmanstatus.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudwingmanstatus.o `test -f 'hud/hudwingmanstatus.cpp' || echo '$(srcdir)/'`hud/hudwingmanstatus.cpp

fs2-hudwingmanstatus.obj: hud/hudwingmanstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudwingmanstatus.obj -MD -MP -MF "$(DEPDIR)/fs2-hudwingmanstatus.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudwingmanstatus.obj `if test -f 'hud/hudwingmanstatus.cpp'; then $(CYGPATH_W) 'hud/hudwingmanstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudwingmanstatus.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudwingmanstatus.Tpo" "$(DEPDIR)/fs2-hudwingmanstatus.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudwingmanstatus.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudwingmanstatus.cpp' object='fs2-hudwingmanstatus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudwingmanstatus.Po' tmpdepfile='$(DEPDIR)/fs2-hudwingmanstatus.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudwingmanstatus.obj `if test -f 'hud/hudwingmanstatus.cpp'; then $(CYGPATH_W) 'hud/hudwingmanstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudwingmanstatus.cpp'; fi`

fs2-key.o: io/key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-key.o -MD -MP -MF "$(DEPDIR)/fs2-key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-key.o `test -f 'io/key.cpp' || echo '$(srcdir)/'`io/key.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-key.Tpo" "$(DEPDIR)/fs2-key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/key.cpp' object='fs2-key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-key.Po' tmpdepfile='$(DEPDIR)/fs2-key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-key.o `test -f 'io/key.cpp' || echo '$(srcdir)/'`io/key.cpp

fs2-key.obj: io/key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-key.obj -MD -MP -MF "$(DEPDIR)/fs2-key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-key.obj `if test -f 'io/key.cpp'; then $(CYGPATH_W) 'io/key.cpp'; else $(CYGPATH_W) '$(srcdir)/io/key.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-key.Tpo" "$(DEPDIR)/fs2-key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/key.cpp' object='fs2-key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-key.Po' tmpdepfile='$(DEPDIR)/fs2-key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-key.obj `if test -f 'io/key.cpp'; then $(CYGPATH_W) 'io/key.cpp'; else $(CYGPATH_W) '$(srcdir)/io/key.cpp'; fi`

fs2-keycontrol.o: io/keycontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-keycontrol.o -MD -MP -MF "$(DEPDIR)/fs2-keycontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-keycontrol.o `test -f 'io/keycontrol.cpp' || echo '$(srcdir)/'`io/keycontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-keycontrol.Tpo" "$(DEPDIR)/fs2-keycontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-keycontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/keycontrol.cpp' object='fs2-keycontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-keycontrol.Po' tmpdepfile='$(DEPDIR)/fs2-keycontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-keycontrol.o `test -f 'io/keycontrol.cpp' || echo '$(srcdir)/'`io/keycontrol.cpp

fs2-keycontrol.obj: io/keycontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-keycontrol.obj -MD -MP -MF "$(DEPDIR)/fs2-keycontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-keycontrol.obj `if test -f 'io/keycontrol.cpp'; then $(CYGPATH_W) 'io/keycontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/io/keycontrol.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-keycontrol.Tpo" "$(DEPDIR)/fs2-keycontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-keycontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/keycontrol.cpp' object='fs2-keycontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-keycontrol.Po' tmpdepfile='$(DEPDIR)/fs2-keycontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-keycontrol.obj `if test -f 'io/keycontrol.cpp'; then $(CYGPATH_W) 'io/keycontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/io/keycontrol.cpp'; fi`

fs2-mouse.o: io/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mouse.o -MD -MP -MF "$(DEPDIR)/fs2-mouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mouse.o `test -f 'io/mouse.cpp' || echo '$(srcdir)/'`io/mouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mouse.Tpo" "$(DEPDIR)/fs2-mouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/mouse.cpp' object='fs2-mouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mouse.Po' tmpdepfile='$(DEPDIR)/fs2-mouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mouse.o `test -f 'io/mouse.cpp' || echo '$(srcdir)/'`io/mouse.cpp

fs2-mouse.obj: io/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mouse.obj -MD -MP -MF "$(DEPDIR)/fs2-mouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mouse.obj `if test -f 'io/mouse.cpp'; then $(CYGPATH_W) 'io/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/mouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mouse.Tpo" "$(DEPDIR)/fs2-mouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/mouse.cpp' object='fs2-mouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mouse.Po' tmpdepfile='$(DEPDIR)/fs2-mouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mouse.obj `if test -f 'io/mouse.cpp'; then $(CYGPATH_W) 'io/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/mouse.cpp'; fi`

fs2-timer.o: io/timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-timer.o -MD -MP -MF "$(DEPDIR)/fs2-timer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-timer.o `test -f 'io/timer.cpp' || echo '$(srcdir)/'`io/timer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-timer.Tpo" "$(DEPDIR)/fs2-timer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-timer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/timer.cpp' object='fs2-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-timer.Po' tmpdepfile='$(DEPDIR)/fs2-timer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-timer.o `test -f 'io/timer.cpp' || echo '$(srcdir)/'`io/timer.cpp

fs2-timer.obj: io/timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-timer.obj -MD -MP -MF "$(DEPDIR)/fs2-timer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-timer.obj `if test -f 'io/timer.cpp'; then $(CYGPATH_W) 'io/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/io/timer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-timer.Tpo" "$(DEPDIR)/fs2-timer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-timer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/timer.cpp' object='fs2-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-timer.Po' tmpdepfile='$(DEPDIR)/fs2-timer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-timer.obj `if test -f 'io/timer.cpp'; then $(CYGPATH_W) 'io/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/io/timer.cpp'; fi`

fs2-jumpnode.o: jumpnode/jumpnode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-jumpnode.o -MD -MP -MF "$(DEPDIR)/fs2-jumpnode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-jumpnode.o `test -f 'jumpnode/jumpnode.cpp' || echo '$(srcdir)/'`jumpnode/jumpnode.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-jumpnode.Tpo" "$(DEPDIR)/fs2-jumpnode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-jumpnode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jumpnode/jumpnode.cpp' object='fs2-jumpnode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-jumpnode.Po' tmpdepfile='$(DEPDIR)/fs2-jumpnode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-jumpnode.o `test -f 'jumpnode/jumpnode.cpp' || echo '$(srcdir)/'`jumpnode/jumpnode.cpp

fs2-jumpnode.obj: jumpnode/jumpnode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-jumpnode.obj -MD -MP -MF "$(DEPDIR)/fs2-jumpnode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-jumpnode.obj `if test -f 'jumpnode/jumpnode.cpp'; then $(CYGPATH_W) 'jumpnode/jumpnode.cpp'; else $(CYGPATH_W) '$(srcdir)/jumpnode/jumpnode.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-jumpnode.Tpo" "$(DEPDIR)/fs2-jumpnode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-jumpnode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jumpnode/jumpnode.cpp' object='fs2-jumpnode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-jumpnode.Po' tmpdepfile='$(DEPDIR)/fs2-jumpnode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-jumpnode.obj `if test -f 'jumpnode/jumpnode.cpp'; then $(CYGPATH_W) 'jumpnode/jumpnode.cpp'; else $(CYGPATH_W) '$(srcdir)/jumpnode/jumpnode.cpp'; fi`

fs2-lighting.o: lighting/lighting.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-lighting.o -MD -MP -MF "$(DEPDIR)/fs2-lighting.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-lighting.o `test -f 'lighting/lighting.cpp' || echo '$(srcdir)/'`lighting/lighting.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-lighting.Tpo" "$(DEPDIR)/fs2-lighting.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-lighting.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lighting/lighting.cpp' object='fs2-lighting.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-lighting.Po' tmpdepfile='$(DEPDIR)/fs2-lighting.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-lighting.o `test -f 'lighting/lighting.cpp' || echo '$(srcdir)/'`lighting/lighting.cpp

fs2-lighting.obj: lighting/lighting.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-lighting.obj -MD -MP -MF "$(DEPDIR)/fs2-lighting.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-lighting.obj `if test -f 'lighting/lighting.cpp'; then $(CYGPATH_W) 'lighting/lighting.cpp'; else $(CYGPATH_W) '$(srcdir)/lighting/lighting.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-lighting.Tpo" "$(DEPDIR)/fs2-lighting.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-lighting.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lighting/lighting.cpp' object='fs2-lighting.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-lighting.Po' tmpdepfile='$(DEPDIR)/fs2-lighting.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-lighting.obj `if test -f 'lighting/lighting.cpp'; then $(CYGPATH_W) 'lighting/lighting.cpp'; else $(CYGPATH_W) '$(srcdir)/lighting/lighting.cpp'; fi`

fs2-fhash.o: localization/fhash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fhash.o -MD -MP -MF "$(DEPDIR)/fs2-fhash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fhash.o `test -f 'localization/fhash.cpp' || echo '$(srcdir)/'`localization/fhash.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fhash.Tpo" "$(DEPDIR)/fs2-fhash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fhash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/fhash.cpp' object='fs2-fhash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fhash.Po' tmpdepfile='$(DEPDIR)/fs2-fhash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fhash.o `test -f 'localization/fhash.cpp' || echo '$(srcdir)/'`localization/fhash.cpp

fs2-fhash.obj: localization/fhash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fhash.obj -MD -MP -MF "$(DEPDIR)/fs2-fhash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fhash.obj `if test -f 'localization/fhash.cpp'; then $(CYGPATH_W) 'localization/fhash.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/fhash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fhash.Tpo" "$(DEPDIR)/fs2-fhash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fhash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/fhash.cpp' object='fs2-fhash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fhash.Po' tmpdepfile='$(DEPDIR)/fs2-fhash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fhash.obj `if test -f 'localization/fhash.cpp'; then $(CYGPATH_W) 'localization/fhash.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/fhash.cpp'; fi`

fs2-localize.o: localization/localize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-localize.o -MD -MP -MF "$(DEPDIR)/fs2-localize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-localize.o `test -f 'localization/localize.cpp' || echo '$(srcdir)/'`localization/localize.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-localize.Tpo" "$(DEPDIR)/fs2-localize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-localize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/localize.cpp' object='fs2-localize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-localize.Po' tmpdepfile='$(DEPDIR)/fs2-localize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-localize.o `test -f 'localization/localize.cpp' || echo '$(srcdir)/'`localization/localize.cpp

fs2-localize.obj: localization/localize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-localize.obj -MD -MP -MF "$(DEPDIR)/fs2-localize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-localize.obj `if test -f 'localization/localize.cpp'; then $(CYGPATH_W) 'localization/localize.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/localize.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-localize.Tpo" "$(DEPDIR)/fs2-localize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-localize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/localize.cpp' object='fs2-localize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-localize.Po' tmpdepfile='$(DEPDIR)/fs2-localize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-localize.obj `if test -f 'localization/localize.cpp'; then $(CYGPATH_W) 'localization/localize.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/localize.cpp'; fi`

fs2-fix.o: math/fix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fix.o -MD -MP -MF "$(DEPDIR)/fs2-fix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fix.o `test -f 'math/fix.cpp' || echo '$(srcdir)/'`math/fix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fix.Tpo" "$(DEPDIR)/fs2-fix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fix.cpp' object='fs2-fix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fix.Po' tmpdepfile='$(DEPDIR)/fs2-fix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fix.o `test -f 'math/fix.cpp' || echo '$(srcdir)/'`math/fix.cpp

fs2-fix.obj: math/fix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fix.obj -MD -MP -MF "$(DEPDIR)/fs2-fix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fix.obj `if test -f 'math/fix.cpp'; then $(CYGPATH_W) 'math/fix.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fix.Tpo" "$(DEPDIR)/fs2-fix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fix.cpp' object='fs2-fix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fix.Po' tmpdepfile='$(DEPDIR)/fs2-fix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fix.obj `if test -f 'math/fix.cpp'; then $(CYGPATH_W) 'math/fix.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fix.cpp'; fi`

fs2-floating.o: math/floating.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-floating.o -MD -MP -MF "$(DEPDIR)/fs2-floating.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-floating.o `test -f 'math/floating.cpp' || echo '$(srcdir)/'`math/floating.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-floating.Tpo" "$(DEPDIR)/fs2-floating.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-floating.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/floating.cpp' object='fs2-floating.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-floating.Po' tmpdepfile='$(DEPDIR)/fs2-floating.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-floating.o `test -f 'math/floating.cpp' || echo '$(srcdir)/'`math/floating.cpp

fs2-floating.obj: math/floating.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-floating.obj -MD -MP -MF "$(DEPDIR)/fs2-floating.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-floating.obj `if test -f 'math/floating.cpp'; then $(CYGPATH_W) 'math/floating.cpp'; else $(CYGPATH_W) '$(srcdir)/math/floating.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-floating.Tpo" "$(DEPDIR)/fs2-floating.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-floating.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/floating.cpp' object='fs2-floating.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-floating.Po' tmpdepfile='$(DEPDIR)/fs2-floating.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-floating.obj `if test -f 'math/floating.cpp'; then $(CYGPATH_W) 'math/floating.cpp'; else $(CYGPATH_W) '$(srcdir)/math/floating.cpp'; fi`

fs2-fvi.o: math/fvi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fvi.o -MD -MP -MF "$(DEPDIR)/fs2-fvi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fvi.o `test -f 'math/fvi.cpp' || echo '$(srcdir)/'`math/fvi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fvi.Tpo" "$(DEPDIR)/fs2-fvi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fvi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fvi.cpp' object='fs2-fvi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fvi.Po' tmpdepfile='$(DEPDIR)/fs2-fvi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fvi.o `test -f 'math/fvi.cpp' || echo '$(srcdir)/'`math/fvi.cpp

fs2-fvi.obj: math/fvi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fvi.obj -MD -MP -MF "$(DEPDIR)/fs2-fvi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fvi.obj `if test -f 'math/fvi.cpp'; then $(CYGPATH_W) 'math/fvi.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fvi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fvi.Tpo" "$(DEPDIR)/fs2-fvi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fvi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fvi.cpp' object='fs2-fvi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fvi.Po' tmpdepfile='$(DEPDIR)/fs2-fvi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fvi.obj `if test -f 'math/fvi.cpp'; then $(CYGPATH_W) 'math/fvi.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fvi.cpp'; fi`

fs2-spline.o: math/spline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-spline.o -MD -MP -MF "$(DEPDIR)/fs2-spline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-spline.o `test -f 'math/spline.cpp' || echo '$(srcdir)/'`math/spline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-spline.Tpo" "$(DEPDIR)/fs2-spline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-spline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/spline.cpp' object='fs2-spline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-spline.Po' tmpdepfile='$(DEPDIR)/fs2-spline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-spline.o `test -f 'math/spline.cpp' || echo '$(srcdir)/'`math/spline.cpp

fs2-spline.obj: math/spline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-spline.obj -MD -MP -MF "$(DEPDIR)/fs2-spline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-spline.obj `if test -f 'math/spline.cpp'; then $(CYGPATH_W) 'math/spline.cpp'; else $(CYGPATH_W) '$(srcdir)/math/spline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-spline.Tpo" "$(DEPDIR)/fs2-spline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-spline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/spline.cpp' object='fs2-spline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-spline.Po' tmpdepfile='$(DEPDIR)/fs2-spline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-spline.obj `if test -f 'math/spline.cpp'; then $(CYGPATH_W) 'math/spline.cpp'; else $(CYGPATH_W) '$(srcdir)/math/spline.cpp'; fi`

fs2-staticrand.o: math/staticrand.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-staticrand.o -MD -MP -MF "$(DEPDIR)/fs2-staticrand.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-staticrand.o `test -f 'math/staticrand.cpp' || echo '$(srcdir)/'`math/staticrand.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-staticrand.Tpo" "$(DEPDIR)/fs2-staticrand.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-staticrand.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/staticrand.cpp' object='fs2-staticrand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-staticrand.Po' tmpdepfile='$(DEPDIR)/fs2-staticrand.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-staticrand.o `test -f 'math/staticrand.cpp' || echo '$(srcdir)/'`math/staticrand.cpp

fs2-staticrand.obj: math/staticrand.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-staticrand.obj -MD -MP -MF "$(DEPDIR)/fs2-staticrand.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-staticrand.obj `if test -f 'math/staticrand.cpp'; then $(CYGPATH_W) 'math/staticrand.cpp'; else $(CYGPATH_W) '$(srcdir)/math/staticrand.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-staticrand.Tpo" "$(DEPDIR)/fs2-staticrand.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-staticrand.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/staticrand.cpp' object='fs2-staticrand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-staticrand.Po' tmpdepfile='$(DEPDIR)/fs2-staticrand.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-staticrand.obj `if test -f 'math/staticrand.cpp'; then $(CYGPATH_W) 'math/staticrand.cpp'; else $(CYGPATH_W) '$(srcdir)/math/staticrand.cpp'; fi`

fs2-vecmat.o: math/vecmat.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-vecmat.o -MD -MP -MF "$(DEPDIR)/fs2-vecmat.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-vecmat.o `test -f 'math/vecmat.cpp' || echo '$(srcdir)/'`math/vecmat.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-vecmat.Tpo" "$(DEPDIR)/fs2-vecmat.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-vecmat.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/vecmat.cpp' object='fs2-vecmat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-vecmat.Po' tmpdepfile='$(DEPDIR)/fs2-vecmat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-vecmat.o `test -f 'math/vecmat.cpp' || echo '$(srcdir)/'`math/vecmat.cpp

fs2-vecmat.obj: math/vecmat.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-vecmat.obj -MD -MP -MF "$(DEPDIR)/fs2-vecmat.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-vecmat.obj `if test -f 'math/vecmat.cpp'; then $(CYGPATH_W) 'math/vecmat.cpp'; else $(CYGPATH_W) '$(srcdir)/math/vecmat.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-vecmat.Tpo" "$(DEPDIR)/fs2-vecmat.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-vecmat.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/vecmat.cpp' object='fs2-vecmat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-vecmat.Po' tmpdepfile='$(DEPDIR)/fs2-vecmat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-vecmat.obj `if test -f 'math/vecmat.cpp'; then $(CYGPATH_W) 'math/vecmat.cpp'; else $(CYGPATH_W) '$(srcdir)/math/vecmat.cpp'; fi`

fs2-barracks.o: menuui/barracks.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-barracks.o -MD -MP -MF "$(DEPDIR)/fs2-barracks.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-barracks.o `test -f 'menuui/barracks.cpp' || echo '$(srcdir)/'`menuui/barracks.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-barracks.Tpo" "$(DEPDIR)/fs2-barracks.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-barracks.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/barracks.cpp' object='fs2-barracks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-barracks.Po' tmpdepfile='$(DEPDIR)/fs2-barracks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-barracks.o `test -f 'menuui/barracks.cpp' || echo '$(srcdir)/'`menuui/barracks.cpp

fs2-barracks.obj: menuui/barracks.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-barracks.obj -MD -MP -MF "$(DEPDIR)/fs2-barracks.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-barracks.obj `if test -f 'menuui/barracks.cpp'; then $(CYGPATH_W) 'menuui/barracks.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/barracks.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-barracks.Tpo" "$(DEPDIR)/fs2-barracks.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-barracks.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/barracks.cpp' object='fs2-barracks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-barracks.Po' tmpdepfile='$(DEPDIR)/fs2-barracks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-barracks.obj `if test -f 'menuui/barracks.cpp'; then $(CYGPATH_W) 'menuui/barracks.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/barracks.cpp'; fi`

fs2-credits.o: menuui/credits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-credits.o -MD -MP -MF "$(DEPDIR)/fs2-credits.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-credits.o `test -f 'menuui/credits.cpp' || echo '$(srcdir)/'`menuui/credits.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-credits.Tpo" "$(DEPDIR)/fs2-credits.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-credits.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/credits.cpp' object='fs2-credits.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-credits.Po' tmpdepfile='$(DEPDIR)/fs2-credits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-credits.o `test -f 'menuui/credits.cpp' || echo '$(srcdir)/'`menuui/credits.cpp

fs2-credits.obj: menuui/credits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-credits.obj -MD -MP -MF "$(DEPDIR)/fs2-credits.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-credits.obj `if test -f 'menuui/credits.cpp'; then $(CYGPATH_W) 'menuui/credits.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/credits.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-credits.Tpo" "$(DEPDIR)/fs2-credits.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-credits.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/credits.cpp' object='fs2-credits.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-credits.Po' tmpdepfile='$(DEPDIR)/fs2-credits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-credits.obj `if test -f 'menuui/credits.cpp'; then $(CYGPATH_W) 'menuui/credits.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/credits.cpp'; fi`

fs2-fishtank.o: menuui/fishtank.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fishtank.o -MD -MP -MF "$(DEPDIR)/fs2-fishtank.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fishtank.o `test -f 'menuui/fishtank.cpp' || echo '$(srcdir)/'`menuui/fishtank.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fishtank.Tpo" "$(DEPDIR)/fs2-fishtank.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fishtank.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/fishtank.cpp' object='fs2-fishtank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fishtank.Po' tmpdepfile='$(DEPDIR)/fs2-fishtank.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fishtank.o `test -f 'menuui/fishtank.cpp' || echo '$(srcdir)/'`menuui/fishtank.cpp

fs2-fishtank.obj: menuui/fishtank.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-fishtank.obj -MD -MP -MF "$(DEPDIR)/fs2-fishtank.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-fishtank.obj `if test -f 'menuui/fishtank.cpp'; then $(CYGPATH_W) 'menuui/fishtank.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/fishtank.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-fishtank.Tpo" "$(DEPDIR)/fs2-fishtank.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-fishtank.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/fishtank.cpp' object='fs2-fishtank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-fishtank.Po' tmpdepfile='$(DEPDIR)/fs2-fishtank.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-fishtank.obj `if test -f 'menuui/fishtank.cpp'; then $(CYGPATH_W) 'menuui/fishtank.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/fishtank.cpp'; fi`

fs2-mainhallmenu.o: menuui/mainhallmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mainhallmenu.o -MD -MP -MF "$(DEPDIR)/fs2-mainhallmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mainhallmenu.o `test -f 'menuui/mainhallmenu.cpp' || echo '$(srcdir)/'`menuui/mainhallmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mainhallmenu.Tpo" "$(DEPDIR)/fs2-mainhallmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mainhallmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhallmenu.cpp' object='fs2-mainhallmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mainhallmenu.Po' tmpdepfile='$(DEPDIR)/fs2-mainhallmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mainhallmenu.o `test -f 'menuui/mainhallmenu.cpp' || echo '$(srcdir)/'`menuui/mainhallmenu.cpp

fs2-mainhallmenu.obj: menuui/mainhallmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mainhallmenu.obj -MD -MP -MF "$(DEPDIR)/fs2-mainhallmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mainhallmenu.obj `if test -f 'menuui/mainhallmenu.cpp'; then $(CYGPATH_W) 'menuui/mainhallmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhallmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mainhallmenu.Tpo" "$(DEPDIR)/fs2-mainhallmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mainhallmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhallmenu.cpp' object='fs2-mainhallmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mainhallmenu.Po' tmpdepfile='$(DEPDIR)/fs2-mainhallmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mainhallmenu.obj `if test -f 'menuui/mainhallmenu.cpp'; then $(CYGPATH_W) 'menuui/mainhallmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhallmenu.cpp'; fi`

fs2-mainhalltemp.o: menuui/mainhalltemp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mainhalltemp.o -MD -MP -MF "$(DEPDIR)/fs2-mainhalltemp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mainhalltemp.o `test -f 'menuui/mainhalltemp.cpp' || echo '$(srcdir)/'`menuui/mainhalltemp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mainhalltemp.Tpo" "$(DEPDIR)/fs2-mainhalltemp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mainhalltemp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhalltemp.cpp' object='fs2-mainhalltemp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mainhalltemp.Po' tmpdepfile='$(DEPDIR)/fs2-mainhalltemp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mainhalltemp.o `test -f 'menuui/mainhalltemp.cpp' || echo '$(srcdir)/'`menuui/mainhalltemp.cpp

fs2-mainhalltemp.obj: menuui/mainhalltemp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-mainhalltemp.obj -MD -MP -MF "$(DEPDIR)/fs2-mainhalltemp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-mainhalltemp.obj `if test -f 'menuui/mainhalltemp.cpp'; then $(CYGPATH_W) 'menuui/mainhalltemp.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhalltemp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-mainhalltemp.Tpo" "$(DEPDIR)/fs2-mainhalltemp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-mainhalltemp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhalltemp.cpp' object='fs2-mainhalltemp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-mainhalltemp.Po' tmpdepfile='$(DEPDIR)/fs2-mainhalltemp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-mainhalltemp.obj `if test -f 'menuui/mainhalltemp.cpp'; then $(CYGPATH_W) 'menuui/mainhalltemp.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhalltemp.cpp'; fi`

fs2-optionsmenu.o: menuui/optionsmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-optionsmenu.o -MD -MP -MF "$(DEPDIR)/fs2-optionsmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-optionsmenu.o `test -f 'menuui/optionsmenu.cpp' || echo '$(srcdir)/'`menuui/optionsmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-optionsmenu.Tpo" "$(DEPDIR)/fs2-optionsmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-optionsmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenu.cpp' object='fs2-optionsmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-optionsmenu.Po' tmpdepfile='$(DEPDIR)/fs2-optionsmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-optionsmenu.o `test -f 'menuui/optionsmenu.cpp' || echo '$(srcdir)/'`menuui/optionsmenu.cpp

fs2-optionsmenu.obj: menuui/optionsmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-optionsmenu.obj -MD -MP -MF "$(DEPDIR)/fs2-optionsmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-optionsmenu.obj `if test -f 'menuui/optionsmenu.cpp'; then $(CYGPATH_W) 'menuui/optionsmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-optionsmenu.Tpo" "$(DEPDIR)/fs2-optionsmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-optionsmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenu.cpp' object='fs2-optionsmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-optionsmenu.Po' tmpdepfile='$(DEPDIR)/fs2-optionsmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-optionsmenu.obj `if test -f 'menuui/optionsmenu.cpp'; then $(CYGPATH_W) 'menuui/optionsmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenu.cpp'; fi`

fs2-playermenu.o: menuui/playermenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-playermenu.o -MD -MP -MF "$(DEPDIR)/fs2-playermenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-playermenu.o `test -f 'menuui/playermenu.cpp' || echo '$(srcdir)/'`menuui/playermenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-playermenu.Tpo" "$(DEPDIR)/fs2-playermenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-playermenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/playermenu.cpp' object='fs2-playermenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-playermenu.Po' tmpdepfile='$(DEPDIR)/fs2-playermenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-playermenu.o `test -f 'menuui/playermenu.cpp' || echo '$(srcdir)/'`menuui/playermenu.cpp

fs2-playermenu.obj: menuui/playermenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-playermenu.obj -MD -MP -MF "$(DEPDIR)/fs2-playermenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-playermenu.obj `if test -f 'menuui/playermenu.cpp'; then $(CYGPATH_W) 'menuui/playermenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/playermenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-playermenu.Tpo" "$(DEPDIR)/fs2-playermenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-playermenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/playermenu.cpp' object='fs2-playermenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-playermenu.Po' tmpdepfile='$(DEPDIR)/fs2-playermenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-playermenu.obj `if test -f 'menuui/playermenu.cpp'; then $(CYGPATH_W) 'menuui/playermenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/playermenu.cpp'; fi`

fs2-readyroom.o: menuui/readyroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-readyroom.o -MD -MP -MF "$(DEPDIR)/fs2-readyroom.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-readyroom.o `test -f 'menuui/readyroom.cpp' || echo '$(srcdir)/'`menuui/readyroom.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-readyroom.Tpo" "$(DEPDIR)/fs2-readyroom.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-readyroom.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/readyroom.cpp' object='fs2-readyroom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-readyroom.Po' tmpdepfile='$(DEPDIR)/fs2-readyroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-readyroom.o `test -f 'menuui/readyroom.cpp' || echo '$(srcdir)/'`menuui/readyroom.cpp

fs2-readyroom.obj: menuui/readyroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-readyroom.obj -MD -MP -MF "$(DEPDIR)/fs2-readyroom.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-readyroom.obj `if test -f 'menuui/readyroom.cpp'; then $(CYGPATH_W) 'menuui/readyroom.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/readyroom.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-readyroom.Tpo" "$(DEPDIR)/fs2-readyroom.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-readyroom.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/readyroom.cpp' object='fs2-readyroom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-readyroom.Po' tmpdepfile='$(DEPDIR)/fs2-readyroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-readyroom.obj `if test -f 'menuui/readyroom.cpp'; then $(CYGPATH_W) 'menuui/readyroom.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/readyroom.cpp'; fi`

fs2-snazzyui.o: menuui/snazzyui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-snazzyui.o -MD -MP -MF "$(DEPDIR)/fs2-snazzyui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-snazzyui.o `test -f 'menuui/snazzyui.cpp' || echo '$(srcdir)/'`menuui/snazzyui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-snazzyui.Tpo" "$(DEPDIR)/fs2-snazzyui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-snazzyui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/snazzyui.cpp' object='fs2-snazzyui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-snazzyui.Po' tmpdepfile='$(DEPDIR)/fs2-snazzyui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-snazzyui.o `test -f 'menuui/snazzyui.cpp' || echo '$(srcdir)/'`menuui/snazzyui.cpp

fs2-snazzyui.obj: menuui/snazzyui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-snazzyui.obj -MD -MP -MF "$(DEPDIR)/fs2-snazzyui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-snazzyui.obj `if test -f 'menuui/snazzyui.cpp'; then $(CYGPATH_W) 'menuui/snazzyui.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/snazzyui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-snazzyui.Tpo" "$(DEPDIR)/fs2-snazzyui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-snazzyui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/snazzyui.cpp' object='fs2-snazzyui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-snazzyui.Po' tmpdepfile='$(DEPDIR)/fs2-snazzyui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-snazzyui.obj `if test -f 'menuui/snazzyui.cpp'; then $(CYGPATH_W) 'menuui/snazzyui.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/snazzyui.cpp'; fi`

fs2-techmenu.o: menuui/techmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-techmenu.o -MD -MP -MF "$(DEPDIR)/fs2-techmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-techmenu.o `test -f 'menuui/techmenu.cpp' || echo '$(srcdir)/'`menuui/techmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-techmenu.Tpo" "$(DEPDIR)/fs2-techmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-techmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/techmenu.cpp' object='fs2-techmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-techmenu.Po' tmpdepfile='$(DEPDIR)/fs2-techmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-techmenu.o `test -f 'menuui/techmenu.cpp' || echo '$(srcdir)/'`menuui/techmenu.cpp

fs2-techmenu.obj: menuui/techmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-techmenu.obj -MD -MP -MF "$(DEPDIR)/fs2-techmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-techmenu.obj `if test -f 'menuui/techmenu.cpp'; then $(CYGPATH_W) 'menuui/techmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/techmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-techmenu.Tpo" "$(DEPDIR)/fs2-techmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-techmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/techmenu.cpp' object='fs2-techmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-techmenu.Po' tmpdepfile='$(DEPDIR)/fs2-techmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-techmenu.obj `if test -f 'menuui/techmenu.cpp'; then $(CYGPATH_W) 'menuui/techmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/techmenu.cpp'; fi`

fs2-trainingmenu.o: menuui/trainingmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-trainingmenu.o -MD -MP -MF "$(DEPDIR)/fs2-trainingmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-trainingmenu.o `test -f 'menuui/trainingmenu.cpp' || echo '$(srcdir)/'`menuui/trainingmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-trainingmenu.Tpo" "$(DEPDIR)/fs2-trainingmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-trainingmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/trainingmenu.cpp' object='fs2-trainingmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-trainingmenu.Po' tmpdepfile='$(DEPDIR)/fs2-trainingmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-trainingmenu.o `test -f 'menuui/trainingmenu.cpp' || echo '$(srcdir)/'`menuui/trainingmenu.cpp

fs2-trainingmenu.obj: menuui/trainingmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-trainingmenu.obj -MD -MP -MF "$(DEPDIR)/fs2-trainingmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-trainingmenu.obj `if test -f 'menuui/trainingmenu.cpp'; then $(CYGPATH_W) 'menuui/trainingmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/trainingmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-trainingmenu.Tpo" "$(DEPDIR)/fs2-trainingmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-trainingmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/trainingmenu.cpp' object='fs2-trainingmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-trainingmenu.Po' tmpdepfile='$(DEPDIR)/fs2-trainingmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-trainingmenu.obj `if test -f 'menuui/trainingmenu.cpp'; then $(CYGPATH_W) 'menuui/trainingmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/trainingmenu.cpp'; fi`

fs2-missionbriefcommon.o: mission/missionbriefcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionbriefcommon.o -MD -MP -MF "$(DEPDIR)/fs2-missionbriefcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionbriefcommon.o `test -f 'mission/missionbriefcommon.cpp' || echo '$(srcdir)/'`mission/missionbriefcommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionbriefcommon.Tpo" "$(DEPDIR)/fs2-missionbriefcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionbriefcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionbriefcommon.cpp' object='fs2-missionbriefcommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionbriefcommon.Po' tmpdepfile='$(DEPDIR)/fs2-missionbriefcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionbriefcommon.o `test -f 'mission/missionbriefcommon.cpp' || echo '$(srcdir)/'`mission/missionbriefcommon.cpp

fs2-missionbriefcommon.obj: mission/missionbriefcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionbriefcommon.obj -MD -MP -MF "$(DEPDIR)/fs2-missionbriefcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionbriefcommon.obj `if test -f 'mission/missionbriefcommon.cpp'; then $(CYGPATH_W) 'mission/missionbriefcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionbriefcommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionbriefcommon.Tpo" "$(DEPDIR)/fs2-missionbriefcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionbriefcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionbriefcommon.cpp' object='fs2-missionbriefcommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionbriefcommon.Po' tmpdepfile='$(DEPDIR)/fs2-missionbriefcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionbriefcommon.obj `if test -f 'mission/missionbriefcommon.cpp'; then $(CYGPATH_W) 'mission/missionbriefcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionbriefcommon.cpp'; fi`

fs2-missioncampaign.o: mission/missioncampaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missioncampaign.o -MD -MP -MF "$(DEPDIR)/fs2-missioncampaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missioncampaign.o `test -f 'mission/missioncampaign.cpp' || echo '$(srcdir)/'`mission/missioncampaign.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missioncampaign.Tpo" "$(DEPDIR)/fs2-missioncampaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missioncampaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missioncampaign.cpp' object='fs2-missioncampaign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missioncampaign.Po' tmpdepfile='$(DEPDIR)/fs2-missioncampaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missioncampaign.o `test -f 'mission/missioncampaign.cpp' || echo '$(srcdir)/'`mission/missioncampaign.cpp

fs2-missioncampaign.obj: mission/missioncampaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missioncampaign.obj -MD -MP -MF "$(DEPDIR)/fs2-missioncampaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missioncampaign.obj `if test -f 'mission/missioncampaign.cpp'; then $(CYGPATH_W) 'mission/missioncampaign.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missioncampaign.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missioncampaign.Tpo" "$(DEPDIR)/fs2-missioncampaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missioncampaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missioncampaign.cpp' object='fs2-missioncampaign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missioncampaign.Po' tmpdepfile='$(DEPDIR)/fs2-missioncampaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missioncampaign.obj `if test -f 'mission/missioncampaign.cpp'; then $(CYGPATH_W) 'mission/missioncampaign.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missioncampaign.cpp'; fi`

fs2-missiongoals.o: mission/missiongoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiongoals.o -MD -MP -MF "$(DEPDIR)/fs2-missiongoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiongoals.o `test -f 'mission/missiongoals.cpp' || echo '$(srcdir)/'`mission/missiongoals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiongoals.Tpo" "$(DEPDIR)/fs2-missiongoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiongoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongoals.cpp' object='fs2-missiongoals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiongoals.Po' tmpdepfile='$(DEPDIR)/fs2-missiongoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiongoals.o `test -f 'mission/missiongoals.cpp' || echo '$(srcdir)/'`mission/missiongoals.cpp

fs2-missiongoals.obj: mission/missiongoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiongoals.obj -MD -MP -MF "$(DEPDIR)/fs2-missiongoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiongoals.obj `if test -f 'mission/missiongoals.cpp'; then $(CYGPATH_W) 'mission/missiongoals.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongoals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiongoals.Tpo" "$(DEPDIR)/fs2-missiongoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiongoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongoals.cpp' object='fs2-missiongoals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiongoals.Po' tmpdepfile='$(DEPDIR)/fs2-missiongoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiongoals.obj `if test -f 'mission/missiongoals.cpp'; then $(CYGPATH_W) 'mission/missiongoals.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongoals.cpp'; fi`

fs2-missiongrid.o: mission/missiongrid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiongrid.o -MD -MP -MF "$(DEPDIR)/fs2-missiongrid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiongrid.o `test -f 'mission/missiongrid.cpp' || echo '$(srcdir)/'`mission/missiongrid.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiongrid.Tpo" "$(DEPDIR)/fs2-missiongrid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiongrid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongrid.cpp' object='fs2-missiongrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiongrid.Po' tmpdepfile='$(DEPDIR)/fs2-missiongrid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiongrid.o `test -f 'mission/missiongrid.cpp' || echo '$(srcdir)/'`mission/missiongrid.cpp

fs2-missiongrid.obj: mission/missiongrid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiongrid.obj -MD -MP -MF "$(DEPDIR)/fs2-missiongrid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiongrid.obj `if test -f 'mission/missiongrid.cpp'; then $(CYGPATH_W) 'mission/missiongrid.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongrid.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiongrid.Tpo" "$(DEPDIR)/fs2-missiongrid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiongrid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongrid.cpp' object='fs2-missiongrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiongrid.Po' tmpdepfile='$(DEPDIR)/fs2-missiongrid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiongrid.obj `if test -f 'mission/missiongrid.cpp'; then $(CYGPATH_W) 'mission/missiongrid.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongrid.cpp'; fi`

fs2-missionhotkey.o: mission/missionhotkey.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionhotkey.o -MD -MP -MF "$(DEPDIR)/fs2-missionhotkey.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionhotkey.o `test -f 'mission/missionhotkey.cpp' || echo '$(srcdir)/'`mission/missionhotkey.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionhotkey.Tpo" "$(DEPDIR)/fs2-missionhotkey.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionhotkey.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionhotkey.cpp' object='fs2-missionhotkey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionhotkey.Po' tmpdepfile='$(DEPDIR)/fs2-missionhotkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionhotkey.o `test -f 'mission/missionhotkey.cpp' || echo '$(srcdir)/'`mission/missionhotkey.cpp

fs2-missionhotkey.obj: mission/missionhotkey.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionhotkey.obj -MD -MP -MF "$(DEPDIR)/fs2-missionhotkey.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionhotkey.obj `if test -f 'mission/missionhotkey.cpp'; then $(CYGPATH_W) 'mission/missionhotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionhotkey.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionhotkey.Tpo" "$(DEPDIR)/fs2-missionhotkey.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionhotkey.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionhotkey.cpp' object='fs2-missionhotkey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionhotkey.Po' tmpdepfile='$(DEPDIR)/fs2-missionhotkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionhotkey.obj `if test -f 'mission/missionhotkey.cpp'; then $(CYGPATH_W) 'mission/missionhotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionhotkey.cpp'; fi`

fs2-missionload.o: mission/missionload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionload.o -MD -MP -MF "$(DEPDIR)/fs2-missionload.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionload.o `test -f 'mission/missionload.cpp' || echo '$(srcdir)/'`mission/missionload.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionload.Tpo" "$(DEPDIR)/fs2-missionload.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionload.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionload.cpp' object='fs2-missionload.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionload.Po' tmpdepfile='$(DEPDIR)/fs2-missionload.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionload.o `test -f 'mission/missionload.cpp' || echo '$(srcdir)/'`mission/missionload.cpp

fs2-missionload.obj: mission/missionload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionload.obj -MD -MP -MF "$(DEPDIR)/fs2-missionload.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionload.obj `if test -f 'mission/missionload.cpp'; then $(CYGPATH_W) 'mission/missionload.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionload.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionload.Tpo" "$(DEPDIR)/fs2-missionload.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionload.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionload.cpp' object='fs2-missionload.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionload.Po' tmpdepfile='$(DEPDIR)/fs2-missionload.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionload.obj `if test -f 'mission/missionload.cpp'; then $(CYGPATH_W) 'mission/missionload.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionload.cpp'; fi`

fs2-missionlog.o: mission/missionlog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionlog.o -MD -MP -MF "$(DEPDIR)/fs2-missionlog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionlog.o `test -f 'mission/missionlog.cpp' || echo '$(srcdir)/'`mission/missionlog.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionlog.Tpo" "$(DEPDIR)/fs2-missionlog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionlog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionlog.cpp' object='fs2-missionlog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionlog.Po' tmpdepfile='$(DEPDIR)/fs2-missionlog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionlog.o `test -f 'mission/missionlog.cpp' || echo '$(srcdir)/'`mission/missionlog.cpp

fs2-missionlog.obj: mission/missionlog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionlog.obj -MD -MP -MF "$(DEPDIR)/fs2-missionlog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionlog.obj `if test -f 'mission/missionlog.cpp'; then $(CYGPATH_W) 'mission/missionlog.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionlog.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionlog.Tpo" "$(DEPDIR)/fs2-missionlog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionlog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionlog.cpp' object='fs2-missionlog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionlog.Po' tmpdepfile='$(DEPDIR)/fs2-missionlog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionlog.obj `if test -f 'mission/missionlog.cpp'; then $(CYGPATH_W) 'mission/missionlog.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionlog.cpp'; fi`

fs2-missionmessage.o: mission/missionmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionmessage.o -MD -MP -MF "$(DEPDIR)/fs2-missionmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionmessage.o `test -f 'mission/missionmessage.cpp' || echo '$(srcdir)/'`mission/missionmessage.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionmessage.Tpo" "$(DEPDIR)/fs2-missionmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionmessage.cpp' object='fs2-missionmessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionmessage.Po' tmpdepfile='$(DEPDIR)/fs2-missionmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionmessage.o `test -f 'mission/missionmessage.cpp' || echo '$(srcdir)/'`mission/missionmessage.cpp

fs2-missionmessage.obj: mission/missionmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionmessage.obj -MD -MP -MF "$(DEPDIR)/fs2-missionmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionmessage.obj `if test -f 'mission/missionmessage.cpp'; then $(CYGPATH_W) 'mission/missionmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionmessage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionmessage.Tpo" "$(DEPDIR)/fs2-missionmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionmessage.cpp' object='fs2-missionmessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionmessage.Po' tmpdepfile='$(DEPDIR)/fs2-missionmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionmessage.obj `if test -f 'mission/missionmessage.cpp'; then $(CYGPATH_W) 'mission/missionmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionmessage.cpp'; fi`

fs2-missionparse.o: mission/missionparse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionparse.o -MD -MP -MF "$(DEPDIR)/fs2-missionparse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionparse.o `test -f 'mission/missionparse.cpp' || echo '$(srcdir)/'`mission/missionparse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionparse.Tpo" "$(DEPDIR)/fs2-missionparse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionparse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionparse.cpp' object='fs2-missionparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionparse.Po' tmpdepfile='$(DEPDIR)/fs2-missionparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionparse.o `test -f 'mission/missionparse.cpp' || echo '$(srcdir)/'`mission/missionparse.cpp

fs2-missionparse.obj: mission/missionparse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionparse.obj -MD -MP -MF "$(DEPDIR)/fs2-missionparse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionparse.obj `if test -f 'mission/missionparse.cpp'; then $(CYGPATH_W) 'mission/missionparse.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionparse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionparse.Tpo" "$(DEPDIR)/fs2-missionparse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionparse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionparse.cpp' object='fs2-missionparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionparse.Po' tmpdepfile='$(DEPDIR)/fs2-missionparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionparse.obj `if test -f 'mission/missionparse.cpp'; then $(CYGPATH_W) 'mission/missionparse.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionparse.cpp'; fi`

fs2-missiontraining.o: mission/missiontraining.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiontraining.o -MD -MP -MF "$(DEPDIR)/fs2-missiontraining.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiontraining.o `test -f 'mission/missiontraining.cpp' || echo '$(srcdir)/'`mission/missiontraining.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiontraining.Tpo" "$(DEPDIR)/fs2-missiontraining.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiontraining.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiontraining.cpp' object='fs2-missiontraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiontraining.Po' tmpdepfile='$(DEPDIR)/fs2-missiontraining.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiontraining.o `test -f 'mission/missiontraining.cpp' || echo '$(srcdir)/'`mission/missiontraining.cpp

fs2-missiontraining.obj: mission/missiontraining.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiontraining.obj -MD -MP -MF "$(DEPDIR)/fs2-missiontraining.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiontraining.obj `if test -f 'mission/missiontraining.cpp'; then $(CYGPATH_W) 'mission/missiontraining.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiontraining.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiontraining.Tpo" "$(DEPDIR)/fs2-missiontraining.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiontraining.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiontraining.cpp' object='fs2-missiontraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiontraining.Po' tmpdepfile='$(DEPDIR)/fs2-missiontraining.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiontraining.obj `if test -f 'mission/missiontraining.cpp'; then $(CYGPATH_W) 'mission/missiontraining.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiontraining.cpp'; fi`

fs2-missionbrief.o: missionui/missionbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionbrief.o -MD -MP -MF "$(DEPDIR)/fs2-missionbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionbrief.o `test -f 'missionui/missionbrief.cpp' || echo '$(srcdir)/'`missionui/missionbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionbrief.Tpo" "$(DEPDIR)/fs2-missionbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionbrief.cpp' object='fs2-missionbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missionbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionbrief.o `test -f 'missionui/missionbrief.cpp' || echo '$(srcdir)/'`missionui/missionbrief.cpp

fs2-missionbrief.obj: missionui/missionbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionbrief.obj -MD -MP -MF "$(DEPDIR)/fs2-missionbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionbrief.obj `if test -f 'missionui/missionbrief.cpp'; then $(CYGPATH_W) 'missionui/missionbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionbrief.Tpo" "$(DEPDIR)/fs2-missionbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionbrief.cpp' object='fs2-missionbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missionbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionbrief.obj `if test -f 'missionui/missionbrief.cpp'; then $(CYGPATH_W) 'missionui/missionbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionbrief.cpp'; fi`

fs2-missioncmdbrief.o: missionui/missioncmdbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missioncmdbrief.o -MD -MP -MF "$(DEPDIR)/fs2-missioncmdbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missioncmdbrief.o `test -f 'missionui/missioncmdbrief.cpp' || echo '$(srcdir)/'`missionui/missioncmdbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missioncmdbrief.Tpo" "$(DEPDIR)/fs2-missioncmdbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missioncmdbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missioncmdbrief.cpp' object='fs2-missioncmdbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missioncmdbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missioncmdbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missioncmdbrief.o `test -f 'missionui/missioncmdbrief.cpp' || echo '$(srcdir)/'`missionui/missioncmdbrief.cpp

fs2-missioncmdbrief.obj: missionui/missioncmdbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missioncmdbrief.obj -MD -MP -MF "$(DEPDIR)/fs2-missioncmdbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missioncmdbrief.obj `if test -f 'missionui/missioncmdbrief.cpp'; then $(CYGPATH_W) 'missionui/missioncmdbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missioncmdbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missioncmdbrief.Tpo" "$(DEPDIR)/fs2-missioncmdbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missioncmdbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missioncmdbrief.cpp' object='fs2-missioncmdbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missioncmdbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missioncmdbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missioncmdbrief.obj `if test -f 'missionui/missioncmdbrief.cpp'; then $(CYGPATH_W) 'missionui/missioncmdbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missioncmdbrief.cpp'; fi`

fs2-missiondebrief.o: missionui/missiondebrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiondebrief.o -MD -MP -MF "$(DEPDIR)/fs2-missiondebrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiondebrief.o `test -f 'missionui/missiondebrief.cpp' || echo '$(srcdir)/'`missionui/missiondebrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiondebrief.Tpo" "$(DEPDIR)/fs2-missiondebrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiondebrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missiondebrief.cpp' object='fs2-missiondebrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiondebrief.Po' tmpdepfile='$(DEPDIR)/fs2-missiondebrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiondebrief.o `test -f 'missionui/missiondebrief.cpp' || echo '$(srcdir)/'`missionui/missiondebrief.cpp

fs2-missiondebrief.obj: missionui/missiondebrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missiondebrief.obj -MD -MP -MF "$(DEPDIR)/fs2-missiondebrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missiondebrief.obj `if test -f 'missionui/missiondebrief.cpp'; then $(CYGPATH_W) 'missionui/missiondebrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missiondebrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missiondebrief.Tpo" "$(DEPDIR)/fs2-missiondebrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missiondebrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missiondebrief.cpp' object='fs2-missiondebrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missiondebrief.Po' tmpdepfile='$(DEPDIR)/fs2-missiondebrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missiondebrief.obj `if test -f 'missionui/missiondebrief.cpp'; then $(CYGPATH_W) 'missionui/missiondebrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missiondebrief.cpp'; fi`

fs2-missionloopbrief.o: missionui/missionloopbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionloopbrief.o -MD -MP -MF "$(DEPDIR)/fs2-missionloopbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionloopbrief.o `test -f 'missionui/missionloopbrief.cpp' || echo '$(srcdir)/'`missionui/missionloopbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionloopbrief.Tpo" "$(DEPDIR)/fs2-missionloopbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionloopbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionloopbrief.cpp' object='fs2-missionloopbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionloopbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missionloopbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionloopbrief.o `test -f 'missionui/missionloopbrief.cpp' || echo '$(srcdir)/'`missionui/missionloopbrief.cpp

fs2-missionloopbrief.obj: missionui/missionloopbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionloopbrief.obj -MD -MP -MF "$(DEPDIR)/fs2-missionloopbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionloopbrief.obj `if test -f 'missionui/missionloopbrief.cpp'; then $(CYGPATH_W) 'missionui/missionloopbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionloopbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionloopbrief.Tpo" "$(DEPDIR)/fs2-missionloopbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionloopbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionloopbrief.cpp' object='fs2-missionloopbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionloopbrief.Po' tmpdepfile='$(DEPDIR)/fs2-missionloopbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionloopbrief.obj `if test -f 'missionui/missionloopbrief.cpp'; then $(CYGPATH_W) 'missionui/missionloopbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionloopbrief.cpp'; fi`

fs2-missionpause.o: missionui/missionpause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionpause.o -MD -MP -MF "$(DEPDIR)/fs2-missionpause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionpause.o `test -f 'missionui/missionpause.cpp' || echo '$(srcdir)/'`missionui/missionpause.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionpause.Tpo" "$(DEPDIR)/fs2-missionpause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionpause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionpause.cpp' object='fs2-missionpause.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionpause.Po' tmpdepfile='$(DEPDIR)/fs2-missionpause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionpause.o `test -f 'missionui/missionpause.cpp' || echo '$(srcdir)/'`missionui/missionpause.cpp

fs2-missionpause.obj: missionui/missionpause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionpause.obj -MD -MP -MF "$(DEPDIR)/fs2-missionpause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionpause.obj `if test -f 'missionui/missionpause.cpp'; then $(CYGPATH_W) 'missionui/missionpause.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionpause.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionpause.Tpo" "$(DEPDIR)/fs2-missionpause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionpause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionpause.cpp' object='fs2-missionpause.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionpause.Po' tmpdepfile='$(DEPDIR)/fs2-missionpause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionpause.obj `if test -f 'missionui/missionpause.cpp'; then $(CYGPATH_W) 'missionui/missionpause.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionpause.cpp'; fi`

fs2-missionrecommend.o: missionui/missionrecommend.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionrecommend.o -MD -MP -MF "$(DEPDIR)/fs2-missionrecommend.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionrecommend.o `test -f 'missionui/missionrecommend.cpp' || echo '$(srcdir)/'`missionui/missionrecommend.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionrecommend.Tpo" "$(DEPDIR)/fs2-missionrecommend.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionrecommend.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionrecommend.cpp' object='fs2-missionrecommend.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionrecommend.Po' tmpdepfile='$(DEPDIR)/fs2-missionrecommend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionrecommend.o `test -f 'missionui/missionrecommend.cpp' || echo '$(srcdir)/'`missionui/missionrecommend.cpp

fs2-missionrecommend.obj: missionui/missionrecommend.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionrecommend.obj -MD -MP -MF "$(DEPDIR)/fs2-missionrecommend.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionrecommend.obj `if test -f 'missionui/missionrecommend.cpp'; then $(CYGPATH_W) 'missionui/missionrecommend.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionrecommend.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionrecommend.Tpo" "$(DEPDIR)/fs2-missionrecommend.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionrecommend.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionrecommend.cpp' object='fs2-missionrecommend.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionrecommend.Po' tmpdepfile='$(DEPDIR)/fs2-missionrecommend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionrecommend.obj `if test -f 'missionui/missionrecommend.cpp'; then $(CYGPATH_W) 'missionui/missionrecommend.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionrecommend.cpp'; fi`

fs2-missionscreencommon.o: missionui/missionscreencommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionscreencommon.o -MD -MP -MF "$(DEPDIR)/fs2-missionscreencommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionscreencommon.o `test -f 'missionui/missionscreencommon.cpp' || echo '$(srcdir)/'`missionui/missionscreencommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionscreencommon.Tpo" "$(DEPDIR)/fs2-missionscreencommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionscreencommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionscreencommon.cpp' object='fs2-missionscreencommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionscreencommon.Po' tmpdepfile='$(DEPDIR)/fs2-missionscreencommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionscreencommon.o `test -f 'missionui/missionscreencommon.cpp' || echo '$(srcdir)/'`missionui/missionscreencommon.cpp

fs2-missionscreencommon.obj: missionui/missionscreencommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionscreencommon.obj -MD -MP -MF "$(DEPDIR)/fs2-missionscreencommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionscreencommon.obj `if test -f 'missionui/missionscreencommon.cpp'; then $(CYGPATH_W) 'missionui/missionscreencommon.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionscreencommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionscreencommon.Tpo" "$(DEPDIR)/fs2-missionscreencommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionscreencommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionscreencommon.cpp' object='fs2-missionscreencommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionscreencommon.Po' tmpdepfile='$(DEPDIR)/fs2-missionscreencommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionscreencommon.obj `if test -f 'missionui/missionscreencommon.cpp'; then $(CYGPATH_W) 'missionui/missionscreencommon.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionscreencommon.cpp'; fi`

fs2-missionshipchoice.o: missionui/missionshipchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionshipchoice.o -MD -MP -MF "$(DEPDIR)/fs2-missionshipchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionshipchoice.o `test -f 'missionui/missionshipchoice.cpp' || echo '$(srcdir)/'`missionui/missionshipchoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionshipchoice.Tpo" "$(DEPDIR)/fs2-missionshipchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionshipchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionshipchoice.cpp' object='fs2-missionshipchoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionshipchoice.Po' tmpdepfile='$(DEPDIR)/fs2-missionshipchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionshipchoice.o `test -f 'missionui/missionshipchoice.cpp' || echo '$(srcdir)/'`missionui/missionshipchoice.cpp

fs2-missionshipchoice.obj: missionui/missionshipchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionshipchoice.obj -MD -MP -MF "$(DEPDIR)/fs2-missionshipchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionshipchoice.obj `if test -f 'missionui/missionshipchoice.cpp'; then $(CYGPATH_W) 'missionui/missionshipchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionshipchoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionshipchoice.Tpo" "$(DEPDIR)/fs2-missionshipchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionshipchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionshipchoice.cpp' object='fs2-missionshipchoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionshipchoice.Po' tmpdepfile='$(DEPDIR)/fs2-missionshipchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionshipchoice.obj `if test -f 'missionui/missionshipchoice.cpp'; then $(CYGPATH_W) 'missionui/missionshipchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionshipchoice.cpp'; fi`

fs2-missionstats.o: missionui/missionstats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionstats.o -MD -MP -MF "$(DEPDIR)/fs2-missionstats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionstats.o `test -f 'missionui/missionstats.cpp' || echo '$(srcdir)/'`missionui/missionstats.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionstats.Tpo" "$(DEPDIR)/fs2-missionstats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionstats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionstats.cpp' object='fs2-missionstats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionstats.Po' tmpdepfile='$(DEPDIR)/fs2-missionstats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionstats.o `test -f 'missionui/missionstats.cpp' || echo '$(srcdir)/'`missionui/missionstats.cpp

fs2-missionstats.obj: missionui/missionstats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionstats.obj -MD -MP -MF "$(DEPDIR)/fs2-missionstats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionstats.obj `if test -f 'missionui/missionstats.cpp'; then $(CYGPATH_W) 'missionui/missionstats.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionstats.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionstats.Tpo" "$(DEPDIR)/fs2-missionstats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionstats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionstats.cpp' object='fs2-missionstats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionstats.Po' tmpdepfile='$(DEPDIR)/fs2-missionstats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionstats.obj `if test -f 'missionui/missionstats.cpp'; then $(CYGPATH_W) 'missionui/missionstats.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionstats.cpp'; fi`

fs2-missionweaponchoice.o: missionui/missionweaponchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionweaponchoice.o -MD -MP -MF "$(DEPDIR)/fs2-missionweaponchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionweaponchoice.o `test -f 'missionui/missionweaponchoice.cpp' || echo '$(srcdir)/'`missionui/missionweaponchoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionweaponchoice.Tpo" "$(DEPDIR)/fs2-missionweaponchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionweaponchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionweaponchoice.cpp' object='fs2-missionweaponchoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionweaponchoice.Po' tmpdepfile='$(DEPDIR)/fs2-missionweaponchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionweaponchoice.o `test -f 'missionui/missionweaponchoice.cpp' || echo '$(srcdir)/'`missionui/missionweaponchoice.cpp

fs2-missionweaponchoice.obj: missionui/missionweaponchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-missionweaponchoice.obj -MD -MP -MF "$(DEPDIR)/fs2-missionweaponchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-missionweaponchoice.obj `if test -f 'missionui/missionweaponchoice.cpp'; then $(CYGPATH_W) 'missionui/missionweaponchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionweaponchoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-missionweaponchoice.Tpo" "$(DEPDIR)/fs2-missionweaponchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-missionweaponchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionweaponchoice.cpp' object='fs2-missionweaponchoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-missionweaponchoice.Po' tmpdepfile='$(DEPDIR)/fs2-missionweaponchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-missionweaponchoice.obj `if test -f 'missionui/missionweaponchoice.cpp'; then $(CYGPATH_W) 'missionui/missionweaponchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionweaponchoice.cpp'; fi`

fs2-redalert.o: missionui/redalert.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-redalert.o -MD -MP -MF "$(DEPDIR)/fs2-redalert.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-redalert.o `test -f 'missionui/redalert.cpp' || echo '$(srcdir)/'`missionui/redalert.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-redalert.Tpo" "$(DEPDIR)/fs2-redalert.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-redalert.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/redalert.cpp' object='fs2-redalert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-redalert.Po' tmpdepfile='$(DEPDIR)/fs2-redalert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-redalert.o `test -f 'missionui/redalert.cpp' || echo '$(srcdir)/'`missionui/redalert.cpp

fs2-redalert.obj: missionui/redalert.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-redalert.obj -MD -MP -MF "$(DEPDIR)/fs2-redalert.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-redalert.obj `if test -f 'missionui/redalert.cpp'; then $(CYGPATH_W) 'missionui/redalert.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/redalert.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-redalert.Tpo" "$(DEPDIR)/fs2-redalert.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-redalert.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/redalert.cpp' object='fs2-redalert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-redalert.Po' tmpdepfile='$(DEPDIR)/fs2-redalert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-redalert.obj `if test -f 'missionui/redalert.cpp'; then $(CYGPATH_W) 'missionui/redalert.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/redalert.cpp'; fi`

fs2-modelcollide.o: model/modelcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelcollide.o -MD -MP -MF "$(DEPDIR)/fs2-modelcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelcollide.o `test -f 'model/modelcollide.cpp' || echo '$(srcdir)/'`model/modelcollide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelcollide.Tpo" "$(DEPDIR)/fs2-modelcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelcollide.cpp' object='fs2-modelcollide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelcollide.Po' tmpdepfile='$(DEPDIR)/fs2-modelcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelcollide.o `test -f 'model/modelcollide.cpp' || echo '$(srcdir)/'`model/modelcollide.cpp

fs2-modelcollide.obj: model/modelcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelcollide.obj -MD -MP -MF "$(DEPDIR)/fs2-modelcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelcollide.obj `if test -f 'model/modelcollide.cpp'; then $(CYGPATH_W) 'model/modelcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelcollide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelcollide.Tpo" "$(DEPDIR)/fs2-modelcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelcollide.cpp' object='fs2-modelcollide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelcollide.Po' tmpdepfile='$(DEPDIR)/fs2-modelcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelcollide.obj `if test -f 'model/modelcollide.cpp'; then $(CYGPATH_W) 'model/modelcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelcollide.cpp'; fi`

fs2-modelinterp.o: model/modelinterp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelinterp.o -MD -MP -MF "$(DEPDIR)/fs2-modelinterp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelinterp.o `test -f 'model/modelinterp.cpp' || echo '$(srcdir)/'`model/modelinterp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelinterp.Tpo" "$(DEPDIR)/fs2-modelinterp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelinterp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelinterp.cpp' object='fs2-modelinterp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelinterp.Po' tmpdepfile='$(DEPDIR)/fs2-modelinterp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelinterp.o `test -f 'model/modelinterp.cpp' || echo '$(srcdir)/'`model/modelinterp.cpp

fs2-modelinterp.obj: model/modelinterp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelinterp.obj -MD -MP -MF "$(DEPDIR)/fs2-modelinterp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelinterp.obj `if test -f 'model/modelinterp.cpp'; then $(CYGPATH_W) 'model/modelinterp.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelinterp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelinterp.Tpo" "$(DEPDIR)/fs2-modelinterp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelinterp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelinterp.cpp' object='fs2-modelinterp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelinterp.Po' tmpdepfile='$(DEPDIR)/fs2-modelinterp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelinterp.obj `if test -f 'model/modelinterp.cpp'; then $(CYGPATH_W) 'model/modelinterp.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelinterp.cpp'; fi`

fs2-modeloctant.o: model/modeloctant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modeloctant.o -MD -MP -MF "$(DEPDIR)/fs2-modeloctant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modeloctant.o `test -f 'model/modeloctant.cpp' || echo '$(srcdir)/'`model/modeloctant.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modeloctant.Tpo" "$(DEPDIR)/fs2-modeloctant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modeloctant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modeloctant.cpp' object='fs2-modeloctant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modeloctant.Po' tmpdepfile='$(DEPDIR)/fs2-modeloctant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modeloctant.o `test -f 'model/modeloctant.cpp' || echo '$(srcdir)/'`model/modeloctant.cpp

fs2-modeloctant.obj: model/modeloctant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modeloctant.obj -MD -MP -MF "$(DEPDIR)/fs2-modeloctant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modeloctant.obj `if test -f 'model/modeloctant.cpp'; then $(CYGPATH_W) 'model/modeloctant.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modeloctant.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modeloctant.Tpo" "$(DEPDIR)/fs2-modeloctant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modeloctant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modeloctant.cpp' object='fs2-modeloctant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modeloctant.Po' tmpdepfile='$(DEPDIR)/fs2-modeloctant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modeloctant.obj `if test -f 'model/modeloctant.cpp'; then $(CYGPATH_W) 'model/modeloctant.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modeloctant.cpp'; fi`

fs2-modelread.o: model/modelread.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelread.o -MD -MP -MF "$(DEPDIR)/fs2-modelread.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelread.o `test -f 'model/modelread.cpp' || echo '$(srcdir)/'`model/modelread.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelread.Tpo" "$(DEPDIR)/fs2-modelread.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelread.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelread.cpp' object='fs2-modelread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelread.Po' tmpdepfile='$(DEPDIR)/fs2-modelread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelread.o `test -f 'model/modelread.cpp' || echo '$(srcdir)/'`model/modelread.cpp

fs2-modelread.obj: model/modelread.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-modelread.obj -MD -MP -MF "$(DEPDIR)/fs2-modelread.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-modelread.obj `if test -f 'model/modelread.cpp'; then $(CYGPATH_W) 'model/modelread.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelread.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-modelread.Tpo" "$(DEPDIR)/fs2-modelread.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-modelread.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelread.cpp' object='fs2-modelread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-modelread.Po' tmpdepfile='$(DEPDIR)/fs2-modelread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-modelread.obj `if test -f 'model/modelread.cpp'; then $(CYGPATH_W) 'model/modelread.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelread.cpp'; fi`

fs2-neb.o: nebula/neb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-neb.o -MD -MP -MF "$(DEPDIR)/fs2-neb.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-neb.o `test -f 'nebula/neb.cpp' || echo '$(srcdir)/'`nebula/neb.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-neb.Tpo" "$(DEPDIR)/fs2-neb.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-neb.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neb.cpp' object='fs2-neb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-neb.Po' tmpdepfile='$(DEPDIR)/fs2-neb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-neb.o `test -f 'nebula/neb.cpp' || echo '$(srcdir)/'`nebula/neb.cpp

fs2-neb.obj: nebula/neb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-neb.obj -MD -MP -MF "$(DEPDIR)/fs2-neb.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-neb.obj `if test -f 'nebula/neb.cpp'; then $(CYGPATH_W) 'nebula/neb.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neb.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-neb.Tpo" "$(DEPDIR)/fs2-neb.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-neb.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neb.cpp' object='fs2-neb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-neb.Po' tmpdepfile='$(DEPDIR)/fs2-neb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-neb.obj `if test -f 'nebula/neb.cpp'; then $(CYGPATH_W) 'nebula/neb.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neb.cpp'; fi`

fs2-neblightning.o: nebula/neblightning.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-neblightning.o -MD -MP -MF "$(DEPDIR)/fs2-neblightning.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-neblightning.o `test -f 'nebula/neblightning.cpp' || echo '$(srcdir)/'`nebula/neblightning.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-neblightning.Tpo" "$(DEPDIR)/fs2-neblightning.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-neblightning.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neblightning.cpp' object='fs2-neblightning.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-neblightning.Po' tmpdepfile='$(DEPDIR)/fs2-neblightning.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-neblightning.o `test -f 'nebula/neblightning.cpp' || echo '$(srcdir)/'`nebula/neblightning.cpp

fs2-neblightning.obj: nebula/neblightning.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-neblightning.obj -MD -MP -MF "$(DEPDIR)/fs2-neblightning.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-neblightning.obj `if test -f 'nebula/neblightning.cpp'; then $(CYGPATH_W) 'nebula/neblightning.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neblightning.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-neblightning.Tpo" "$(DEPDIR)/fs2-neblightning.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-neblightning.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neblightning.cpp' object='fs2-neblightning.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-neblightning.Po' tmpdepfile='$(DEPDIR)/fs2-neblightning.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-neblightning.obj `if test -f 'nebula/neblightning.cpp'; then $(CYGPATH_W) 'nebula/neblightning.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neblightning.cpp'; fi`

fs2-collidedebrisship.o: object/collidedebrisship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collidedebrisship.o -MD -MP -MF "$(DEPDIR)/fs2-collidedebrisship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collidedebrisship.o `test -f 'object/collidedebrisship.cpp' || echo '$(srcdir)/'`object/collidedebrisship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collidedebrisship.Tpo" "$(DEPDIR)/fs2-collidedebrisship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collidedebrisship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisship.cpp' object='fs2-collidedebrisship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collidedebrisship.Po' tmpdepfile='$(DEPDIR)/fs2-collidedebrisship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collidedebrisship.o `test -f 'object/collidedebrisship.cpp' || echo '$(srcdir)/'`object/collidedebrisship.cpp

fs2-collidedebrisship.obj: object/collidedebrisship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collidedebrisship.obj -MD -MP -MF "$(DEPDIR)/fs2-collidedebrisship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collidedebrisship.obj `if test -f 'object/collidedebrisship.cpp'; then $(CYGPATH_W) 'object/collidedebrisship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collidedebrisship.Tpo" "$(DEPDIR)/fs2-collidedebrisship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collidedebrisship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisship.cpp' object='fs2-collidedebrisship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collidedebrisship.Po' tmpdepfile='$(DEPDIR)/fs2-collidedebrisship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collidedebrisship.obj `if test -f 'object/collidedebrisship.cpp'; then $(CYGPATH_W) 'object/collidedebrisship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisship.cpp'; fi`

fs2-collidedebrisweapon.o: object/collidedebrisweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collidedebrisweapon.o -MD -MP -MF "$(DEPDIR)/fs2-collidedebrisweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collidedebrisweapon.o `test -f 'object/collidedebrisweapon.cpp' || echo '$(srcdir)/'`object/collidedebrisweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collidedebrisweapon.Tpo" "$(DEPDIR)/fs2-collidedebrisweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collidedebrisweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisweapon.cpp' object='fs2-collidedebrisweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collidedebrisweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collidedebrisweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collidedebrisweapon.o `test -f 'object/collidedebrisweapon.cpp' || echo '$(srcdir)/'`object/collidedebrisweapon.cpp

fs2-collidedebrisweapon.obj: object/collidedebrisweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collidedebrisweapon.obj -MD -MP -MF "$(DEPDIR)/fs2-collidedebrisweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collidedebrisweapon.obj `if test -f 'object/collidedebrisweapon.cpp'; then $(CYGPATH_W) 'object/collidedebrisweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collidedebrisweapon.Tpo" "$(DEPDIR)/fs2-collidedebrisweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collidedebrisweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisweapon.cpp' object='fs2-collidedebrisweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collidedebrisweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collidedebrisweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collidedebrisweapon.obj `if test -f 'object/collidedebrisweapon.cpp'; then $(CYGPATH_W) 'object/collidedebrisweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisweapon.cpp'; fi`

fs2-collideshipship.o: object/collideshipship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideshipship.o -MD -MP -MF "$(DEPDIR)/fs2-collideshipship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideshipship.o `test -f 'object/collideshipship.cpp' || echo '$(srcdir)/'`object/collideshipship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideshipship.Tpo" "$(DEPDIR)/fs2-collideshipship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideshipship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipship.cpp' object='fs2-collideshipship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideshipship.Po' tmpdepfile='$(DEPDIR)/fs2-collideshipship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideshipship.o `test -f 'object/collideshipship.cpp' || echo '$(srcdir)/'`object/collideshipship.cpp

fs2-collideshipship.obj: object/collideshipship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideshipship.obj -MD -MP -MF "$(DEPDIR)/fs2-collideshipship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideshipship.obj `if test -f 'object/collideshipship.cpp'; then $(CYGPATH_W) 'object/collideshipship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideshipship.Tpo" "$(DEPDIR)/fs2-collideshipship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideshipship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipship.cpp' object='fs2-collideshipship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideshipship.Po' tmpdepfile='$(DEPDIR)/fs2-collideshipship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideshipship.obj `if test -f 'object/collideshipship.cpp'; then $(CYGPATH_W) 'object/collideshipship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipship.cpp'; fi`

fs2-collideshipweapon.o: object/collideshipweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideshipweapon.o -MD -MP -MF "$(DEPDIR)/fs2-collideshipweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideshipweapon.o `test -f 'object/collideshipweapon.cpp' || echo '$(srcdir)/'`object/collideshipweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideshipweapon.Tpo" "$(DEPDIR)/fs2-collideshipweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideshipweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipweapon.cpp' object='fs2-collideshipweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideshipweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collideshipweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideshipweapon.o `test -f 'object/collideshipweapon.cpp' || echo '$(srcdir)/'`object/collideshipweapon.cpp

fs2-collideshipweapon.obj: object/collideshipweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideshipweapon.obj -MD -MP -MF "$(DEPDIR)/fs2-collideshipweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideshipweapon.obj `if test -f 'object/collideshipweapon.cpp'; then $(CYGPATH_W) 'object/collideshipweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideshipweapon.Tpo" "$(DEPDIR)/fs2-collideshipweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideshipweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipweapon.cpp' object='fs2-collideshipweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideshipweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collideshipweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideshipweapon.obj `if test -f 'object/collideshipweapon.cpp'; then $(CYGPATH_W) 'object/collideshipweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipweapon.cpp'; fi`

fs2-collideweaponweapon.o: object/collideweaponweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideweaponweapon.o -MD -MP -MF "$(DEPDIR)/fs2-collideweaponweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideweaponweapon.o `test -f 'object/collideweaponweapon.cpp' || echo '$(srcdir)/'`object/collideweaponweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideweaponweapon.Tpo" "$(DEPDIR)/fs2-collideweaponweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideweaponweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideweaponweapon.cpp' object='fs2-collideweaponweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideweaponweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collideweaponweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideweaponweapon.o `test -f 'object/collideweaponweapon.cpp' || echo '$(srcdir)/'`object/collideweaponweapon.cpp

fs2-collideweaponweapon.obj: object/collideweaponweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-collideweaponweapon.obj -MD -MP -MF "$(DEPDIR)/fs2-collideweaponweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-collideweaponweapon.obj `if test -f 'object/collideweaponweapon.cpp'; then $(CYGPATH_W) 'object/collideweaponweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideweaponweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-collideweaponweapon.Tpo" "$(DEPDIR)/fs2-collideweaponweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-collideweaponweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideweaponweapon.cpp' object='fs2-collideweaponweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-collideweaponweapon.Po' tmpdepfile='$(DEPDIR)/fs2-collideweaponweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-collideweaponweapon.obj `if test -f 'object/collideweaponweapon.cpp'; then $(CYGPATH_W) 'object/collideweaponweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideweaponweapon.cpp'; fi`

fs2-objcollide.o: object/objcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objcollide.o -MD -MP -MF "$(DEPDIR)/fs2-objcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objcollide.o `test -f 'object/objcollide.cpp' || echo '$(srcdir)/'`object/objcollide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objcollide.Tpo" "$(DEPDIR)/fs2-objcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objcollide.cpp' object='fs2-objcollide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objcollide.Po' tmpdepfile='$(DEPDIR)/fs2-objcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objcollide.o `test -f 'object/objcollide.cpp' || echo '$(srcdir)/'`object/objcollide.cpp

fs2-objcollide.obj: object/objcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objcollide.obj -MD -MP -MF "$(DEPDIR)/fs2-objcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objcollide.obj `if test -f 'object/objcollide.cpp'; then $(CYGPATH_W) 'object/objcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objcollide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objcollide.Tpo" "$(DEPDIR)/fs2-objcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objcollide.cpp' object='fs2-objcollide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objcollide.Po' tmpdepfile='$(DEPDIR)/fs2-objcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objcollide.obj `if test -f 'object/objcollide.cpp'; then $(CYGPATH_W) 'object/objcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objcollide.cpp'; fi`

fs2-object.o: object/object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-object.o -MD -MP -MF "$(DEPDIR)/fs2-object.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-object.o `test -f 'object/object.cpp' || echo '$(srcdir)/'`object/object.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-object.Tpo" "$(DEPDIR)/fs2-object.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-object.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/object.cpp' object='fs2-object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-object.Po' tmpdepfile='$(DEPDIR)/fs2-object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-object.o `test -f 'object/object.cpp' || echo '$(srcdir)/'`object/object.cpp

fs2-object.obj: object/object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-object.obj -MD -MP -MF "$(DEPDIR)/fs2-object.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-object.obj `if test -f 'object/object.cpp'; then $(CYGPATH_W) 'object/object.cpp'; else $(CYGPATH_W) '$(srcdir)/object/object.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-object.Tpo" "$(DEPDIR)/fs2-object.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-object.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/object.cpp' object='fs2-object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-object.Po' tmpdepfile='$(DEPDIR)/fs2-object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-object.obj `if test -f 'object/object.cpp'; then $(CYGPATH_W) 'object/object.cpp'; else $(CYGPATH_W) '$(srcdir)/object/object.cpp'; fi`

fs2-objectsort.o: object/objectsort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objectsort.o -MD -MP -MF "$(DEPDIR)/fs2-objectsort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objectsort.o `test -f 'object/objectsort.cpp' || echo '$(srcdir)/'`object/objectsort.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objectsort.Tpo" "$(DEPDIR)/fs2-objectsort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objectsort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsort.cpp' object='fs2-objectsort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objectsort.Po' tmpdepfile='$(DEPDIR)/fs2-objectsort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objectsort.o `test -f 'object/objectsort.cpp' || echo '$(srcdir)/'`object/objectsort.cpp

fs2-objectsort.obj: object/objectsort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objectsort.obj -MD -MP -MF "$(DEPDIR)/fs2-objectsort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objectsort.obj `if test -f 'object/objectsort.cpp'; then $(CYGPATH_W) 'object/objectsort.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsort.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objectsort.Tpo" "$(DEPDIR)/fs2-objectsort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objectsort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsort.cpp' object='fs2-objectsort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objectsort.Po' tmpdepfile='$(DEPDIR)/fs2-objectsort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objectsort.obj `if test -f 'object/objectsort.cpp'; then $(CYGPATH_W) 'object/objectsort.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsort.cpp'; fi`

fs2-observer.o: observer/observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-observer.o -MD -MP -MF "$(DEPDIR)/fs2-observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-observer.o `test -f 'observer/observer.cpp' || echo '$(srcdir)/'`observer/observer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-observer.Tpo" "$(DEPDIR)/fs2-observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='observer/observer.cpp' object='fs2-observer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-observer.Po' tmpdepfile='$(DEPDIR)/fs2-observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-observer.o `test -f 'observer/observer.cpp' || echo '$(srcdir)/'`observer/observer.cpp

fs2-observer.obj: observer/observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-observer.obj -MD -MP -MF "$(DEPDIR)/fs2-observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-observer.obj `if test -f 'observer/observer.cpp'; then $(CYGPATH_W) 'observer/observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer/observer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-observer.Tpo" "$(DEPDIR)/fs2-observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='observer/observer.cpp' object='fs2-observer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-observer.Po' tmpdepfile='$(DEPDIR)/fs2-observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-observer.obj `if test -f 'observer/observer.cpp'; then $(CYGPATH_W) 'observer/observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer/observer.cpp'; fi`

fs2-palman.o: palman/palman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-palman.o -MD -MP -MF "$(DEPDIR)/fs2-palman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-palman.o `test -f 'palman/palman.cpp' || echo '$(srcdir)/'`palman/palman.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-palman.Tpo" "$(DEPDIR)/fs2-palman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-palman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='palman/palman.cpp' object='fs2-palman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-palman.Po' tmpdepfile='$(DEPDIR)/fs2-palman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-palman.o `test -f 'palman/palman.cpp' || echo '$(srcdir)/'`palman/palman.cpp

fs2-palman.obj: palman/palman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-palman.obj -MD -MP -MF "$(DEPDIR)/fs2-palman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-palman.obj `if test -f 'palman/palman.cpp'; then $(CYGPATH_W) 'palman/palman.cpp'; else $(CYGPATH_W) '$(srcdir)/palman/palman.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-palman.Tpo" "$(DEPDIR)/fs2-palman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-palman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='palman/palman.cpp' object='fs2-palman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-palman.Po' tmpdepfile='$(DEPDIR)/fs2-palman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-palman.obj `if test -f 'palman/palman.cpp'; then $(CYGPATH_W) 'palman/palman.cpp'; else $(CYGPATH_W) '$(srcdir)/palman/palman.cpp'; fi`

fs2-encrypt.o: parse/encrypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-encrypt.o -MD -MP -MF "$(DEPDIR)/fs2-encrypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-encrypt.o `test -f 'parse/encrypt.cpp' || echo '$(srcdir)/'`parse/encrypt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-encrypt.Tpo" "$(DEPDIR)/fs2-encrypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-encrypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/encrypt.cpp' object='fs2-encrypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-encrypt.Po' tmpdepfile='$(DEPDIR)/fs2-encrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-encrypt.o `test -f 'parse/encrypt.cpp' || echo '$(srcdir)/'`parse/encrypt.cpp

fs2-encrypt.obj: parse/encrypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-encrypt.obj -MD -MP -MF "$(DEPDIR)/fs2-encrypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-encrypt.obj `if test -f 'parse/encrypt.cpp'; then $(CYGPATH_W) 'parse/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/encrypt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-encrypt.Tpo" "$(DEPDIR)/fs2-encrypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-encrypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/encrypt.cpp' object='fs2-encrypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-encrypt.Po' tmpdepfile='$(DEPDIR)/fs2-encrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-encrypt.obj `if test -f 'parse/encrypt.cpp'; then $(CYGPATH_W) 'parse/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/encrypt.cpp'; fi`

fs2-parselo.o: parse/parselo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-parselo.o -MD -MP -MF "$(DEPDIR)/fs2-parselo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-parselo.o `test -f 'parse/parselo.cpp' || echo '$(srcdir)/'`parse/parselo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-parselo.Tpo" "$(DEPDIR)/fs2-parselo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-parselo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/parselo.cpp' object='fs2-parselo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-parselo.Po' tmpdepfile='$(DEPDIR)/fs2-parselo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-parselo.o `test -f 'parse/parselo.cpp' || echo '$(srcdir)/'`parse/parselo.cpp

fs2-parselo.obj: parse/parselo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-parselo.obj -MD -MP -MF "$(DEPDIR)/fs2-parselo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-parselo.obj `if test -f 'parse/parselo.cpp'; then $(CYGPATH_W) 'parse/parselo.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/parselo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-parselo.Tpo" "$(DEPDIR)/fs2-parselo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-parselo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/parselo.cpp' object='fs2-parselo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-parselo.Po' tmpdepfile='$(DEPDIR)/fs2-parselo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-parselo.obj `if test -f 'parse/parselo.cpp'; then $(CYGPATH_W) 'parse/parselo.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/parselo.cpp'; fi`

fs2-sexp.o: parse/sexp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-sexp.o -MD -MP -MF "$(DEPDIR)/fs2-sexp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-sexp.o `test -f 'parse/sexp.cpp' || echo '$(srcdir)/'`parse/sexp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-sexp.Tpo" "$(DEPDIR)/fs2-sexp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-sexp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/sexp.cpp' object='fs2-sexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-sexp.Po' tmpdepfile='$(DEPDIR)/fs2-sexp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-sexp.o `test -f 'parse/sexp.cpp' || echo '$(srcdir)/'`parse/sexp.cpp

fs2-sexp.obj: parse/sexp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-sexp.obj -MD -MP -MF "$(DEPDIR)/fs2-sexp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-sexp.obj `if test -f 'parse/sexp.cpp'; then $(CYGPATH_W) 'parse/sexp.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/sexp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-sexp.Tpo" "$(DEPDIR)/fs2-sexp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-sexp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/sexp.cpp' object='fs2-sexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-sexp.Po' tmpdepfile='$(DEPDIR)/fs2-sexp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-sexp.obj `if test -f 'parse/sexp.cpp'; then $(CYGPATH_W) 'parse/sexp.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/sexp.cpp'; fi`

fs2-particle.o: particle/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-particle.o -MD -MP -MF "$(DEPDIR)/fs2-particle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-particle.o `test -f 'particle/particle.cpp' || echo '$(srcdir)/'`particle/particle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-particle.Tpo" "$(DEPDIR)/fs2-particle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-particle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='particle/particle.cpp' object='fs2-particle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-particle.Po' tmpdepfile='$(DEPDIR)/fs2-particle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-particle.o `test -f 'particle/particle.cpp' || echo '$(srcdir)/'`particle/particle.cpp

fs2-particle.obj: particle/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-particle.obj -MD -MP -MF "$(DEPDIR)/fs2-particle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-particle.obj `if test -f 'particle/particle.cpp'; then $(CYGPATH_W) 'particle/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/particle/particle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-particle.Tpo" "$(DEPDIR)/fs2-particle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-particle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='particle/particle.cpp' object='fs2-particle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-particle.Po' tmpdepfile='$(DEPDIR)/fs2-particle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-particle.obj `if test -f 'particle/particle.cpp'; then $(CYGPATH_W) 'particle/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/particle/particle.cpp'; fi`

fs2-pcxutils.o: pcxutils/pcxutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-pcxutils.o -MD -MP -MF "$(DEPDIR)/fs2-pcxutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-pcxutils.o `test -f 'pcxutils/pcxutils.cpp' || echo '$(srcdir)/'`pcxutils/pcxutils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-pcxutils.Tpo" "$(DEPDIR)/fs2-pcxutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-pcxutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pcxutils/pcxutils.cpp' object='fs2-pcxutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-pcxutils.Po' tmpdepfile='$(DEPDIR)/fs2-pcxutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-pcxutils.o `test -f 'pcxutils/pcxutils.cpp' || echo '$(srcdir)/'`pcxutils/pcxutils.cpp

fs2-pcxutils.obj: pcxutils/pcxutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-pcxutils.obj -MD -MP -MF "$(DEPDIR)/fs2-pcxutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-pcxutils.obj `if test -f 'pcxutils/pcxutils.cpp'; then $(CYGPATH_W) 'pcxutils/pcxutils.cpp'; else $(CYGPATH_W) '$(srcdir)/pcxutils/pcxutils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-pcxutils.Tpo" "$(DEPDIR)/fs2-pcxutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-pcxutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pcxutils/pcxutils.cpp' object='fs2-pcxutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-pcxutils.Po' tmpdepfile='$(DEPDIR)/fs2-pcxutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-pcxutils.obj `if test -f 'pcxutils/pcxutils.cpp'; then $(CYGPATH_W) 'pcxutils/pcxutils.cpp'; else $(CYGPATH_W) '$(srcdir)/pcxutils/pcxutils.cpp'; fi`

fs2-physics.o: physics/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-physics.o -MD -MP -MF "$(DEPDIR)/fs2-physics.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-physics.o `test -f 'physics/physics.cpp' || echo '$(srcdir)/'`physics/physics.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-physics.Tpo" "$(DEPDIR)/fs2-physics.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-physics.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='physics/physics.cpp' object='fs2-physics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-physics.Po' tmpdepfile='$(DEPDIR)/fs2-physics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-physics.o `test -f 'physics/physics.cpp' || echo '$(srcdir)/'`physics/physics.cpp

fs2-physics.obj: physics/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-physics.obj -MD -MP -MF "$(DEPDIR)/fs2-physics.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-physics.obj `if test -f 'physics/physics.cpp'; then $(CYGPATH_W) 'physics/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/physics/physics.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-physics.Tpo" "$(DEPDIR)/fs2-physics.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-physics.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='physics/physics.cpp' object='fs2-physics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-physics.Po' tmpdepfile='$(DEPDIR)/fs2-physics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-physics.obj `if test -f 'physics/physics.cpp'; then $(CYGPATH_W) 'physics/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/physics/physics.cpp'; fi`

fs2-managepilot.o: playerman/managepilot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-managepilot.o -MD -MP -MF "$(DEPDIR)/fs2-managepilot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-managepilot.o `test -f 'playerman/managepilot.cpp' || echo '$(srcdir)/'`playerman/managepilot.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-managepilot.Tpo" "$(DEPDIR)/fs2-managepilot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-managepilot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/managepilot.cpp' object='fs2-managepilot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-managepilot.Po' tmpdepfile='$(DEPDIR)/fs2-managepilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-managepilot.o `test -f 'playerman/managepilot.cpp' || echo '$(srcdir)/'`playerman/managepilot.cpp

fs2-managepilot.obj: playerman/managepilot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-managepilot.obj -MD -MP -MF "$(DEPDIR)/fs2-managepilot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-managepilot.obj `if test -f 'playerman/managepilot.cpp'; then $(CYGPATH_W) 'playerman/managepilot.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/managepilot.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-managepilot.Tpo" "$(DEPDIR)/fs2-managepilot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-managepilot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/managepilot.cpp' object='fs2-managepilot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-managepilot.Po' tmpdepfile='$(DEPDIR)/fs2-managepilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-managepilot.obj `if test -f 'playerman/managepilot.cpp'; then $(CYGPATH_W) 'playerman/managepilot.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/managepilot.cpp'; fi`

fs2-playercontrol.o: playerman/playercontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-playercontrol.o -MD -MP -MF "$(DEPDIR)/fs2-playercontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-playercontrol.o `test -f 'playerman/playercontrol.cpp' || echo '$(srcdir)/'`playerman/playercontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-playercontrol.Tpo" "$(DEPDIR)/fs2-playercontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-playercontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/playercontrol.cpp' object='fs2-playercontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-playercontrol.Po' tmpdepfile='$(DEPDIR)/fs2-playercontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-playercontrol.o `test -f 'playerman/playercontrol.cpp' || echo '$(srcdir)/'`playerman/playercontrol.cpp

fs2-playercontrol.obj: playerman/playercontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-playercontrol.obj -MD -MP -MF "$(DEPDIR)/fs2-playercontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-playercontrol.obj `if test -f 'playerman/playercontrol.cpp'; then $(CYGPATH_W) 'playerman/playercontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/playercontrol.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-playercontrol.Tpo" "$(DEPDIR)/fs2-playercontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-playercontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/playercontrol.cpp' object='fs2-playercontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-playercontrol.Po' tmpdepfile='$(DEPDIR)/fs2-playercontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-playercontrol.obj `if test -f 'playerman/playercontrol.cpp'; then $(CYGPATH_W) 'playerman/playercontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/playercontrol.cpp'; fi`

fs2-popup.o: popup/popup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-popup.o -MD -MP -MF "$(DEPDIR)/fs2-popup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-popup.o `test -f 'popup/popup.cpp' || echo '$(srcdir)/'`popup/popup.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-popup.Tpo" "$(DEPDIR)/fs2-popup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-popup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popup.cpp' object='fs2-popup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-popup.Po' tmpdepfile='$(DEPDIR)/fs2-popup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-popup.o `test -f 'popup/popup.cpp' || echo '$(srcdir)/'`popup/popup.cpp

fs2-popup.obj: popup/popup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-popup.obj -MD -MP -MF "$(DEPDIR)/fs2-popup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-popup.obj `if test -f 'popup/popup.cpp'; then $(CYGPATH_W) 'popup/popup.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popup.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-popup.Tpo" "$(DEPDIR)/fs2-popup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-popup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popup.cpp' object='fs2-popup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-popup.Po' tmpdepfile='$(DEPDIR)/fs2-popup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-popup.obj `if test -f 'popup/popup.cpp'; then $(CYGPATH_W) 'popup/popup.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popup.cpp'; fi`

fs2-popupdead.o: popup/popupdead.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-popupdead.o -MD -MP -MF "$(DEPDIR)/fs2-popupdead.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-popupdead.o `test -f 'popup/popupdead.cpp' || echo '$(srcdir)/'`popup/popupdead.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-popupdead.Tpo" "$(DEPDIR)/fs2-popupdead.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-popupdead.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popupdead.cpp' object='fs2-popupdead.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-popupdead.Po' tmpdepfile='$(DEPDIR)/fs2-popupdead.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-popupdead.o `test -f 'popup/popupdead.cpp' || echo '$(srcdir)/'`popup/popupdead.cpp

fs2-popupdead.obj: popup/popupdead.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-popupdead.obj -MD -MP -MF "$(DEPDIR)/fs2-popupdead.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-popupdead.obj `if test -f 'popup/popupdead.cpp'; then $(CYGPATH_W) 'popup/popupdead.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popupdead.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-popupdead.Tpo" "$(DEPDIR)/fs2-popupdead.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-popupdead.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popupdead.cpp' object='fs2-popupdead.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-popupdead.Po' tmpdepfile='$(DEPDIR)/fs2-popupdead.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-popupdead.obj `if test -f 'popup/popupdead.cpp'; then $(CYGPATH_W) 'popup/popupdead.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popupdead.cpp'; fi`

fs2-radar.o: radar/radar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-radar.o -MD -MP -MF "$(DEPDIR)/fs2-radar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-radar.o `test -f 'radar/radar.cpp' || echo '$(srcdir)/'`radar/radar.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-radar.Tpo" "$(DEPDIR)/fs2-radar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-radar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='radar/radar.cpp' object='fs2-radar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-radar.Po' tmpdepfile='$(DEPDIR)/fs2-radar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-radar.o `test -f 'radar/radar.cpp' || echo '$(srcdir)/'`radar/radar.cpp

fs2-radar.obj: radar/radar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-radar.obj -MD -MP -MF "$(DEPDIR)/fs2-radar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-radar.obj `if test -f 'radar/radar.cpp'; then $(CYGPATH_W) 'radar/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/radar/radar.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-radar.Tpo" "$(DEPDIR)/fs2-radar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-radar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='radar/radar.cpp' object='fs2-radar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-radar.Po' tmpdepfile='$(DEPDIR)/fs2-radar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-radar.obj `if test -f 'radar/radar.cpp'; then $(CYGPATH_W) 'radar/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/radar/radar.cpp'; fi`

fs2-3dclipper.o: render/3dclipper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dclipper.o -MD -MP -MF "$(DEPDIR)/fs2-3dclipper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dclipper.o `test -f 'render/3dclipper.cpp' || echo '$(srcdir)/'`render/3dclipper.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dclipper.Tpo" "$(DEPDIR)/fs2-3dclipper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dclipper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dclipper.cpp' object='fs2-3dclipper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dclipper.Po' tmpdepfile='$(DEPDIR)/fs2-3dclipper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dclipper.o `test -f 'render/3dclipper.cpp' || echo '$(srcdir)/'`render/3dclipper.cpp

fs2-3dclipper.obj: render/3dclipper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dclipper.obj -MD -MP -MF "$(DEPDIR)/fs2-3dclipper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dclipper.obj `if test -f 'render/3dclipper.cpp'; then $(CYGPATH_W) 'render/3dclipper.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dclipper.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dclipper.Tpo" "$(DEPDIR)/fs2-3dclipper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dclipper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dclipper.cpp' object='fs2-3dclipper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dclipper.Po' tmpdepfile='$(DEPDIR)/fs2-3dclipper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dclipper.obj `if test -f 'render/3dclipper.cpp'; then $(CYGPATH_W) 'render/3dclipper.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dclipper.cpp'; fi`

fs2-3ddraw.o: render/3ddraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3ddraw.o -MD -MP -MF "$(DEPDIR)/fs2-3ddraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3ddraw.o `test -f 'render/3ddraw.cpp' || echo '$(srcdir)/'`render/3ddraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3ddraw.Tpo" "$(DEPDIR)/fs2-3ddraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3ddraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3ddraw.cpp' object='fs2-3ddraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3ddraw.Po' tmpdepfile='$(DEPDIR)/fs2-3ddraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3ddraw.o `test -f 'render/3ddraw.cpp' || echo '$(srcdir)/'`render/3ddraw.cpp

fs2-3ddraw.obj: render/3ddraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3ddraw.obj -MD -MP -MF "$(DEPDIR)/fs2-3ddraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3ddraw.obj `if test -f 'render/3ddraw.cpp'; then $(CYGPATH_W) 'render/3ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3ddraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3ddraw.Tpo" "$(DEPDIR)/fs2-3ddraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3ddraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3ddraw.cpp' object='fs2-3ddraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3ddraw.Po' tmpdepfile='$(DEPDIR)/fs2-3ddraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3ddraw.obj `if test -f 'render/3ddraw.cpp'; then $(CYGPATH_W) 'render/3ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3ddraw.cpp'; fi`

fs2-3dlaser.o: render/3dlaser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dlaser.o -MD -MP -MF "$(DEPDIR)/fs2-3dlaser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dlaser.o `test -f 'render/3dlaser.cpp' || echo '$(srcdir)/'`render/3dlaser.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dlaser.Tpo" "$(DEPDIR)/fs2-3dlaser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dlaser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dlaser.cpp' object='fs2-3dlaser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dlaser.Po' tmpdepfile='$(DEPDIR)/fs2-3dlaser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dlaser.o `test -f 'render/3dlaser.cpp' || echo '$(srcdir)/'`render/3dlaser.cpp

fs2-3dlaser.obj: render/3dlaser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dlaser.obj -MD -MP -MF "$(DEPDIR)/fs2-3dlaser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dlaser.obj `if test -f 'render/3dlaser.cpp'; then $(CYGPATH_W) 'render/3dlaser.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dlaser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dlaser.Tpo" "$(DEPDIR)/fs2-3dlaser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dlaser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dlaser.cpp' object='fs2-3dlaser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dlaser.Po' tmpdepfile='$(DEPDIR)/fs2-3dlaser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dlaser.obj `if test -f 'render/3dlaser.cpp'; then $(CYGPATH_W) 'render/3dlaser.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dlaser.cpp'; fi`

fs2-3dmath.o: render/3dmath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dmath.o -MD -MP -MF "$(DEPDIR)/fs2-3dmath.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dmath.o `test -f 'render/3dmath.cpp' || echo '$(srcdir)/'`render/3dmath.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dmath.Tpo" "$(DEPDIR)/fs2-3dmath.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dmath.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dmath.cpp' object='fs2-3dmath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dmath.Po' tmpdepfile='$(DEPDIR)/fs2-3dmath.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dmath.o `test -f 'render/3dmath.cpp' || echo '$(srcdir)/'`render/3dmath.cpp

fs2-3dmath.obj: render/3dmath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dmath.obj -MD -MP -MF "$(DEPDIR)/fs2-3dmath.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dmath.obj `if test -f 'render/3dmath.cpp'; then $(CYGPATH_W) 'render/3dmath.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dmath.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dmath.Tpo" "$(DEPDIR)/fs2-3dmath.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dmath.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dmath.cpp' object='fs2-3dmath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dmath.Po' tmpdepfile='$(DEPDIR)/fs2-3dmath.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dmath.obj `if test -f 'render/3dmath.cpp'; then $(CYGPATH_W) 'render/3dmath.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dmath.cpp'; fi`

fs2-3dsetup.o: render/3dsetup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dsetup.o -MD -MP -MF "$(DEPDIR)/fs2-3dsetup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dsetup.o `test -f 'render/3dsetup.cpp' || echo '$(srcdir)/'`render/3dsetup.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dsetup.Tpo" "$(DEPDIR)/fs2-3dsetup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dsetup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dsetup.cpp' object='fs2-3dsetup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dsetup.Po' tmpdepfile='$(DEPDIR)/fs2-3dsetup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dsetup.o `test -f 'render/3dsetup.cpp' || echo '$(srcdir)/'`render/3dsetup.cpp

fs2-3dsetup.obj: render/3dsetup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-3dsetup.obj -MD -MP -MF "$(DEPDIR)/fs2-3dsetup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-3dsetup.obj `if test -f 'render/3dsetup.cpp'; then $(CYGPATH_W) 'render/3dsetup.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dsetup.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-3dsetup.Tpo" "$(DEPDIR)/fs2-3dsetup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-3dsetup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dsetup.cpp' object='fs2-3dsetup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-3dsetup.Po' tmpdepfile='$(DEPDIR)/fs2-3dsetup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-3dsetup.obj `if test -f 'render/3dsetup.cpp'; then $(CYGPATH_W) 'render/3dsetup.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dsetup.cpp'; fi`

fs2-afterburner.o: ship/afterburner.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-afterburner.o -MD -MP -MF "$(DEPDIR)/fs2-afterburner.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-afterburner.o `test -f 'ship/afterburner.cpp' || echo '$(srcdir)/'`ship/afterburner.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-afterburner.Tpo" "$(DEPDIR)/fs2-afterburner.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-afterburner.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/afterburner.cpp' object='fs2-afterburner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-afterburner.Po' tmpdepfile='$(DEPDIR)/fs2-afterburner.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-afterburner.o `test -f 'ship/afterburner.cpp' || echo '$(srcdir)/'`ship/afterburner.cpp

fs2-afterburner.obj: ship/afterburner.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-afterburner.obj -MD -MP -MF "$(DEPDIR)/fs2-afterburner.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-afterburner.obj `if test -f 'ship/afterburner.cpp'; then $(CYGPATH_W) 'ship/afterburner.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/afterburner.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-afterburner.Tpo" "$(DEPDIR)/fs2-afterburner.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-afterburner.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/afterburner.cpp' object='fs2-afterburner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-afterburner.Po' tmpdepfile='$(DEPDIR)/fs2-afterburner.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-afterburner.obj `if test -f 'ship/afterburner.cpp'; then $(CYGPATH_W) 'ship/afterburner.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/afterburner.cpp'; fi`

fs2-ai.o: ship/ai.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ai.o -MD -MP -MF "$(DEPDIR)/fs2-ai.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ai.o `test -f 'ship/ai.cpp' || echo '$(srcdir)/'`ship/ai.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ai.Tpo" "$(DEPDIR)/fs2-ai.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ai.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ai.cpp' object='fs2-ai.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ai.Po' tmpdepfile='$(DEPDIR)/fs2-ai.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ai.o `test -f 'ship/ai.cpp' || echo '$(srcdir)/'`ship/ai.cpp

fs2-ai.obj: ship/ai.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ai.obj -MD -MP -MF "$(DEPDIR)/fs2-ai.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ai.obj `if test -f 'ship/ai.cpp'; then $(CYGPATH_W) 'ship/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ai.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ai.Tpo" "$(DEPDIR)/fs2-ai.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ai.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ai.cpp' object='fs2-ai.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ai.Po' tmpdepfile='$(DEPDIR)/fs2-ai.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ai.obj `if test -f 'ship/ai.cpp'; then $(CYGPATH_W) 'ship/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ai.cpp'; fi`

fs2-aibig.o: ship/aibig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aibig.o -MD -MP -MF "$(DEPDIR)/fs2-aibig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aibig.o `test -f 'ship/aibig.cpp' || echo '$(srcdir)/'`ship/aibig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aibig.Tpo" "$(DEPDIR)/fs2-aibig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aibig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aibig.cpp' object='fs2-aibig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aibig.Po' tmpdepfile='$(DEPDIR)/fs2-aibig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aibig.o `test -f 'ship/aibig.cpp' || echo '$(srcdir)/'`ship/aibig.cpp

fs2-aibig.obj: ship/aibig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aibig.obj -MD -MP -MF "$(DEPDIR)/fs2-aibig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aibig.obj `if test -f 'ship/aibig.cpp'; then $(CYGPATH_W) 'ship/aibig.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aibig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aibig.Tpo" "$(DEPDIR)/fs2-aibig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aibig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aibig.cpp' object='fs2-aibig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aibig.Po' tmpdepfile='$(DEPDIR)/fs2-aibig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aibig.obj `if test -f 'ship/aibig.cpp'; then $(CYGPATH_W) 'ship/aibig.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aibig.cpp'; fi`

fs2-aicode.o: ship/aicode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aicode.o -MD -MP -MF "$(DEPDIR)/fs2-aicode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aicode.o `test -f 'ship/aicode.cpp' || echo '$(srcdir)/'`ship/aicode.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aicode.Tpo" "$(DEPDIR)/fs2-aicode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aicode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aicode.cpp' object='fs2-aicode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aicode.Po' tmpdepfile='$(DEPDIR)/fs2-aicode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aicode.o `test -f 'ship/aicode.cpp' || echo '$(srcdir)/'`ship/aicode.cpp

fs2-aicode.obj: ship/aicode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aicode.obj -MD -MP -MF "$(DEPDIR)/fs2-aicode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aicode.obj `if test -f 'ship/aicode.cpp'; then $(CYGPATH_W) 'ship/aicode.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aicode.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aicode.Tpo" "$(DEPDIR)/fs2-aicode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aicode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aicode.cpp' object='fs2-aicode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aicode.Po' tmpdepfile='$(DEPDIR)/fs2-aicode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aicode.obj `if test -f 'ship/aicode.cpp'; then $(CYGPATH_W) 'ship/aicode.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aicode.cpp'; fi`

fs2-aigoals.o: ship/aigoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aigoals.o -MD -MP -MF "$(DEPDIR)/fs2-aigoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aigoals.o `test -f 'ship/aigoals.cpp' || echo '$(srcdir)/'`ship/aigoals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aigoals.Tpo" "$(DEPDIR)/fs2-aigoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aigoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aigoals.cpp' object='fs2-aigoals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aigoals.Po' tmpdepfile='$(DEPDIR)/fs2-aigoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aigoals.o `test -f 'ship/aigoals.cpp' || echo '$(srcdir)/'`ship/aigoals.cpp

fs2-aigoals.obj: ship/aigoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-aigoals.obj -MD -MP -MF "$(DEPDIR)/fs2-aigoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-aigoals.obj `if test -f 'ship/aigoals.cpp'; then $(CYGPATH_W) 'ship/aigoals.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aigoals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-aigoals.Tpo" "$(DEPDIR)/fs2-aigoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-aigoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aigoals.cpp' object='fs2-aigoals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-aigoals.Po' tmpdepfile='$(DEPDIR)/fs2-aigoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-aigoals.obj `if test -f 'ship/aigoals.cpp'; then $(CYGPATH_W) 'ship/aigoals.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aigoals.cpp'; fi`

fs2-awacs.o: ship/awacs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-awacs.o -MD -MP -MF "$(DEPDIR)/fs2-awacs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-awacs.o `test -f 'ship/awacs.cpp' || echo '$(srcdir)/'`ship/awacs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-awacs.Tpo" "$(DEPDIR)/fs2-awacs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-awacs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/awacs.cpp' object='fs2-awacs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-awacs.Po' tmpdepfile='$(DEPDIR)/fs2-awacs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-awacs.o `test -f 'ship/awacs.cpp' || echo '$(srcdir)/'`ship/awacs.cpp

fs2-awacs.obj: ship/awacs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-awacs.obj -MD -MP -MF "$(DEPDIR)/fs2-awacs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-awacs.obj `if test -f 'ship/awacs.cpp'; then $(CYGPATH_W) 'ship/awacs.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/awacs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-awacs.Tpo" "$(DEPDIR)/fs2-awacs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-awacs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/awacs.cpp' object='fs2-awacs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-awacs.Po' tmpdepfile='$(DEPDIR)/fs2-awacs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-awacs.obj `if test -f 'ship/awacs.cpp'; then $(CYGPATH_W) 'ship/awacs.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/awacs.cpp'; fi`

fs2-shield.o: ship/shield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shield.o -MD -MP -MF "$(DEPDIR)/fs2-shield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shield.o `test -f 'ship/shield.cpp' || echo '$(srcdir)/'`ship/shield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shield.Tpo" "$(DEPDIR)/fs2-shield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shield.cpp' object='fs2-shield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shield.Po' tmpdepfile='$(DEPDIR)/fs2-shield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shield.o `test -f 'ship/shield.cpp' || echo '$(srcdir)/'`ship/shield.cpp

fs2-shield.obj: ship/shield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shield.obj -MD -MP -MF "$(DEPDIR)/fs2-shield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shield.obj `if test -f 'ship/shield.cpp'; then $(CYGPATH_W) 'ship/shield.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shield.Tpo" "$(DEPDIR)/fs2-shield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shield.cpp' object='fs2-shield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shield.Po' tmpdepfile='$(DEPDIR)/fs2-shield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shield.obj `if test -f 'ship/shield.cpp'; then $(CYGPATH_W) 'ship/shield.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shield.cpp'; fi`

fs2-ship.o: ship/ship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ship.o -MD -MP -MF "$(DEPDIR)/fs2-ship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ship.o `test -f 'ship/ship.cpp' || echo '$(srcdir)/'`ship/ship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ship.Tpo" "$(DEPDIR)/fs2-ship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ship.cpp' object='fs2-ship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ship.Po' tmpdepfile='$(DEPDIR)/fs2-ship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ship.o `test -f 'ship/ship.cpp' || echo '$(srcdir)/'`ship/ship.cpp

fs2-ship.obj: ship/ship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ship.obj -MD -MP -MF "$(DEPDIR)/fs2-ship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ship.obj `if test -f 'ship/ship.cpp'; then $(CYGPATH_W) 'ship/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ship.Tpo" "$(DEPDIR)/fs2-ship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ship.cpp' object='fs2-ship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ship.Po' tmpdepfile='$(DEPDIR)/fs2-ship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ship.obj `if test -f 'ship/ship.cpp'; then $(CYGPATH_W) 'ship/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ship.cpp'; fi`

fs2-shipcontrails.o: ship/shipcontrails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shipcontrails.o -MD -MP -MF "$(DEPDIR)/fs2-shipcontrails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shipcontrails.o `test -f 'ship/shipcontrails.cpp' || echo '$(srcdir)/'`ship/shipcontrails.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shipcontrails.Tpo" "$(DEPDIR)/fs2-shipcontrails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shipcontrails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipcontrails.cpp' object='fs2-shipcontrails.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shipcontrails.Po' tmpdepfile='$(DEPDIR)/fs2-shipcontrails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shipcontrails.o `test -f 'ship/shipcontrails.cpp' || echo '$(srcdir)/'`ship/shipcontrails.cpp

fs2-shipcontrails.obj: ship/shipcontrails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shipcontrails.obj -MD -MP -MF "$(DEPDIR)/fs2-shipcontrails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shipcontrails.obj `if test -f 'ship/shipcontrails.cpp'; then $(CYGPATH_W) 'ship/shipcontrails.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipcontrails.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shipcontrails.Tpo" "$(DEPDIR)/fs2-shipcontrails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shipcontrails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipcontrails.cpp' object='fs2-shipcontrails.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shipcontrails.Po' tmpdepfile='$(DEPDIR)/fs2-shipcontrails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shipcontrails.obj `if test -f 'ship/shipcontrails.cpp'; then $(CYGPATH_W) 'ship/shipcontrails.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipcontrails.cpp'; fi`

fs2-shipfx.o: ship/shipfx.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shipfx.o -MD -MP -MF "$(DEPDIR)/fs2-shipfx.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shipfx.o `test -f 'ship/shipfx.cpp' || echo '$(srcdir)/'`ship/shipfx.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shipfx.Tpo" "$(DEPDIR)/fs2-shipfx.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shipfx.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipfx.cpp' object='fs2-shipfx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shipfx.Po' tmpdepfile='$(DEPDIR)/fs2-shipfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shipfx.o `test -f 'ship/shipfx.cpp' || echo '$(srcdir)/'`ship/shipfx.cpp

fs2-shipfx.obj: ship/shipfx.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shipfx.obj -MD -MP -MF "$(DEPDIR)/fs2-shipfx.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shipfx.obj `if test -f 'ship/shipfx.cpp'; then $(CYGPATH_W) 'ship/shipfx.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipfx.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shipfx.Tpo" "$(DEPDIR)/fs2-shipfx.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shipfx.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipfx.cpp' object='fs2-shipfx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shipfx.Po' tmpdepfile='$(DEPDIR)/fs2-shipfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shipfx.obj `if test -f 'ship/shipfx.cpp'; then $(CYGPATH_W) 'ship/shipfx.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipfx.cpp'; fi`

fs2-shiphit.o: ship/shiphit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shiphit.o -MD -MP -MF "$(DEPDIR)/fs2-shiphit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shiphit.o `test -f 'ship/shiphit.cpp' || echo '$(srcdir)/'`ship/shiphit.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shiphit.Tpo" "$(DEPDIR)/fs2-shiphit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shiphit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shiphit.cpp' object='fs2-shiphit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shiphit.Po' tmpdepfile='$(DEPDIR)/fs2-shiphit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shiphit.o `test -f 'ship/shiphit.cpp' || echo '$(srcdir)/'`ship/shiphit.cpp

fs2-shiphit.obj: ship/shiphit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shiphit.obj -MD -MP -MF "$(DEPDIR)/fs2-shiphit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shiphit.obj `if test -f 'ship/shiphit.cpp'; then $(CYGPATH_W) 'ship/shiphit.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shiphit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shiphit.Tpo" "$(DEPDIR)/fs2-shiphit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shiphit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shiphit.cpp' object='fs2-shiphit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shiphit.Po' tmpdepfile='$(DEPDIR)/fs2-shiphit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shiphit.obj `if test -f 'ship/shiphit.cpp'; then $(CYGPATH_W) 'ship/shiphit.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shiphit.cpp'; fi`

fs2-nebula.o: starfield/nebula.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-nebula.o -MD -MP -MF "$(DEPDIR)/fs2-nebula.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-nebula.o `test -f 'starfield/nebula.cpp' || echo '$(srcdir)/'`starfield/nebula.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-nebula.Tpo" "$(DEPDIR)/fs2-nebula.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-nebula.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/nebula.cpp' object='fs2-nebula.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-nebula.Po' tmpdepfile='$(DEPDIR)/fs2-nebula.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-nebula.o `test -f 'starfield/nebula.cpp' || echo '$(srcdir)/'`starfield/nebula.cpp

fs2-nebula.obj: starfield/nebula.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-nebula.obj -MD -MP -MF "$(DEPDIR)/fs2-nebula.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-nebula.obj `if test -f 'starfield/nebula.cpp'; then $(CYGPATH_W) 'starfield/nebula.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/nebula.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-nebula.Tpo" "$(DEPDIR)/fs2-nebula.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-nebula.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/nebula.cpp' object='fs2-nebula.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-nebula.Po' tmpdepfile='$(DEPDIR)/fs2-nebula.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-nebula.obj `if test -f 'starfield/nebula.cpp'; then $(CYGPATH_W) 'starfield/nebula.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/nebula.cpp'; fi`

fs2-starfield.o: starfield/starfield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-starfield.o -MD -MP -MF "$(DEPDIR)/fs2-starfield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-starfield.o `test -f 'starfield/starfield.cpp' || echo '$(srcdir)/'`starfield/starfield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-starfield.Tpo" "$(DEPDIR)/fs2-starfield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-starfield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/starfield.cpp' object='fs2-starfield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-starfield.Po' tmpdepfile='$(DEPDIR)/fs2-starfield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-starfield.o `test -f 'starfield/starfield.cpp' || echo '$(srcdir)/'`starfield/starfield.cpp

fs2-starfield.obj: starfield/starfield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-starfield.obj -MD -MP -MF "$(DEPDIR)/fs2-starfield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-starfield.obj `if test -f 'starfield/starfield.cpp'; then $(CYGPATH_W) 'starfield/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/starfield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-starfield.Tpo" "$(DEPDIR)/fs2-starfield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-starfield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/starfield.cpp' object='fs2-starfield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-starfield.Po' tmpdepfile='$(DEPDIR)/fs2-starfield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-starfield.obj `if test -f 'starfield/starfield.cpp'; then $(CYGPATH_W) 'starfield/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/starfield.cpp'; fi`

fs2-supernova.o: starfield/supernova.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-supernova.o -MD -MP -MF "$(DEPDIR)/fs2-supernova.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-supernova.o `test -f 'starfield/supernova.cpp' || echo '$(srcdir)/'`starfield/supernova.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-supernova.Tpo" "$(DEPDIR)/fs2-supernova.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-supernova.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/supernova.cpp' object='fs2-supernova.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-supernova.Po' tmpdepfile='$(DEPDIR)/fs2-supernova.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-supernova.o `test -f 'starfield/supernova.cpp' || echo '$(srcdir)/'`starfield/supernova.cpp

fs2-supernova.obj: starfield/supernova.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-supernova.obj -MD -MP -MF "$(DEPDIR)/fs2-supernova.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-supernova.obj `if test -f 'starfield/supernova.cpp'; then $(CYGPATH_W) 'starfield/supernova.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/supernova.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-supernova.Tpo" "$(DEPDIR)/fs2-supernova.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-supernova.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/supernova.cpp' object='fs2-supernova.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-supernova.Po' tmpdepfile='$(DEPDIR)/fs2-supernova.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-supernova.obj `if test -f 'starfield/supernova.cpp'; then $(CYGPATH_W) 'starfield/supernova.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/supernova.cpp'; fi`

fs2-medals.o: stats/medals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-medals.o -MD -MP -MF "$(DEPDIR)/fs2-medals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-medals.o `test -f 'stats/medals.cpp' || echo '$(srcdir)/'`stats/medals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-medals.Tpo" "$(DEPDIR)/fs2-medals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-medals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/medals.cpp' object='fs2-medals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-medals.Po' tmpdepfile='$(DEPDIR)/fs2-medals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-medals.o `test -f 'stats/medals.cpp' || echo '$(srcdir)/'`stats/medals.cpp

fs2-medals.obj: stats/medals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-medals.obj -MD -MP -MF "$(DEPDIR)/fs2-medals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-medals.obj `if test -f 'stats/medals.cpp'; then $(CYGPATH_W) 'stats/medals.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/medals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-medals.Tpo" "$(DEPDIR)/fs2-medals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-medals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/medals.cpp' object='fs2-medals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-medals.Po' tmpdepfile='$(DEPDIR)/fs2-medals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-medals.obj `if test -f 'stats/medals.cpp'; then $(CYGPATH_W) 'stats/medals.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/medals.cpp'; fi`

fs2-scoring.o: stats/scoring.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scoring.o -MD -MP -MF "$(DEPDIR)/fs2-scoring.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scoring.o `test -f 'stats/scoring.cpp' || echo '$(srcdir)/'`stats/scoring.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scoring.Tpo" "$(DEPDIR)/fs2-scoring.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scoring.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/scoring.cpp' object='fs2-scoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scoring.Po' tmpdepfile='$(DEPDIR)/fs2-scoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scoring.o `test -f 'stats/scoring.cpp' || echo '$(srcdir)/'`stats/scoring.cpp

fs2-scoring.obj: stats/scoring.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scoring.obj -MD -MP -MF "$(DEPDIR)/fs2-scoring.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scoring.obj `if test -f 'stats/scoring.cpp'; then $(CYGPATH_W) 'stats/scoring.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/scoring.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scoring.Tpo" "$(DEPDIR)/fs2-scoring.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scoring.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/scoring.cpp' object='fs2-scoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scoring.Po' tmpdepfile='$(DEPDIR)/fs2-scoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scoring.obj `if test -f 'stats/scoring.cpp'; then $(CYGPATH_W) 'stats/scoring.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/scoring.cpp'; fi`

fs2-stats.o: stats/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-stats.o -MD -MP -MF "$(DEPDIR)/fs2-stats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-stats.o `test -f 'stats/stats.cpp' || echo '$(srcdir)/'`stats/stats.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-stats.Tpo" "$(DEPDIR)/fs2-stats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-stats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/stats.cpp' object='fs2-stats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-stats.Po' tmpdepfile='$(DEPDIR)/fs2-stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-stats.o `test -f 'stats/stats.cpp' || echo '$(srcdir)/'`stats/stats.cpp

fs2-stats.obj: stats/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-stats.obj -MD -MP -MF "$(DEPDIR)/fs2-stats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-stats.obj `if test -f 'stats/stats.cpp'; then $(CYGPATH_W) 'stats/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/stats.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-stats.Tpo" "$(DEPDIR)/fs2-stats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-stats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/stats.cpp' object='fs2-stats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-stats.Po' tmpdepfile='$(DEPDIR)/fs2-stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-stats.obj `if test -f 'stats/stats.cpp'; then $(CYGPATH_W) 'stats/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/stats.cpp'; fi`

fs2-tgautils.o: tgautils/tgautils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-tgautils.o -MD -MP -MF "$(DEPDIR)/fs2-tgautils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-tgautils.o `test -f 'tgautils/tgautils.cpp' || echo '$(srcdir)/'`tgautils/tgautils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-tgautils.Tpo" "$(DEPDIR)/fs2-tgautils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-tgautils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tgautils/tgautils.cpp' object='fs2-tgautils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-tgautils.Po' tmpdepfile='$(DEPDIR)/fs2-tgautils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-tgautils.o `test -f 'tgautils/tgautils.cpp' || echo '$(srcdir)/'`tgautils/tgautils.cpp

fs2-tgautils.obj: tgautils/tgautils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-tgautils.obj -MD -MP -MF "$(DEPDIR)/fs2-tgautils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-tgautils.obj `if test -f 'tgautils/tgautils.cpp'; then $(CYGPATH_W) 'tgautils/tgautils.cpp'; else $(CYGPATH_W) '$(srcdir)/tgautils/tgautils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-tgautils.Tpo" "$(DEPDIR)/fs2-tgautils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-tgautils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tgautils/tgautils.cpp' object='fs2-tgautils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-tgautils.Po' tmpdepfile='$(DEPDIR)/fs2-tgautils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-tgautils.obj `if test -f 'tgautils/tgautils.cpp'; then $(CYGPATH_W) 'tgautils/tgautils.cpp'; else $(CYGPATH_W) '$(srcdir)/tgautils/tgautils.cpp'; fi`

fs2-button.o: ui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-button.o -MD -MP -MF "$(DEPDIR)/fs2-button.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-button.o `test -f 'ui/button.cpp' || echo '$(srcdir)/'`ui/button.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-button.Tpo" "$(DEPDIR)/fs2-button.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-button.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/button.cpp' object='fs2-button.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-button.Po' tmpdepfile='$(DEPDIR)/fs2-button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-button.o `test -f 'ui/button.cpp' || echo '$(srcdir)/'`ui/button.cpp

fs2-button.obj: ui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-button.obj -MD -MP -MF "$(DEPDIR)/fs2-button.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-button.obj `if test -f 'ui/button.cpp'; then $(CYGPATH_W) 'ui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/button.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-button.Tpo" "$(DEPDIR)/fs2-button.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-button.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/button.cpp' object='fs2-button.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-button.Po' tmpdepfile='$(DEPDIR)/fs2-button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-button.obj `if test -f 'ui/button.cpp'; then $(CYGPATH_W) 'ui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/button.cpp'; fi`

fs2-checkbox.o: ui/checkbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-checkbox.o -MD -MP -MF "$(DEPDIR)/fs2-checkbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-checkbox.o `test -f 'ui/checkbox.cpp' || echo '$(srcdir)/'`ui/checkbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-checkbox.Tpo" "$(DEPDIR)/fs2-checkbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-checkbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/checkbox.cpp' object='fs2-checkbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-checkbox.Po' tmpdepfile='$(DEPDIR)/fs2-checkbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-checkbox.o `test -f 'ui/checkbox.cpp' || echo '$(srcdir)/'`ui/checkbox.cpp

fs2-checkbox.obj: ui/checkbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-checkbox.obj -MD -MP -MF "$(DEPDIR)/fs2-checkbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-checkbox.obj `if test -f 'ui/checkbox.cpp'; then $(CYGPATH_W) 'ui/checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/checkbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-checkbox.Tpo" "$(DEPDIR)/fs2-checkbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-checkbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/checkbox.cpp' object='fs2-checkbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-checkbox.Po' tmpdepfile='$(DEPDIR)/fs2-checkbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-checkbox.obj `if test -f 'ui/checkbox.cpp'; then $(CYGPATH_W) 'ui/checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/checkbox.cpp'; fi`

fs2-gadget.o: ui/gadget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gadget.o -MD -MP -MF "$(DEPDIR)/fs2-gadget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gadget.o `test -f 'ui/gadget.cpp' || echo '$(srcdir)/'`ui/gadget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gadget.Tpo" "$(DEPDIR)/fs2-gadget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gadget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/gadget.cpp' object='fs2-gadget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gadget.Po' tmpdepfile='$(DEPDIR)/fs2-gadget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gadget.o `test -f 'ui/gadget.cpp' || echo '$(srcdir)/'`ui/gadget.cpp

fs2-gadget.obj: ui/gadget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gadget.obj -MD -MP -MF "$(DEPDIR)/fs2-gadget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gadget.obj `if test -f 'ui/gadget.cpp'; then $(CYGPATH_W) 'ui/gadget.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gadget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gadget.Tpo" "$(DEPDIR)/fs2-gadget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gadget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/gadget.cpp' object='fs2-gadget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gadget.Po' tmpdepfile='$(DEPDIR)/fs2-gadget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gadget.obj `if test -f 'ui/gadget.cpp'; then $(CYGPATH_W) 'ui/gadget.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gadget.cpp'; fi`

fs2-icon.o: ui/icon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-icon.o -MD -MP -MF "$(DEPDIR)/fs2-icon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-icon.o `test -f 'ui/icon.cpp' || echo '$(srcdir)/'`ui/icon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-icon.Tpo" "$(DEPDIR)/fs2-icon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-icon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/icon.cpp' object='fs2-icon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-icon.Po' tmpdepfile='$(DEPDIR)/fs2-icon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-icon.o `test -f 'ui/icon.cpp' || echo '$(srcdir)/'`ui/icon.cpp

fs2-icon.obj: ui/icon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-icon.obj -MD -MP -MF "$(DEPDIR)/fs2-icon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-icon.obj `if test -f 'ui/icon.cpp'; then $(CYGPATH_W) 'ui/icon.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/icon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-icon.Tpo" "$(DEPDIR)/fs2-icon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-icon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/icon.cpp' object='fs2-icon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-icon.Po' tmpdepfile='$(DEPDIR)/fs2-icon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-icon.obj `if test -f 'ui/icon.cpp'; then $(CYGPATH_W) 'ui/icon.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/icon.cpp'; fi`

fs2-inputbox.o: ui/inputbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-inputbox.o -MD -MP -MF "$(DEPDIR)/fs2-inputbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-inputbox.o `test -f 'ui/inputbox.cpp' || echo '$(srcdir)/'`ui/inputbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-inputbox.Tpo" "$(DEPDIR)/fs2-inputbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-inputbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/inputbox.cpp' object='fs2-inputbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-inputbox.Po' tmpdepfile='$(DEPDIR)/fs2-inputbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-inputbox.o `test -f 'ui/inputbox.cpp' || echo '$(srcdir)/'`ui/inputbox.cpp

fs2-inputbox.obj: ui/inputbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-inputbox.obj -MD -MP -MF "$(DEPDIR)/fs2-inputbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-inputbox.obj `if test -f 'ui/inputbox.cpp'; then $(CYGPATH_W) 'ui/inputbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/inputbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-inputbox.Tpo" "$(DEPDIR)/fs2-inputbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-inputbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/inputbox.cpp' object='fs2-inputbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-inputbox.Po' tmpdepfile='$(DEPDIR)/fs2-inputbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-inputbox.obj `if test -f 'ui/inputbox.cpp'; then $(CYGPATH_W) 'ui/inputbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/inputbox.cpp'; fi`

fs2-keytrap.o: ui/keytrap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-keytrap.o -MD -MP -MF "$(DEPDIR)/fs2-keytrap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-keytrap.o `test -f 'ui/keytrap.cpp' || echo '$(srcdir)/'`ui/keytrap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-keytrap.Tpo" "$(DEPDIR)/fs2-keytrap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-keytrap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/keytrap.cpp' object='fs2-keytrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-keytrap.Po' tmpdepfile='$(DEPDIR)/fs2-keytrap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-keytrap.o `test -f 'ui/keytrap.cpp' || echo '$(srcdir)/'`ui/keytrap.cpp

fs2-keytrap.obj: ui/keytrap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-keytrap.obj -MD -MP -MF "$(DEPDIR)/fs2-keytrap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-keytrap.obj `if test -f 'ui/keytrap.cpp'; then $(CYGPATH_W) 'ui/keytrap.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/keytrap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-keytrap.Tpo" "$(DEPDIR)/fs2-keytrap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-keytrap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/keytrap.cpp' object='fs2-keytrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-keytrap.Po' tmpdepfile='$(DEPDIR)/fs2-keytrap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-keytrap.obj `if test -f 'ui/keytrap.cpp'; then $(CYGPATH_W) 'ui/keytrap.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/keytrap.cpp'; fi`

fs2-listbox.o: ui/listbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-listbox.o -MD -MP -MF "$(DEPDIR)/fs2-listbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-listbox.o `test -f 'ui/listbox.cpp' || echo '$(srcdir)/'`ui/listbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-listbox.Tpo" "$(DEPDIR)/fs2-listbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-listbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/listbox.cpp' object='fs2-listbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-listbox.Po' tmpdepfile='$(DEPDIR)/fs2-listbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-listbox.o `test -f 'ui/listbox.cpp' || echo '$(srcdir)/'`ui/listbox.cpp

fs2-listbox.obj: ui/listbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-listbox.obj -MD -MP -MF "$(DEPDIR)/fs2-listbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-listbox.obj `if test -f 'ui/listbox.cpp'; then $(CYGPATH_W) 'ui/listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/listbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-listbox.Tpo" "$(DEPDIR)/fs2-listbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-listbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/listbox.cpp' object='fs2-listbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-listbox.Po' tmpdepfile='$(DEPDIR)/fs2-listbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-listbox.obj `if test -f 'ui/listbox.cpp'; then $(CYGPATH_W) 'ui/listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/listbox.cpp'; fi`

fs2-radio.o: ui/radio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-radio.o -MD -MP -MF "$(DEPDIR)/fs2-radio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-radio.o `test -f 'ui/radio.cpp' || echo '$(srcdir)/'`ui/radio.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-radio.Tpo" "$(DEPDIR)/fs2-radio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-radio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/radio.cpp' object='fs2-radio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-radio.Po' tmpdepfile='$(DEPDIR)/fs2-radio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-radio.o `test -f 'ui/radio.cpp' || echo '$(srcdir)/'`ui/radio.cpp

fs2-radio.obj: ui/radio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-radio.obj -MD -MP -MF "$(DEPDIR)/fs2-radio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-radio.obj `if test -f 'ui/radio.cpp'; then $(CYGPATH_W) 'ui/radio.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/radio.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-radio.Tpo" "$(DEPDIR)/fs2-radio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-radio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/radio.cpp' object='fs2-radio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-radio.Po' tmpdepfile='$(DEPDIR)/fs2-radio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-radio.obj `if test -f 'ui/radio.cpp'; then $(CYGPATH_W) 'ui/radio.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/radio.cpp'; fi`

fs2-scroll.o: ui/scroll.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scroll.o -MD -MP -MF "$(DEPDIR)/fs2-scroll.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scroll.o `test -f 'ui/scroll.cpp' || echo '$(srcdir)/'`ui/scroll.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scroll.Tpo" "$(DEPDIR)/fs2-scroll.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scroll.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/scroll.cpp' object='fs2-scroll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scroll.Po' tmpdepfile='$(DEPDIR)/fs2-scroll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scroll.o `test -f 'ui/scroll.cpp' || echo '$(srcdir)/'`ui/scroll.cpp

fs2-scroll.obj: ui/scroll.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-scroll.obj -MD -MP -MF "$(DEPDIR)/fs2-scroll.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-scroll.obj `if test -f 'ui/scroll.cpp'; then $(CYGPATH_W) 'ui/scroll.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/scroll.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-scroll.Tpo" "$(DEPDIR)/fs2-scroll.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-scroll.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/scroll.cpp' object='fs2-scroll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-scroll.Po' tmpdepfile='$(DEPDIR)/fs2-scroll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-scroll.obj `if test -f 'ui/scroll.cpp'; then $(CYGPATH_W) 'ui/scroll.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/scroll.cpp'; fi`

fs2-slider.o: ui/slider.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-slider.o -MD -MP -MF "$(DEPDIR)/fs2-slider.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-slider.o `test -f 'ui/slider.cpp' || echo '$(srcdir)/'`ui/slider.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-slider.Tpo" "$(DEPDIR)/fs2-slider.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-slider.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider.cpp' object='fs2-slider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-slider.Po' tmpdepfile='$(DEPDIR)/fs2-slider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-slider.o `test -f 'ui/slider.cpp' || echo '$(srcdir)/'`ui/slider.cpp

fs2-slider.obj: ui/slider.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-slider.obj -MD -MP -MF "$(DEPDIR)/fs2-slider.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-slider.obj `if test -f 'ui/slider.cpp'; then $(CYGPATH_W) 'ui/slider.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-slider.Tpo" "$(DEPDIR)/fs2-slider.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-slider.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider.cpp' object='fs2-slider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-slider.Po' tmpdepfile='$(DEPDIR)/fs2-slider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-slider.obj `if test -f 'ui/slider.cpp'; then $(CYGPATH_W) 'ui/slider.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider.cpp'; fi`

fs2-slider2.o: ui/slider2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-slider2.o -MD -MP -MF "$(DEPDIR)/fs2-slider2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-slider2.o `test -f 'ui/slider2.cpp' || echo '$(srcdir)/'`ui/slider2.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-slider2.Tpo" "$(DEPDIR)/fs2-slider2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-slider2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider2.cpp' object='fs2-slider2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-slider2.Po' tmpdepfile='$(DEPDIR)/fs2-slider2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-slider2.o `test -f 'ui/slider2.cpp' || echo '$(srcdir)/'`ui/slider2.cpp

fs2-slider2.obj: ui/slider2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-slider2.obj -MD -MP -MF "$(DEPDIR)/fs2-slider2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-slider2.obj `if test -f 'ui/slider2.cpp'; then $(CYGPATH_W) 'ui/slider2.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-slider2.Tpo" "$(DEPDIR)/fs2-slider2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-slider2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider2.cpp' object='fs2-slider2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-slider2.Po' tmpdepfile='$(DEPDIR)/fs2-slider2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-slider2.obj `if test -f 'ui/slider2.cpp'; then $(CYGPATH_W) 'ui/slider2.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider2.cpp'; fi`

fs2-uidraw.o: ui/uidraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-uidraw.o -MD -MP -MF "$(DEPDIR)/fs2-uidraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-uidraw.o `test -f 'ui/uidraw.cpp' || echo '$(srcdir)/'`ui/uidraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-uidraw.Tpo" "$(DEPDIR)/fs2-uidraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-uidraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uidraw.cpp' object='fs2-uidraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-uidraw.Po' tmpdepfile='$(DEPDIR)/fs2-uidraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-uidraw.o `test -f 'ui/uidraw.cpp' || echo '$(srcdir)/'`ui/uidraw.cpp

fs2-uidraw.obj: ui/uidraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-uidraw.obj -MD -MP -MF "$(DEPDIR)/fs2-uidraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-uidraw.obj `if test -f 'ui/uidraw.cpp'; then $(CYGPATH_W) 'ui/uidraw.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uidraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-uidraw.Tpo" "$(DEPDIR)/fs2-uidraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-uidraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uidraw.cpp' object='fs2-uidraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-uidraw.Po' tmpdepfile='$(DEPDIR)/fs2-uidraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-uidraw.obj `if test -f 'ui/uidraw.cpp'; then $(CYGPATH_W) 'ui/uidraw.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uidraw.cpp'; fi`

fs2-uimouse.o: ui/uimouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-uimouse.o -MD -MP -MF "$(DEPDIR)/fs2-uimouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-uimouse.o `test -f 'ui/uimouse.cpp' || echo '$(srcdir)/'`ui/uimouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-uimouse.Tpo" "$(DEPDIR)/fs2-uimouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-uimouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uimouse.cpp' object='fs2-uimouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-uimouse.Po' tmpdepfile='$(DEPDIR)/fs2-uimouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-uimouse.o `test -f 'ui/uimouse.cpp' || echo '$(srcdir)/'`ui/uimouse.cpp

fs2-uimouse.obj: ui/uimouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-uimouse.obj -MD -MP -MF "$(DEPDIR)/fs2-uimouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-uimouse.obj `if test -f 'ui/uimouse.cpp'; then $(CYGPATH_W) 'ui/uimouse.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uimouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-uimouse.Tpo" "$(DEPDIR)/fs2-uimouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-uimouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uimouse.cpp' object='fs2-uimouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-uimouse.Po' tmpdepfile='$(DEPDIR)/fs2-uimouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-uimouse.obj `if test -f 'ui/uimouse.cpp'; then $(CYGPATH_W) 'ui/uimouse.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uimouse.cpp'; fi`

fs2-window.o: ui/window.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-window.o -MD -MP -MF "$(DEPDIR)/fs2-window.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-window.o `test -f 'ui/window.cpp' || echo '$(srcdir)/'`ui/window.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-window.Tpo" "$(DEPDIR)/fs2-window.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-window.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/window.cpp' object='fs2-window.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-window.Po' tmpdepfile='$(DEPDIR)/fs2-window.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-window.o `test -f 'ui/window.cpp' || echo '$(srcdir)/'`ui/window.cpp

fs2-window.obj: ui/window.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-window.obj -MD -MP -MF "$(DEPDIR)/fs2-window.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-window.obj `if test -f 'ui/window.cpp'; then $(CYGPATH_W) 'ui/window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/window.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-window.Tpo" "$(DEPDIR)/fs2-window.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-window.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/window.cpp' object='fs2-window.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-window.Po' tmpdepfile='$(DEPDIR)/fs2-window.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-window.obj `if test -f 'ui/window.cpp'; then $(CYGPATH_W) 'ui/window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/window.cpp'; fi`

fs2-beam.o: weapon/beam.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-beam.o -MD -MP -MF "$(DEPDIR)/fs2-beam.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-beam.o `test -f 'weapon/beam.cpp' || echo '$(srcdir)/'`weapon/beam.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-beam.Tpo" "$(DEPDIR)/fs2-beam.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-beam.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/beam.cpp' object='fs2-beam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-beam.Po' tmpdepfile='$(DEPDIR)/fs2-beam.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-beam.o `test -f 'weapon/beam.cpp' || echo '$(srcdir)/'`weapon/beam.cpp

fs2-beam.obj: weapon/beam.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-beam.obj -MD -MP -MF "$(DEPDIR)/fs2-beam.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-beam.obj `if test -f 'weapon/beam.cpp'; then $(CYGPATH_W) 'weapon/beam.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/beam.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-beam.Tpo" "$(DEPDIR)/fs2-beam.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-beam.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/beam.cpp' object='fs2-beam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-beam.Po' tmpdepfile='$(DEPDIR)/fs2-beam.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-beam.obj `if test -f 'weapon/beam.cpp'; then $(CYGPATH_W) 'weapon/beam.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/beam.cpp'; fi`

fs2-corkscrew.o: weapon/corkscrew.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-corkscrew.o -MD -MP -MF "$(DEPDIR)/fs2-corkscrew.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-corkscrew.o `test -f 'weapon/corkscrew.cpp' || echo '$(srcdir)/'`weapon/corkscrew.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-corkscrew.Tpo" "$(DEPDIR)/fs2-corkscrew.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-corkscrew.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/corkscrew.cpp' object='fs2-corkscrew.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-corkscrew.Po' tmpdepfile='$(DEPDIR)/fs2-corkscrew.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-corkscrew.o `test -f 'weapon/corkscrew.cpp' || echo '$(srcdir)/'`weapon/corkscrew.cpp

fs2-corkscrew.obj: weapon/corkscrew.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-corkscrew.obj -MD -MP -MF "$(DEPDIR)/fs2-corkscrew.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-corkscrew.obj `if test -f 'weapon/corkscrew.cpp'; then $(CYGPATH_W) 'weapon/corkscrew.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/corkscrew.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-corkscrew.Tpo" "$(DEPDIR)/fs2-corkscrew.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-corkscrew.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/corkscrew.cpp' object='fs2-corkscrew.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-corkscrew.Po' tmpdepfile='$(DEPDIR)/fs2-corkscrew.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-corkscrew.obj `if test -f 'weapon/corkscrew.cpp'; then $(CYGPATH_W) 'weapon/corkscrew.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/corkscrew.cpp'; fi`

fs2-emp.o: weapon/emp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-emp.o -MD -MP -MF "$(DEPDIR)/fs2-emp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-emp.o `test -f 'weapon/emp.cpp' || echo '$(srcdir)/'`weapon/emp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-emp.Tpo" "$(DEPDIR)/fs2-emp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-emp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/emp.cpp' object='fs2-emp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-emp.Po' tmpdepfile='$(DEPDIR)/fs2-emp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-emp.o `test -f 'weapon/emp.cpp' || echo '$(srcdir)/'`weapon/emp.cpp

fs2-emp.obj: weapon/emp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-emp.obj -MD -MP -MF "$(DEPDIR)/fs2-emp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-emp.obj `if test -f 'weapon/emp.cpp'; then $(CYGPATH_W) 'weapon/emp.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/emp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-emp.Tpo" "$(DEPDIR)/fs2-emp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-emp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/emp.cpp' object='fs2-emp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-emp.Po' tmpdepfile='$(DEPDIR)/fs2-emp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-emp.obj `if test -f 'weapon/emp.cpp'; then $(CYGPATH_W) 'weapon/emp.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/emp.cpp'; fi`

fs2-flak.o: weapon/flak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-flak.o -MD -MP -MF "$(DEPDIR)/fs2-flak.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-flak.o `test -f 'weapon/flak.cpp' || echo '$(srcdir)/'`weapon/flak.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-flak.Tpo" "$(DEPDIR)/fs2-flak.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-flak.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/flak.cpp' object='fs2-flak.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-flak.Po' tmpdepfile='$(DEPDIR)/fs2-flak.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-flak.o `test -f 'weapon/flak.cpp' || echo '$(srcdir)/'`weapon/flak.cpp

fs2-flak.obj: weapon/flak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-flak.obj -MD -MP -MF "$(DEPDIR)/fs2-flak.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-flak.obj `if test -f 'weapon/flak.cpp'; then $(CYGPATH_W) 'weapon/flak.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/flak.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-flak.Tpo" "$(DEPDIR)/fs2-flak.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-flak.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/flak.cpp' object='fs2-flak.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-flak.Po' tmpdepfile='$(DEPDIR)/fs2-flak.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-flak.obj `if test -f 'weapon/flak.cpp'; then $(CYGPATH_W) 'weapon/flak.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/flak.cpp'; fi`

fs2-muzzleflash.o: weapon/muzzleflash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-muzzleflash.o -MD -MP -MF "$(DEPDIR)/fs2-muzzleflash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-muzzleflash.o `test -f 'weapon/muzzleflash.cpp' || echo '$(srcdir)/'`weapon/muzzleflash.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-muzzleflash.Tpo" "$(DEPDIR)/fs2-muzzleflash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-muzzleflash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/muzzleflash.cpp' object='fs2-muzzleflash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-muzzleflash.Po' tmpdepfile='$(DEPDIR)/fs2-muzzleflash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-muzzleflash.o `test -f 'weapon/muzzleflash.cpp' || echo '$(srcdir)/'`weapon/muzzleflash.cpp

fs2-muzzleflash.obj: weapon/muzzleflash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-muzzleflash.obj -MD -MP -MF "$(DEPDIR)/fs2-muzzleflash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-muzzleflash.obj `if test -f 'weapon/muzzleflash.cpp'; then $(CYGPATH_W) 'weapon/muzzleflash.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/muzzleflash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-muzzleflash.Tpo" "$(DEPDIR)/fs2-muzzleflash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-muzzleflash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/muzzleflash.cpp' object='fs2-muzzleflash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-muzzleflash.Po' tmpdepfile='$(DEPDIR)/fs2-muzzleflash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-muzzleflash.obj `if test -f 'weapon/muzzleflash.cpp'; then $(CYGPATH_W) 'weapon/muzzleflash.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/muzzleflash.cpp'; fi`

fs2-shockwave.o: weapon/shockwave.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shockwave.o -MD -MP -MF "$(DEPDIR)/fs2-shockwave.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shockwave.o `test -f 'weapon/shockwave.cpp' || echo '$(srcdir)/'`weapon/shockwave.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shockwave.Tpo" "$(DEPDIR)/fs2-shockwave.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shockwave.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/shockwave.cpp' object='fs2-shockwave.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shockwave.Po' tmpdepfile='$(DEPDIR)/fs2-shockwave.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shockwave.o `test -f 'weapon/shockwave.cpp' || echo '$(srcdir)/'`weapon/shockwave.cpp

fs2-shockwave.obj: weapon/shockwave.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-shockwave.obj -MD -MP -MF "$(DEPDIR)/fs2-shockwave.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-shockwave.obj `if test -f 'weapon/shockwave.cpp'; then $(CYGPATH_W) 'weapon/shockwave.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/shockwave.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-shockwave.Tpo" "$(DEPDIR)/fs2-shockwave.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-shockwave.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/shockwave.cpp' object='fs2-shockwave.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-shockwave.Po' tmpdepfile='$(DEPDIR)/fs2-shockwave.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-shockwave.obj `if test -f 'weapon/shockwave.cpp'; then $(CYGPATH_W) 'weapon/shockwave.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/shockwave.cpp'; fi`

fs2-swarm.o: weapon/swarm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-swarm.o -MD -MP -MF "$(DEPDIR)/fs2-swarm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-swarm.o `test -f 'weapon/swarm.cpp' || echo '$(srcdir)/'`weapon/swarm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-swarm.Tpo" "$(DEPDIR)/fs2-swarm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-swarm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/swarm.cpp' object='fs2-swarm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-swarm.Po' tmpdepfile='$(DEPDIR)/fs2-swarm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-swarm.o `test -f 'weapon/swarm.cpp' || echo '$(srcdir)/'`weapon/swarm.cpp

fs2-swarm.obj: weapon/swarm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-swarm.obj -MD -MP -MF "$(DEPDIR)/fs2-swarm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-swarm.obj `if test -f 'weapon/swarm.cpp'; then $(CYGPATH_W) 'weapon/swarm.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/swarm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-swarm.Tpo" "$(DEPDIR)/fs2-swarm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-swarm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/swarm.cpp' object='fs2-swarm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-swarm.Po' tmpdepfile='$(DEPDIR)/fs2-swarm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-swarm.obj `if test -f 'weapon/swarm.cpp'; then $(CYGPATH_W) 'weapon/swarm.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/swarm.cpp'; fi`

fs2-trails.o: weapon/trails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-trails.o -MD -MP -MF "$(DEPDIR)/fs2-trails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-trails.o `test -f 'weapon/trails.cpp' || echo '$(srcdir)/'`weapon/trails.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-trails.Tpo" "$(DEPDIR)/fs2-trails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-trails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/trails.cpp' object='fs2-trails.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-trails.Po' tmpdepfile='$(DEPDIR)/fs2-trails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-trails.o `test -f 'weapon/trails.cpp' || echo '$(srcdir)/'`weapon/trails.cpp

fs2-trails.obj: weapon/trails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-trails.obj -MD -MP -MF "$(DEPDIR)/fs2-trails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-trails.obj `if test -f 'weapon/trails.cpp'; then $(CYGPATH_W) 'weapon/trails.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/trails.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-trails.Tpo" "$(DEPDIR)/fs2-trails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-trails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/trails.cpp' object='fs2-trails.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-trails.Po' tmpdepfile='$(DEPDIR)/fs2-trails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-trails.obj `if test -f 'weapon/trails.cpp'; then $(CYGPATH_W) 'weapon/trails.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/trails.cpp'; fi`

fs2-weapons.o: weapon/weapons.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-weapons.o -MD -MP -MF "$(DEPDIR)/fs2-weapons.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-weapons.o `test -f 'weapon/weapons.cpp' || echo '$(srcdir)/'`weapon/weapons.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-weapons.Tpo" "$(DEPDIR)/fs2-weapons.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-weapons.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons.cpp' object='fs2-weapons.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-weapons.Po' tmpdepfile='$(DEPDIR)/fs2-weapons.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-weapons.o `test -f 'weapon/weapons.cpp' || echo '$(srcdir)/'`weapon/weapons.cpp

fs2-weapons.obj: weapon/weapons.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-weapons.obj -MD -MP -MF "$(DEPDIR)/fs2-weapons.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-weapons.obj `if test -f 'weapon/weapons.cpp'; then $(CYGPATH_W) 'weapon/weapons.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-weapons.Tpo" "$(DEPDIR)/fs2-weapons.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-weapons.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons.cpp' object='fs2-weapons.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-weapons.Po' tmpdepfile='$(DEPDIR)/fs2-weapons.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-weapons.obj `if test -f 'weapon/weapons.cpp'; then $(CYGPATH_W) 'weapon/weapons.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons.cpp'; fi`

fs2-joy.o: io/joy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-joy.o -MD -MP -MF "$(DEPDIR)/fs2-joy.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-joy.o `test -f 'io/joy.cpp' || echo '$(srcdir)/'`io/joy.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-joy.Tpo" "$(DEPDIR)/fs2-joy.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-joy.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy.cpp' object='fs2-joy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-joy.Po' tmpdepfile='$(DEPDIR)/fs2-joy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-joy.o `test -f 'io/joy.cpp' || echo '$(srcdir)/'`io/joy.cpp

fs2-joy.obj: io/joy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-joy.obj -MD -MP -MF "$(DEPDIR)/fs2-joy.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-joy.obj `if test -f 'io/joy.cpp'; then $(CYGPATH_W) 'io/joy.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-joy.Tpo" "$(DEPDIR)/fs2-joy.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-joy.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy.cpp' object='fs2-joy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-joy.Po' tmpdepfile='$(DEPDIR)/fs2-joy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-joy.obj `if test -f 'io/joy.cpp'; then $(CYGPATH_W) 'io/joy.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy.cpp'; fi`

fs2-joy_ff.o: io/joy_ff.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-joy_ff.o -MD -MP -MF "$(DEPDIR)/fs2-joy_ff.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-joy_ff.o `test -f 'io/joy_ff.cpp' || echo '$(srcdir)/'`io/joy_ff.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-joy_ff.Tpo" "$(DEPDIR)/fs2-joy_ff.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-joy_ff.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy_ff.cpp' object='fs2-joy_ff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-joy_ff.Po' tmpdepfile='$(DEPDIR)/fs2-joy_ff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-joy_ff.o `test -f 'io/joy_ff.cpp' || echo '$(srcdir)/'`io/joy_ff.cpp

fs2-joy_ff.obj: io/joy_ff.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-joy_ff.obj -MD -MP -MF "$(DEPDIR)/fs2-joy_ff.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-joy_ff.obj `if test -f 'io/joy_ff.cpp'; then $(CYGPATH_W) 'io/joy_ff.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy_ff.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-joy_ff.Tpo" "$(DEPDIR)/fs2-joy_ff.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-joy_ff.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy_ff.cpp' object='fs2-joy_ff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-joy_ff.Po' tmpdepfile='$(DEPDIR)/fs2-joy_ff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-joy_ff.obj `if test -f 'io/joy_ff.cpp'; then $(CYGPATH_W) 'io/joy_ff.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy_ff.cpp'; fi`

fs2-swff_lib.o: io/swff_lib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-swff_lib.o -MD -MP -MF "$(DEPDIR)/fs2-swff_lib.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-swff_lib.o `test -f 'io/swff_lib.cpp' || echo '$(srcdir)/'`io/swff_lib.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-swff_lib.Tpo" "$(DEPDIR)/fs2-swff_lib.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-swff_lib.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/swff_lib.cpp' object='fs2-swff_lib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-swff_lib.Po' tmpdepfile='$(DEPDIR)/fs2-swff_lib.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-swff_lib.o `test -f 'io/swff_lib.cpp' || echo '$(srcdir)/'`io/swff_lib.cpp

fs2-swff_lib.obj: io/swff_lib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-swff_lib.obj -MD -MP -MF "$(DEPDIR)/fs2-swff_lib.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-swff_lib.obj `if test -f 'io/swff_lib.cpp'; then $(CYGPATH_W) 'io/swff_lib.cpp'; else $(CYGPATH_W) '$(srcdir)/io/swff_lib.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-swff_lib.Tpo" "$(DEPDIR)/fs2-swff_lib.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-swff_lib.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/swff_lib.cpp' object='fs2-swff_lib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-swff_lib.Po' tmpdepfile='$(DEPDIR)/fs2-swff_lib.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-swff_lib.obj `if test -f 'io/swff_lib.cpp'; then $(CYGPATH_W) 'io/swff_lib.cpp'; else $(CYGPATH_W) '$(srcdir)/io/swff_lib.cpp'; fi`

fs2-hudobserver.o: hud/hudobserver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudobserver.o -MD -MP -MF "$(DEPDIR)/fs2-hudobserver.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudobserver.o `test -f 'hud/hudobserver.cpp' || echo '$(srcdir)/'`hud/hudobserver.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudobserver.Tpo" "$(DEPDIR)/fs2-hudobserver.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudobserver.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudobserver.cpp' object='fs2-hudobserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudobserver.Po' tmpdepfile='$(DEPDIR)/fs2-hudobserver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudobserver.o `test -f 'hud/hudobserver.cpp' || echo '$(srcdir)/'`hud/hudobserver.cpp

fs2-hudobserver.obj: hud/hudobserver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-hudobserver.obj -MD -MP -MF "$(DEPDIR)/fs2-hudobserver.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-hudobserver.obj `if test -f 'hud/hudobserver.cpp'; then $(CYGPATH_W) 'hud/hudobserver.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudobserver.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-hudobserver.Tpo" "$(DEPDIR)/fs2-hudobserver.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-hudobserver.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudobserver.cpp' object='fs2-hudobserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-hudobserver.Po' tmpdepfile='$(DEPDIR)/fs2-hudobserver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-hudobserver.obj `if test -f 'hud/hudobserver.cpp'; then $(CYGPATH_W) 'hud/hudobserver.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudobserver.cpp'; fi`

fs2-multi.o: network/multi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi.o -MD -MP -MF "$(DEPDIR)/fs2-multi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi.o `test -f 'network/multi.cpp' || echo '$(srcdir)/'`network/multi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi.Tpo" "$(DEPDIR)/fs2-multi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi.cpp' object='fs2-multi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi.Po' tmpdepfile='$(DEPDIR)/fs2-multi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi.o `test -f 'network/multi.cpp' || echo '$(srcdir)/'`network/multi.cpp

fs2-multi.obj: network/multi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi.obj -MD -MP -MF "$(DEPDIR)/fs2-multi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi.obj `if test -f 'network/multi.cpp'; then $(CYGPATH_W) 'network/multi.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi.Tpo" "$(DEPDIR)/fs2-multi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi.cpp' object='fs2-multi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi.Po' tmpdepfile='$(DEPDIR)/fs2-multi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi.obj `if test -f 'network/multi.cpp'; then $(CYGPATH_W) 'network/multi.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi.cpp'; fi`

fs2-multimsgs.o: network/multimsgs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multimsgs.o -MD -MP -MF "$(DEPDIR)/fs2-multimsgs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multimsgs.o `test -f 'network/multimsgs.cpp' || echo '$(srcdir)/'`network/multimsgs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multimsgs.Tpo" "$(DEPDIR)/fs2-multimsgs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multimsgs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multimsgs.cpp' object='fs2-multimsgs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multimsgs.Po' tmpdepfile='$(DEPDIR)/fs2-multimsgs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multimsgs.o `test -f 'network/multimsgs.cpp' || echo '$(srcdir)/'`network/multimsgs.cpp

fs2-multimsgs.obj: network/multimsgs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multimsgs.obj -MD -MP -MF "$(DEPDIR)/fs2-multimsgs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multimsgs.obj `if test -f 'network/multimsgs.cpp'; then $(CYGPATH_W) 'network/multimsgs.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multimsgs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multimsgs.Tpo" "$(DEPDIR)/fs2-multimsgs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multimsgs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multimsgs.cpp' object='fs2-multimsgs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multimsgs.Po' tmpdepfile='$(DEPDIR)/fs2-multimsgs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multimsgs.obj `if test -f 'network/multimsgs.cpp'; then $(CYGPATH_W) 'network/multimsgs.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multimsgs.cpp'; fi`

fs2-multiteamselect.o: network/multiteamselect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiteamselect.o -MD -MP -MF "$(DEPDIR)/fs2-multiteamselect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiteamselect.o `test -f 'network/multiteamselect.cpp' || echo '$(srcdir)/'`network/multiteamselect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiteamselect.Tpo" "$(DEPDIR)/fs2-multiteamselect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiteamselect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiteamselect.cpp' object='fs2-multiteamselect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiteamselect.Po' tmpdepfile='$(DEPDIR)/fs2-multiteamselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiteamselect.o `test -f 'network/multiteamselect.cpp' || echo '$(srcdir)/'`network/multiteamselect.cpp

fs2-multiteamselect.obj: network/multiteamselect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiteamselect.obj -MD -MP -MF "$(DEPDIR)/fs2-multiteamselect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiteamselect.obj `if test -f 'network/multiteamselect.cpp'; then $(CYGPATH_W) 'network/multiteamselect.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiteamselect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiteamselect.Tpo" "$(DEPDIR)/fs2-multiteamselect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiteamselect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiteamselect.cpp' object='fs2-multiteamselect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiteamselect.Po' tmpdepfile='$(DEPDIR)/fs2-multiteamselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiteamselect.obj `if test -f 'network/multiteamselect.cpp'; then $(CYGPATH_W) 'network/multiteamselect.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiteamselect.cpp'; fi`

fs2-multiui.o: network/multiui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiui.o -MD -MP -MF "$(DEPDIR)/fs2-multiui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiui.o `test -f 'network/multiui.cpp' || echo '$(srcdir)/'`network/multiui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiui.Tpo" "$(DEPDIR)/fs2-multiui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiui.cpp' object='fs2-multiui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiui.Po' tmpdepfile='$(DEPDIR)/fs2-multiui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiui.o `test -f 'network/multiui.cpp' || echo '$(srcdir)/'`network/multiui.cpp

fs2-multiui.obj: network/multiui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiui.obj -MD -MP -MF "$(DEPDIR)/fs2-multiui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiui.obj `if test -f 'network/multiui.cpp'; then $(CYGPATH_W) 'network/multiui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiui.Tpo" "$(DEPDIR)/fs2-multiui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiui.cpp' object='fs2-multiui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiui.Po' tmpdepfile='$(DEPDIR)/fs2-multiui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiui.obj `if test -f 'network/multiui.cpp'; then $(CYGPATH_W) 'network/multiui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiui.cpp'; fi`

fs2-multiutil.o: network/multiutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiutil.o -MD -MP -MF "$(DEPDIR)/fs2-multiutil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiutil.o `test -f 'network/multiutil.cpp' || echo '$(srcdir)/'`network/multiutil.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiutil.Tpo" "$(DEPDIR)/fs2-multiutil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiutil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiutil.cpp' object='fs2-multiutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiutil.Po' tmpdepfile='$(DEPDIR)/fs2-multiutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiutil.o `test -f 'network/multiutil.cpp' || echo '$(srcdir)/'`network/multiutil.cpp

fs2-multiutil.obj: network/multiutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multiutil.obj -MD -MP -MF "$(DEPDIR)/fs2-multiutil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multiutil.obj `if test -f 'network/multiutil.cpp'; then $(CYGPATH_W) 'network/multiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiutil.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multiutil.Tpo" "$(DEPDIR)/fs2-multiutil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multiutil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiutil.cpp' object='fs2-multiutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multiutil.Po' tmpdepfile='$(DEPDIR)/fs2-multiutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multiutil.obj `if test -f 'network/multiutil.cpp'; then $(CYGPATH_W) 'network/multiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiutil.cpp'; fi`

fs2-multi_campaign.o: network/multi_campaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_campaign.o -MD -MP -MF "$(DEPDIR)/fs2-multi_campaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_campaign.o `test -f 'network/multi_campaign.cpp' || echo '$(srcdir)/'`network/multi_campaign.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_campaign.Tpo" "$(DEPDIR)/fs2-multi_campaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_campaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_campaign.cpp' object='fs2-multi_campaign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_campaign.Po' tmpdepfile='$(DEPDIR)/fs2-multi_campaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_campaign.o `test -f 'network/multi_campaign.cpp' || echo '$(srcdir)/'`network/multi_campaign.cpp

fs2-multi_campaign.obj: network/multi_campaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_campaign.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_campaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_campaign.obj `if test -f 'network/multi_campaign.cpp'; then $(CYGPATH_W) 'network/multi_campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_campaign.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_campaign.Tpo" "$(DEPDIR)/fs2-multi_campaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_campaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_campaign.cpp' object='fs2-multi_campaign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_campaign.Po' tmpdepfile='$(DEPDIR)/fs2-multi_campaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_campaign.obj `if test -f 'network/multi_campaign.cpp'; then $(CYGPATH_W) 'network/multi_campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_campaign.cpp'; fi`

fs2-multi_data.o: network/multi_data.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_data.o -MD -MP -MF "$(DEPDIR)/fs2-multi_data.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_data.o `test -f 'network/multi_data.cpp' || echo '$(srcdir)/'`network/multi_data.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_data.Tpo" "$(DEPDIR)/fs2-multi_data.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_data.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_data.cpp' object='fs2-multi_data.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_data.Po' tmpdepfile='$(DEPDIR)/fs2-multi_data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_data.o `test -f 'network/multi_data.cpp' || echo '$(srcdir)/'`network/multi_data.cpp

fs2-multi_data.obj: network/multi_data.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_data.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_data.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_data.obj `if test -f 'network/multi_data.cpp'; then $(CYGPATH_W) 'network/multi_data.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_data.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_data.Tpo" "$(DEPDIR)/fs2-multi_data.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_data.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_data.cpp' object='fs2-multi_data.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_data.Po' tmpdepfile='$(DEPDIR)/fs2-multi_data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_data.obj `if test -f 'network/multi_data.cpp'; then $(CYGPATH_W) 'network/multi_data.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_data.cpp'; fi`

fs2-multi_dogfight.o: network/multi_dogfight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_dogfight.o -MD -MP -MF "$(DEPDIR)/fs2-multi_dogfight.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_dogfight.o `test -f 'network/multi_dogfight.cpp' || echo '$(srcdir)/'`network/multi_dogfight.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_dogfight.Tpo" "$(DEPDIR)/fs2-multi_dogfight.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_dogfight.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_dogfight.cpp' object='fs2-multi_dogfight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_dogfight.Po' tmpdepfile='$(DEPDIR)/fs2-multi_dogfight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_dogfight.o `test -f 'network/multi_dogfight.cpp' || echo '$(srcdir)/'`network/multi_dogfight.cpp

fs2-multi_dogfight.obj: network/multi_dogfight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_dogfight.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_dogfight.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_dogfight.obj `if test -f 'network/multi_dogfight.cpp'; then $(CYGPATH_W) 'network/multi_dogfight.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_dogfight.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_dogfight.Tpo" "$(DEPDIR)/fs2-multi_dogfight.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_dogfight.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_dogfight.cpp' object='fs2-multi_dogfight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_dogfight.Po' tmpdepfile='$(DEPDIR)/fs2-multi_dogfight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_dogfight.obj `if test -f 'network/multi_dogfight.cpp'; then $(CYGPATH_W) 'network/multi_dogfight.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_dogfight.cpp'; fi`

fs2-multi_endgame.o: network/multi_endgame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_endgame.o -MD -MP -MF "$(DEPDIR)/fs2-multi_endgame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_endgame.o `test -f 'network/multi_endgame.cpp' || echo '$(srcdir)/'`network/multi_endgame.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_endgame.Tpo" "$(DEPDIR)/fs2-multi_endgame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_endgame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_endgame.cpp' object='fs2-multi_endgame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_endgame.Po' tmpdepfile='$(DEPDIR)/fs2-multi_endgame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_endgame.o `test -f 'network/multi_endgame.cpp' || echo '$(srcdir)/'`network/multi_endgame.cpp

fs2-multi_endgame.obj: network/multi_endgame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_endgame.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_endgame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_endgame.obj `if test -f 'network/multi_endgame.cpp'; then $(CYGPATH_W) 'network/multi_endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_endgame.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_endgame.Tpo" "$(DEPDIR)/fs2-multi_endgame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_endgame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_endgame.cpp' object='fs2-multi_endgame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_endgame.Po' tmpdepfile='$(DEPDIR)/fs2-multi_endgame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_endgame.obj `if test -f 'network/multi_endgame.cpp'; then $(CYGPATH_W) 'network/multi_endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_endgame.cpp'; fi`

fs2-multi_ingame.o: network/multi_ingame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_ingame.o -MD -MP -MF "$(DEPDIR)/fs2-multi_ingame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_ingame.o `test -f 'network/multi_ingame.cpp' || echo '$(srcdir)/'`network/multi_ingame.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_ingame.Tpo" "$(DEPDIR)/fs2-multi_ingame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_ingame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ingame.cpp' object='fs2-multi_ingame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_ingame.Po' tmpdepfile='$(DEPDIR)/fs2-multi_ingame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_ingame.o `test -f 'network/multi_ingame.cpp' || echo '$(srcdir)/'`network/multi_ingame.cpp

fs2-multi_ingame.obj: network/multi_ingame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_ingame.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_ingame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_ingame.obj `if test -f 'network/multi_ingame.cpp'; then $(CYGPATH_W) 'network/multi_ingame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ingame.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_ingame.Tpo" "$(DEPDIR)/fs2-multi_ingame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_ingame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ingame.cpp' object='fs2-multi_ingame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_ingame.Po' tmpdepfile='$(DEPDIR)/fs2-multi_ingame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_ingame.obj `if test -f 'network/multi_ingame.cpp'; then $(CYGPATH_W) 'network/multi_ingame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ingame.cpp'; fi`

fs2-multi_kick.o: network/multi_kick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_kick.o -MD -MP -MF "$(DEPDIR)/fs2-multi_kick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_kick.o `test -f 'network/multi_kick.cpp' || echo '$(srcdir)/'`network/multi_kick.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_kick.Tpo" "$(DEPDIR)/fs2-multi_kick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_kick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_kick.cpp' object='fs2-multi_kick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_kick.Po' tmpdepfile='$(DEPDIR)/fs2-multi_kick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_kick.o `test -f 'network/multi_kick.cpp' || echo '$(srcdir)/'`network/multi_kick.cpp

fs2-multi_kick.obj: network/multi_kick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_kick.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_kick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_kick.obj `if test -f 'network/multi_kick.cpp'; then $(CYGPATH_W) 'network/multi_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_kick.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_kick.Tpo" "$(DEPDIR)/fs2-multi_kick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_kick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_kick.cpp' object='fs2-multi_kick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_kick.Po' tmpdepfile='$(DEPDIR)/fs2-multi_kick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_kick.obj `if test -f 'network/multi_kick.cpp'; then $(CYGPATH_W) 'network/multi_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_kick.cpp'; fi`

fs2-multi_log.o: network/multi_log.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_log.o -MD -MP -MF "$(DEPDIR)/fs2-multi_log.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_log.o `test -f 'network/multi_log.cpp' || echo '$(srcdir)/'`network/multi_log.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_log.Tpo" "$(DEPDIR)/fs2-multi_log.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_log.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_log.cpp' object='fs2-multi_log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_log.Po' tmpdepfile='$(DEPDIR)/fs2-multi_log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_log.o `test -f 'network/multi_log.cpp' || echo '$(srcdir)/'`network/multi_log.cpp

fs2-multi_log.obj: network/multi_log.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_log.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_log.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_log.obj `if test -f 'network/multi_log.cpp'; then $(CYGPATH_W) 'network/multi_log.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_log.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_log.Tpo" "$(DEPDIR)/fs2-multi_log.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_log.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_log.cpp' object='fs2-multi_log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_log.Po' tmpdepfile='$(DEPDIR)/fs2-multi_log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_log.obj `if test -f 'network/multi_log.cpp'; then $(CYGPATH_W) 'network/multi_log.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_log.cpp'; fi`

fs2-multi_obj.o: network/multi_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_obj.o -MD -MP -MF "$(DEPDIR)/fs2-multi_obj.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_obj.o `test -f 'network/multi_obj.cpp' || echo '$(srcdir)/'`network/multi_obj.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_obj.Tpo" "$(DEPDIR)/fs2-multi_obj.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_obj.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_obj.cpp' object='fs2-multi_obj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_obj.Po' tmpdepfile='$(DEPDIR)/fs2-multi_obj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_obj.o `test -f 'network/multi_obj.cpp' || echo '$(srcdir)/'`network/multi_obj.cpp

fs2-multi_obj.obj: network/multi_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_obj.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_obj.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_obj.obj `if test -f 'network/multi_obj.cpp'; then $(CYGPATH_W) 'network/multi_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_obj.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_obj.Tpo" "$(DEPDIR)/fs2-multi_obj.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_obj.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_obj.cpp' object='fs2-multi_obj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_obj.Po' tmpdepfile='$(DEPDIR)/fs2-multi_obj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_obj.obj `if test -f 'network/multi_obj.cpp'; then $(CYGPATH_W) 'network/multi_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_obj.cpp'; fi`

fs2-multi_observer.o: network/multi_observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_observer.o -MD -MP -MF "$(DEPDIR)/fs2-multi_observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_observer.o `test -f 'network/multi_observer.cpp' || echo '$(srcdir)/'`network/multi_observer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_observer.Tpo" "$(DEPDIR)/fs2-multi_observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_observer.cpp' object='fs2-multi_observer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_observer.Po' tmpdepfile='$(DEPDIR)/fs2-multi_observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_observer.o `test -f 'network/multi_observer.cpp' || echo '$(srcdir)/'`network/multi_observer.cpp

fs2-multi_observer.obj: network/multi_observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_observer.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_observer.obj `if test -f 'network/multi_observer.cpp'; then $(CYGPATH_W) 'network/multi_observer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_observer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_observer.Tpo" "$(DEPDIR)/fs2-multi_observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_observer.cpp' object='fs2-multi_observer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_observer.Po' tmpdepfile='$(DEPDIR)/fs2-multi_observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_observer.obj `if test -f 'network/multi_observer.cpp'; then $(CYGPATH_W) 'network/multi_observer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_observer.cpp'; fi`

fs2-multi_options.o: network/multi_options.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_options.o -MD -MP -MF "$(DEPDIR)/fs2-multi_options.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_options.o `test -f 'network/multi_options.cpp' || echo '$(srcdir)/'`network/multi_options.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_options.Tpo" "$(DEPDIR)/fs2-multi_options.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_options.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_options.cpp' object='fs2-multi_options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_options.Po' tmpdepfile='$(DEPDIR)/fs2-multi_options.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_options.o `test -f 'network/multi_options.cpp' || echo '$(srcdir)/'`network/multi_options.cpp

fs2-multi_options.obj: network/multi_options.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_options.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_options.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_options.obj `if test -f 'network/multi_options.cpp'; then $(CYGPATH_W) 'network/multi_options.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_options.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_options.Tpo" "$(DEPDIR)/fs2-multi_options.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_options.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_options.cpp' object='fs2-multi_options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_options.Po' tmpdepfile='$(DEPDIR)/fs2-multi_options.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_options.obj `if test -f 'network/multi_options.cpp'; then $(CYGPATH_W) 'network/multi_options.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_options.cpp'; fi`

fs2-multi_pause.o: network/multi_pause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pause.o -MD -MP -MF "$(DEPDIR)/fs2-multi_pause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pause.o `test -f 'network/multi_pause.cpp' || echo '$(srcdir)/'`network/multi_pause.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pause.Tpo" "$(DEPDIR)/fs2-multi_pause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pause.cpp' object='fs2-multi_pause.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pause.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pause.o `test -f 'network/multi_pause.cpp' || echo '$(srcdir)/'`network/multi_pause.cpp

fs2-multi_pause.obj: network/multi_pause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pause.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_pause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pause.obj `if test -f 'network/multi_pause.cpp'; then $(CYGPATH_W) 'network/multi_pause.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pause.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pause.Tpo" "$(DEPDIR)/fs2-multi_pause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pause.cpp' object='fs2-multi_pause.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pause.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pause.obj `if test -f 'network/multi_pause.cpp'; then $(CYGPATH_W) 'network/multi_pause.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pause.cpp'; fi`

fs2-multi_pinfo.o: network/multi_pinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pinfo.o -MD -MP -MF "$(DEPDIR)/fs2-multi_pinfo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pinfo.o `test -f 'network/multi_pinfo.cpp' || echo '$(srcdir)/'`network/multi_pinfo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pinfo.Tpo" "$(DEPDIR)/fs2-multi_pinfo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pinfo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pinfo.cpp' object='fs2-multi_pinfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pinfo.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pinfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pinfo.o `test -f 'network/multi_pinfo.cpp' || echo '$(srcdir)/'`network/multi_pinfo.cpp

fs2-multi_pinfo.obj: network/multi_pinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pinfo.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_pinfo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pinfo.obj `if test -f 'network/multi_pinfo.cpp'; then $(CYGPATH_W) 'network/multi_pinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pinfo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pinfo.Tpo" "$(DEPDIR)/fs2-multi_pinfo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pinfo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pinfo.cpp' object='fs2-multi_pinfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pinfo.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pinfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pinfo.obj `if test -f 'network/multi_pinfo.cpp'; then $(CYGPATH_W) 'network/multi_pinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pinfo.cpp'; fi`

fs2-multi_ping.o: network/multi_ping.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_ping.o -MD -MP -MF "$(DEPDIR)/fs2-multi_ping.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_ping.o `test -f 'network/multi_ping.cpp' || echo '$(srcdir)/'`network/multi_ping.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_ping.Tpo" "$(DEPDIR)/fs2-multi_ping.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_ping.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ping.cpp' object='fs2-multi_ping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_ping.Po' tmpdepfile='$(DEPDIR)/fs2-multi_ping.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_ping.o `test -f 'network/multi_ping.cpp' || echo '$(srcdir)/'`network/multi_ping.cpp

fs2-multi_ping.obj: network/multi_ping.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_ping.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_ping.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_ping.obj `if test -f 'network/multi_ping.cpp'; then $(CYGPATH_W) 'network/multi_ping.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ping.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_ping.Tpo" "$(DEPDIR)/fs2-multi_ping.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_ping.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ping.cpp' object='fs2-multi_ping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_ping.Po' tmpdepfile='$(DEPDIR)/fs2-multi_ping.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_ping.obj `if test -f 'network/multi_ping.cpp'; then $(CYGPATH_W) 'network/multi_ping.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ping.cpp'; fi`

fs2-multi_pmsg.o: network/multi_pmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pmsg.o -MD -MP -MF "$(DEPDIR)/fs2-multi_pmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pmsg.o `test -f 'network/multi_pmsg.cpp' || echo '$(srcdir)/'`network/multi_pmsg.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pmsg.Tpo" "$(DEPDIR)/fs2-multi_pmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pmsg.cpp' object='fs2-multi_pmsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pmsg.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pmsg.o `test -f 'network/multi_pmsg.cpp' || echo '$(srcdir)/'`network/multi_pmsg.cpp

fs2-multi_pmsg.obj: network/multi_pmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_pmsg.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_pmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_pmsg.obj `if test -f 'network/multi_pmsg.cpp'; then $(CYGPATH_W) 'network/multi_pmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pmsg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_pmsg.Tpo" "$(DEPDIR)/fs2-multi_pmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_pmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pmsg.cpp' object='fs2-multi_pmsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_pmsg.Po' tmpdepfile='$(DEPDIR)/fs2-multi_pmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_pmsg.obj `if test -f 'network/multi_pmsg.cpp'; then $(CYGPATH_W) 'network/multi_pmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pmsg.cpp'; fi`

fs2-multi_rate.o: network/multi_rate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_rate.o -MD -MP -MF "$(DEPDIR)/fs2-multi_rate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_rate.o `test -f 'network/multi_rate.cpp' || echo '$(srcdir)/'`network/multi_rate.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_rate.Tpo" "$(DEPDIR)/fs2-multi_rate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_rate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_rate.cpp' object='fs2-multi_rate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_rate.Po' tmpdepfile='$(DEPDIR)/fs2-multi_rate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_rate.o `test -f 'network/multi_rate.cpp' || echo '$(srcdir)/'`network/multi_rate.cpp

fs2-multi_rate.obj: network/multi_rate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_rate.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_rate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_rate.obj `if test -f 'network/multi_rate.cpp'; then $(CYGPATH_W) 'network/multi_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_rate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_rate.Tpo" "$(DEPDIR)/fs2-multi_rate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_rate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_rate.cpp' object='fs2-multi_rate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_rate.Po' tmpdepfile='$(DEPDIR)/fs2-multi_rate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_rate.obj `if test -f 'network/multi_rate.cpp'; then $(CYGPATH_W) 'network/multi_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_rate.cpp'; fi`

fs2-multi_respawn.o: network/multi_respawn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_respawn.o -MD -MP -MF "$(DEPDIR)/fs2-multi_respawn.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_respawn.o `test -f 'network/multi_respawn.cpp' || echo '$(srcdir)/'`network/multi_respawn.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_respawn.Tpo" "$(DEPDIR)/fs2-multi_respawn.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_respawn.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_respawn.cpp' object='fs2-multi_respawn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_respawn.Po' tmpdepfile='$(DEPDIR)/fs2-multi_respawn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_respawn.o `test -f 'network/multi_respawn.cpp' || echo '$(srcdir)/'`network/multi_respawn.cpp

fs2-multi_respawn.obj: network/multi_respawn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_respawn.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_respawn.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_respawn.obj `if test -f 'network/multi_respawn.cpp'; then $(CYGPATH_W) 'network/multi_respawn.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_respawn.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_respawn.Tpo" "$(DEPDIR)/fs2-multi_respawn.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_respawn.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_respawn.cpp' object='fs2-multi_respawn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_respawn.Po' tmpdepfile='$(DEPDIR)/fs2-multi_respawn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_respawn.obj `if test -f 'network/multi_respawn.cpp'; then $(CYGPATH_W) 'network/multi_respawn.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_respawn.cpp'; fi`

fs2-multi_team.o: network/multi_team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_team.o -MD -MP -MF "$(DEPDIR)/fs2-multi_team.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_team.o `test -f 'network/multi_team.cpp' || echo '$(srcdir)/'`network/multi_team.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_team.Tpo" "$(DEPDIR)/fs2-multi_team.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_team.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_team.cpp' object='fs2-multi_team.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_team.Po' tmpdepfile='$(DEPDIR)/fs2-multi_team.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_team.o `test -f 'network/multi_team.cpp' || echo '$(srcdir)/'`network/multi_team.cpp

fs2-multi_team.obj: network/multi_team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_team.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_team.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_team.obj `if test -f 'network/multi_team.cpp'; then $(CYGPATH_W) 'network/multi_team.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_team.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_team.Tpo" "$(DEPDIR)/fs2-multi_team.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_team.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_team.cpp' object='fs2-multi_team.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_team.Po' tmpdepfile='$(DEPDIR)/fs2-multi_team.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_team.obj `if test -f 'network/multi_team.cpp'; then $(CYGPATH_W) 'network/multi_team.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_team.cpp'; fi`

fs2-multi_voice.o: network/multi_voice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_voice.o -MD -MP -MF "$(DEPDIR)/fs2-multi_voice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_voice.o `test -f 'network/multi_voice.cpp' || echo '$(srcdir)/'`network/multi_voice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_voice.Tpo" "$(DEPDIR)/fs2-multi_voice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_voice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_voice.cpp' object='fs2-multi_voice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_voice.Po' tmpdepfile='$(DEPDIR)/fs2-multi_voice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_voice.o `test -f 'network/multi_voice.cpp' || echo '$(srcdir)/'`network/multi_voice.cpp

fs2-multi_voice.obj: network/multi_voice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_voice.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_voice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_voice.obj `if test -f 'network/multi_voice.cpp'; then $(CYGPATH_W) 'network/multi_voice.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_voice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_voice.Tpo" "$(DEPDIR)/fs2-multi_voice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_voice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_voice.cpp' object='fs2-multi_voice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_voice.Po' tmpdepfile='$(DEPDIR)/fs2-multi_voice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_voice.obj `if test -f 'network/multi_voice.cpp'; then $(CYGPATH_W) 'network/multi_voice.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_voice.cpp'; fi`

fs2-multi_xfer.o: network/multi_xfer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_xfer.o -MD -MP -MF "$(DEPDIR)/fs2-multi_xfer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_xfer.o `test -f 'network/multi_xfer.cpp' || echo '$(srcdir)/'`network/multi_xfer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_xfer.Tpo" "$(DEPDIR)/fs2-multi_xfer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_xfer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_xfer.cpp' object='fs2-multi_xfer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_xfer.Po' tmpdepfile='$(DEPDIR)/fs2-multi_xfer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_xfer.o `test -f 'network/multi_xfer.cpp' || echo '$(srcdir)/'`network/multi_xfer.cpp

fs2-multi_xfer.obj: network/multi_xfer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-multi_xfer.obj -MD -MP -MF "$(DEPDIR)/fs2-multi_xfer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-multi_xfer.obj `if test -f 'network/multi_xfer.cpp'; then $(CYGPATH_W) 'network/multi_xfer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_xfer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-multi_xfer.Tpo" "$(DEPDIR)/fs2-multi_xfer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-multi_xfer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_xfer.cpp' object='fs2-multi_xfer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-multi_xfer.Po' tmpdepfile='$(DEPDIR)/fs2-multi_xfer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-multi_xfer.obj `if test -f 'network/multi_xfer.cpp'; then $(CYGPATH_W) 'network/multi_xfer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_xfer.cpp'; fi`

fs2-psnet.o: network/psnet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-psnet.o -MD -MP -MF "$(DEPDIR)/fs2-psnet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-psnet.o `test -f 'network/psnet.cpp' || echo '$(srcdir)/'`network/psnet.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-psnet.Tpo" "$(DEPDIR)/fs2-psnet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-psnet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet.cpp' object='fs2-psnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-psnet.Po' tmpdepfile='$(DEPDIR)/fs2-psnet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-psnet.o `test -f 'network/psnet.cpp' || echo '$(srcdir)/'`network/psnet.cpp

fs2-psnet.obj: network/psnet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-psnet.obj -MD -MP -MF "$(DEPDIR)/fs2-psnet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-psnet.obj `if test -f 'network/psnet.cpp'; then $(CYGPATH_W) 'network/psnet.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-psnet.Tpo" "$(DEPDIR)/fs2-psnet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-psnet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet.cpp' object='fs2-psnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-psnet.Po' tmpdepfile='$(DEPDIR)/fs2-psnet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-psnet.obj `if test -f 'network/psnet.cpp'; then $(CYGPATH_W) 'network/psnet.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet.cpp'; fi`

fs2-psnet2.o: network/psnet2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-psnet2.o -MD -MP -MF "$(DEPDIR)/fs2-psnet2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-psnet2.o `test -f 'network/psnet2.cpp' || echo '$(srcdir)/'`network/psnet2.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-psnet2.Tpo" "$(DEPDIR)/fs2-psnet2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-psnet2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet2.cpp' object='fs2-psnet2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-psnet2.Po' tmpdepfile='$(DEPDIR)/fs2-psnet2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-psnet2.o `test -f 'network/psnet2.cpp' || echo '$(srcdir)/'`network/psnet2.cpp

fs2-psnet2.obj: network/psnet2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-psnet2.obj -MD -MP -MF "$(DEPDIR)/fs2-psnet2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-psnet2.obj `if test -f 'network/psnet2.cpp'; then $(CYGPATH_W) 'network/psnet2.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-psnet2.Tpo" "$(DEPDIR)/fs2-psnet2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-psnet2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet2.cpp' object='fs2-psnet2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-psnet2.Po' tmpdepfile='$(DEPDIR)/fs2-psnet2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-psnet2.obj `if test -f 'network/psnet2.cpp'; then $(CYGPATH_W) 'network/psnet2.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet2.cpp'; fi`

fs2-optionsmenumulti.o: menuui/optionsmenumulti.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-optionsmenumulti.o -MD -MP -MF "$(DEPDIR)/fs2-optionsmenumulti.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-optionsmenumulti.o `test -f 'menuui/optionsmenumulti.cpp' || echo '$(srcdir)/'`menuui/optionsmenumulti.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-optionsmenumulti.Tpo" "$(DEPDIR)/fs2-optionsmenumulti.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-optionsmenumulti.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenumulti.cpp' object='fs2-optionsmenumulti.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-optionsmenumulti.Po' tmpdepfile='$(DEPDIR)/fs2-optionsmenumulti.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-optionsmenumulti.o `test -f 'menuui/optionsmenumulti.cpp' || echo '$(srcdir)/'`menuui/optionsmenumulti.cpp

fs2-optionsmenumulti.obj: menuui/optionsmenumulti.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-optionsmenumulti.obj -MD -MP -MF "$(DEPDIR)/fs2-optionsmenumulti.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-optionsmenumulti.obj `if test -f 'menuui/optionsmenumulti.cpp'; then $(CYGPATH_W) 'menuui/optionsmenumulti.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenumulti.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-optionsmenumulti.Tpo" "$(DEPDIR)/fs2-optionsmenumulti.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-optionsmenumulti.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenumulti.cpp' object='fs2-optionsmenumulti.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-optionsmenumulti.Po' tmpdepfile='$(DEPDIR)/fs2-optionsmenumulti.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-optionsmenumulti.obj `if test -f 'menuui/optionsmenumulti.cpp'; then $(CYGPATH_W) 'menuui/optionsmenumulti.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenumulti.cpp'; fi`

fs2-chatbox.o: missionui/chatbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-chatbox.o -MD -MP -MF "$(DEPDIR)/fs2-chatbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-chatbox.o `test -f 'missionui/chatbox.cpp' || echo '$(srcdir)/'`missionui/chatbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-chatbox.Tpo" "$(DEPDIR)/fs2-chatbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-chatbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/chatbox.cpp' object='fs2-chatbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-chatbox.Po' tmpdepfile='$(DEPDIR)/fs2-chatbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-chatbox.o `test -f 'missionui/chatbox.cpp' || echo '$(srcdir)/'`missionui/chatbox.cpp

fs2-chatbox.obj: missionui/chatbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-chatbox.obj -MD -MP -MF "$(DEPDIR)/fs2-chatbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-chatbox.obj `if test -f 'missionui/chatbox.cpp'; then $(CYGPATH_W) 'missionui/chatbox.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/chatbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-chatbox.Tpo" "$(DEPDIR)/fs2-chatbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-chatbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/chatbox.cpp' object='fs2-chatbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-chatbox.Po' tmpdepfile='$(DEPDIR)/fs2-chatbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-chatbox.obj `if test -f 'missionui/chatbox.cpp'; then $(CYGPATH_W) 'missionui/chatbox.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/chatbox.cpp'; fi`

fs2-eventmusic.o: gamesnd/eventmusic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-eventmusic.o -MD -MP -MF "$(DEPDIR)/fs2-eventmusic.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-eventmusic.o `test -f 'gamesnd/eventmusic.cpp' || echo '$(srcdir)/'`gamesnd/eventmusic.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-eventmusic.Tpo" "$(DEPDIR)/fs2-eventmusic.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-eventmusic.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/eventmusic.cpp' object='fs2-eventmusic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-eventmusic.Po' tmpdepfile='$(DEPDIR)/fs2-eventmusic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-eventmusic.o `test -f 'gamesnd/eventmusic.cpp' || echo '$(srcdir)/'`gamesnd/eventmusic.cpp

fs2-eventmusic.obj: gamesnd/eventmusic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-eventmusic.obj -MD -MP -MF "$(DEPDIR)/fs2-eventmusic.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-eventmusic.obj `if test -f 'gamesnd/eventmusic.cpp'; then $(CYGPATH_W) 'gamesnd/eventmusic.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/eventmusic.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-eventmusic.Tpo" "$(DEPDIR)/fs2-eventmusic.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-eventmusic.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/eventmusic.cpp' object='fs2-eventmusic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-eventmusic.Po' tmpdepfile='$(DEPDIR)/fs2-eventmusic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-eventmusic.obj `if test -f 'gamesnd/eventmusic.cpp'; then $(CYGPATH_W) 'gamesnd/eventmusic.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/eventmusic.cpp'; fi`

fs2-gamesnd.o: gamesnd/gamesnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gamesnd.o -MD -MP -MF "$(DEPDIR)/fs2-gamesnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gamesnd.o `test -f 'gamesnd/gamesnd.cpp' || echo '$(srcdir)/'`gamesnd/gamesnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gamesnd.Tpo" "$(DEPDIR)/fs2-gamesnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gamesnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/gamesnd.cpp' object='fs2-gamesnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gamesnd.Po' tmpdepfile='$(DEPDIR)/fs2-gamesnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gamesnd.o `test -f 'gamesnd/gamesnd.cpp' || echo '$(srcdir)/'`gamesnd/gamesnd.cpp

fs2-gamesnd.obj: gamesnd/gamesnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-gamesnd.obj -MD -MP -MF "$(DEPDIR)/fs2-gamesnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-gamesnd.obj `if test -f 'gamesnd/gamesnd.cpp'; then $(CYGPATH_W) 'gamesnd/gamesnd.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/gamesnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-gamesnd.Tpo" "$(DEPDIR)/fs2-gamesnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-gamesnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/gamesnd.cpp' object='fs2-gamesnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-gamesnd.Po' tmpdepfile='$(DEPDIR)/fs2-gamesnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-gamesnd.obj `if test -f 'gamesnd/gamesnd.cpp'; then $(CYGPATH_W) 'gamesnd/gamesnd.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/gamesnd.cpp'; fi`

fs2-objectsnd.o: object/objectsnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objectsnd.o -MD -MP -MF "$(DEPDIR)/fs2-objectsnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objectsnd.o `test -f 'object/objectsnd.cpp' || echo '$(srcdir)/'`object/objectsnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objectsnd.Tpo" "$(DEPDIR)/fs2-objectsnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objectsnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsnd.cpp' object='fs2-objectsnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objectsnd.Po' tmpdepfile='$(DEPDIR)/fs2-objectsnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objectsnd.o `test -f 'object/objectsnd.cpp' || echo '$(srcdir)/'`object/objectsnd.cpp

fs2-objectsnd.obj: object/objectsnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-objectsnd.obj -MD -MP -MF "$(DEPDIR)/fs2-objectsnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-objectsnd.obj `if test -f 'object/objectsnd.cpp'; then $(CYGPATH_W) 'object/objectsnd.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-objectsnd.Tpo" "$(DEPDIR)/fs2-objectsnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-objectsnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsnd.cpp' object='fs2-objectsnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-objectsnd.Po' tmpdepfile='$(DEPDIR)/fs2-objectsnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-objectsnd.obj `if test -f 'object/objectsnd.cpp'; then $(CYGPATH_W) 'object/objectsnd.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsnd.cpp'; fi`

fs2-acm.o: sound/acm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-acm.o -MD -MP -MF "$(DEPDIR)/fs2-acm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-acm.o `test -f 'sound/acm.cpp' || echo '$(srcdir)/'`sound/acm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-acm.Tpo" "$(DEPDIR)/fs2-acm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-acm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/acm.cpp' object='fs2-acm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-acm.Po' tmpdepfile='$(DEPDIR)/fs2-acm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-acm.o `test -f 'sound/acm.cpp' || echo '$(srcdir)/'`sound/acm.cpp

fs2-acm.obj: sound/acm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-acm.obj -MD -MP -MF "$(DEPDIR)/fs2-acm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-acm.obj `if test -f 'sound/acm.cpp'; then $(CYGPATH_W) 'sound/acm.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/acm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-acm.Tpo" "$(DEPDIR)/fs2-acm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-acm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/acm.cpp' object='fs2-acm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-acm.Po' tmpdepfile='$(DEPDIR)/fs2-acm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-acm.obj `if test -f 'sound/acm.cpp'; then $(CYGPATH_W) 'sound/acm.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/acm.cpp'; fi`

fs2-audiostr.o: sound/audiostr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-audiostr.o -MD -MP -MF "$(DEPDIR)/fs2-audiostr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-audiostr.o `test -f 'sound/audiostr.cpp' || echo '$(srcdir)/'`sound/audiostr.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-audiostr.Tpo" "$(DEPDIR)/fs2-audiostr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-audiostr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/audiostr.cpp' object='fs2-audiostr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-audiostr.Po' tmpdepfile='$(DEPDIR)/fs2-audiostr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-audiostr.o `test -f 'sound/audiostr.cpp' || echo '$(srcdir)/'`sound/audiostr.cpp

fs2-audiostr.obj: sound/audiostr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-audiostr.obj -MD -MP -MF "$(DEPDIR)/fs2-audiostr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-audiostr.obj `if test -f 'sound/audiostr.cpp'; then $(CYGPATH_W) 'sound/audiostr.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/audiostr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-audiostr.Tpo" "$(DEPDIR)/fs2-audiostr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-audiostr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/audiostr.cpp' object='fs2-audiostr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-audiostr.Po' tmpdepfile='$(DEPDIR)/fs2-audiostr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-audiostr.obj `if test -f 'sound/audiostr.cpp'; then $(CYGPATH_W) 'sound/audiostr.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/audiostr.cpp'; fi`

fs2-ds.o: sound/ds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ds.o -MD -MP -MF "$(DEPDIR)/fs2-ds.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ds.o `test -f 'sound/ds.cpp' || echo '$(srcdir)/'`sound/ds.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ds.Tpo" "$(DEPDIR)/fs2-ds.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ds.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds.cpp' object='fs2-ds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ds.Po' tmpdepfile='$(DEPDIR)/fs2-ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ds.o `test -f 'sound/ds.cpp' || echo '$(srcdir)/'`sound/ds.cpp

fs2-ds.obj: sound/ds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ds.obj -MD -MP -MF "$(DEPDIR)/fs2-ds.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ds.obj `if test -f 'sound/ds.cpp'; then $(CYGPATH_W) 'sound/ds.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ds.Tpo" "$(DEPDIR)/fs2-ds.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ds.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds.cpp' object='fs2-ds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ds.Po' tmpdepfile='$(DEPDIR)/fs2-ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ds.obj `if test -f 'sound/ds.cpp'; then $(CYGPATH_W) 'sound/ds.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds.cpp'; fi`

fs2-ds3d.o: sound/ds3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ds3d.o -MD -MP -MF "$(DEPDIR)/fs2-ds3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ds3d.o `test -f 'sound/ds3d.cpp' || echo '$(srcdir)/'`sound/ds3d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ds3d.Tpo" "$(DEPDIR)/fs2-ds3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ds3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds3d.cpp' object='fs2-ds3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ds3d.Po' tmpdepfile='$(DEPDIR)/fs2-ds3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ds3d.o `test -f 'sound/ds3d.cpp' || echo '$(srcdir)/'`sound/ds3d.cpp

fs2-ds3d.obj: sound/ds3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ds3d.obj -MD -MP -MF "$(DEPDIR)/fs2-ds3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ds3d.obj `if test -f 'sound/ds3d.cpp'; then $(CYGPATH_W) 'sound/ds3d.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ds3d.Tpo" "$(DEPDIR)/fs2-ds3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ds3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds3d.cpp' object='fs2-ds3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ds3d.Po' tmpdepfile='$(DEPDIR)/fs2-ds3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ds3d.obj `if test -f 'sound/ds3d.cpp'; then $(CYGPATH_W) 'sound/ds3d.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds3d.cpp'; fi`

fs2-dscap.o: sound/dscap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-dscap.o -MD -MP -MF "$(DEPDIR)/fs2-dscap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-dscap.o `test -f 'sound/dscap.cpp' || echo '$(srcdir)/'`sound/dscap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-dscap.Tpo" "$(DEPDIR)/fs2-dscap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-dscap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/dscap.cpp' object='fs2-dscap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-dscap.Po' tmpdepfile='$(DEPDIR)/fs2-dscap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-dscap.o `test -f 'sound/dscap.cpp' || echo '$(srcdir)/'`sound/dscap.cpp

fs2-dscap.obj: sound/dscap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-dscap.obj -MD -MP -MF "$(DEPDIR)/fs2-dscap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-dscap.obj `if test -f 'sound/dscap.cpp'; then $(CYGPATH_W) 'sound/dscap.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/dscap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-dscap.Tpo" "$(DEPDIR)/fs2-dscap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-dscap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/dscap.cpp' object='fs2-dscap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-dscap.Po' tmpdepfile='$(DEPDIR)/fs2-dscap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-dscap.obj `if test -f 'sound/dscap.cpp'; then $(CYGPATH_W) 'sound/dscap.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/dscap.cpp'; fi`

fs2-midifile.o: sound/midifile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-midifile.o -MD -MP -MF "$(DEPDIR)/fs2-midifile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-midifile.o `test -f 'sound/midifile.cpp' || echo '$(srcdir)/'`sound/midifile.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-midifile.Tpo" "$(DEPDIR)/fs2-midifile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-midifile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/midifile.cpp' object='fs2-midifile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-midifile.Po' tmpdepfile='$(DEPDIR)/fs2-midifile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-midifile.o `test -f 'sound/midifile.cpp' || echo '$(srcdir)/'`sound/midifile.cpp

fs2-midifile.obj: sound/midifile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-midifile.obj -MD -MP -MF "$(DEPDIR)/fs2-midifile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-midifile.obj `if test -f 'sound/midifile.cpp'; then $(CYGPATH_W) 'sound/midifile.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/midifile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-midifile.Tpo" "$(DEPDIR)/fs2-midifile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-midifile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/midifile.cpp' object='fs2-midifile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-midifile.Po' tmpdepfile='$(DEPDIR)/fs2-midifile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-midifile.obj `if test -f 'sound/midifile.cpp'; then $(CYGPATH_W) 'sound/midifile.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/midifile.cpp'; fi`

fs2-rbaudio.o: sound/rbaudio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rbaudio.o -MD -MP -MF "$(DEPDIR)/fs2-rbaudio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rbaudio.o `test -f 'sound/rbaudio.cpp' || echo '$(srcdir)/'`sound/rbaudio.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rbaudio.Tpo" "$(DEPDIR)/fs2-rbaudio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rbaudio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rbaudio.cpp' object='fs2-rbaudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rbaudio.Po' tmpdepfile='$(DEPDIR)/fs2-rbaudio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rbaudio.o `test -f 'sound/rbaudio.cpp' || echo '$(srcdir)/'`sound/rbaudio.cpp

fs2-rbaudio.obj: sound/rbaudio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rbaudio.obj -MD -MP -MF "$(DEPDIR)/fs2-rbaudio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rbaudio.obj `if test -f 'sound/rbaudio.cpp'; then $(CYGPATH_W) 'sound/rbaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rbaudio.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rbaudio.Tpo" "$(DEPDIR)/fs2-rbaudio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rbaudio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rbaudio.cpp' object='fs2-rbaudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rbaudio.Po' tmpdepfile='$(DEPDIR)/fs2-rbaudio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rbaudio.obj `if test -f 'sound/rbaudio.cpp'; then $(CYGPATH_W) 'sound/rbaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rbaudio.cpp'; fi`

fs2-rtvoice.o: sound/rtvoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rtvoice.o -MD -MP -MF "$(DEPDIR)/fs2-rtvoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rtvoice.o `test -f 'sound/rtvoice.cpp' || echo '$(srcdir)/'`sound/rtvoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rtvoice.Tpo" "$(DEPDIR)/fs2-rtvoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rtvoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rtvoice.cpp' object='fs2-rtvoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rtvoice.Po' tmpdepfile='$(DEPDIR)/fs2-rtvoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rtvoice.o `test -f 'sound/rtvoice.cpp' || echo '$(srcdir)/'`sound/rtvoice.cpp

fs2-rtvoice.obj: sound/rtvoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-rtvoice.obj -MD -MP -MF "$(DEPDIR)/fs2-rtvoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-rtvoice.obj `if test -f 'sound/rtvoice.cpp'; then $(CYGPATH_W) 'sound/rtvoice.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rtvoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-rtvoice.Tpo" "$(DEPDIR)/fs2-rtvoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-rtvoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rtvoice.cpp' object='fs2-rtvoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-rtvoice.Po' tmpdepfile='$(DEPDIR)/fs2-rtvoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-rtvoice.obj `if test -f 'sound/rtvoice.cpp'; then $(CYGPATH_W) 'sound/rtvoice.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rtvoice.cpp'; fi`

fs2-sound.o: sound/sound.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-sound.o -MD -MP -MF "$(DEPDIR)/fs2-sound.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-sound.o `test -f 'sound/sound.cpp' || echo '$(srcdir)/'`sound/sound.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-sound.Tpo" "$(DEPDIR)/fs2-sound.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-sound.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/sound.cpp' object='fs2-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-sound.Po' tmpdepfile='$(DEPDIR)/fs2-sound.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-sound.o `test -f 'sound/sound.cpp' || echo '$(srcdir)/'`sound/sound.cpp

fs2-sound.obj: sound/sound.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-sound.obj -MD -MP -MF "$(DEPDIR)/fs2-sound.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-sound.obj `if test -f 'sound/sound.cpp'; then $(CYGPATH_W) 'sound/sound.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/sound.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-sound.Tpo" "$(DEPDIR)/fs2-sound.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-sound.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/sound.cpp' object='fs2-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-sound.Po' tmpdepfile='$(DEPDIR)/fs2-sound.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-sound.obj `if test -f 'sound/sound.cpp'; then $(CYGPATH_W) 'sound/sound.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/sound.cpp'; fi`

fs2-winmidi.o: sound/winmidi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-winmidi.o -MD -MP -MF "$(DEPDIR)/fs2-winmidi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-winmidi.o `test -f 'sound/winmidi.cpp' || echo '$(srcdir)/'`sound/winmidi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-winmidi.Tpo" "$(DEPDIR)/fs2-winmidi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-winmidi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi.cpp' object='fs2-winmidi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-winmidi.Po' tmpdepfile='$(DEPDIR)/fs2-winmidi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-winmidi.o `test -f 'sound/winmidi.cpp' || echo '$(srcdir)/'`sound/winmidi.cpp

fs2-winmidi.obj: sound/winmidi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-winmidi.obj -MD -MP -MF "$(DEPDIR)/fs2-winmidi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-winmidi.obj `if test -f 'sound/winmidi.cpp'; then $(CYGPATH_W) 'sound/winmidi.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-winmidi.Tpo" "$(DEPDIR)/fs2-winmidi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-winmidi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi.cpp' object='fs2-winmidi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-winmidi.Po' tmpdepfile='$(DEPDIR)/fs2-winmidi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-winmidi.obj `if test -f 'sound/winmidi.cpp'; then $(CYGPATH_W) 'sound/winmidi.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi.cpp'; fi`

fs2-winmidi_base.o: sound/winmidi_base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-winmidi_base.o -MD -MP -MF "$(DEPDIR)/fs2-winmidi_base.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-winmidi_base.o `test -f 'sound/winmidi_base.cpp' || echo '$(srcdir)/'`sound/winmidi_base.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-winmidi_base.Tpo" "$(DEPDIR)/fs2-winmidi_base.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-winmidi_base.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi_base.cpp' object='fs2-winmidi_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-winmidi_base.Po' tmpdepfile='$(DEPDIR)/fs2-winmidi_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-winmidi_base.o `test -f 'sound/winmidi_base.cpp' || echo '$(srcdir)/'`sound/winmidi_base.cpp

fs2-winmidi_base.obj: sound/winmidi_base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-winmidi_base.obj -MD -MP -MF "$(DEPDIR)/fs2-winmidi_base.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-winmidi_base.obj `if test -f 'sound/winmidi_base.cpp'; then $(CYGPATH_W) 'sound/winmidi_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi_base.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-winmidi_base.Tpo" "$(DEPDIR)/fs2-winmidi_base.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-winmidi_base.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi_base.cpp' object='fs2-winmidi_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-winmidi_base.Po' tmpdepfile='$(DEPDIR)/fs2-winmidi_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-winmidi_base.obj `if test -f 'sound/winmidi_base.cpp'; then $(CYGPATH_W) 'sound/winmidi_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi_base.cpp'; fi`

fs2-codec1.o: vcodec/codec1.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-codec1.o -MD -MP -MF "$(DEPDIR)/fs2-codec1.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-codec1.o `test -f 'vcodec/codec1.cpp' || echo '$(srcdir)/'`vcodec/codec1.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-codec1.Tpo" "$(DEPDIR)/fs2-codec1.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-codec1.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='vcodec/codec1.cpp' object='fs2-codec1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-codec1.Po' tmpdepfile='$(DEPDIR)/fs2-codec1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-codec1.o `test -f 'vcodec/codec1.cpp' || echo '$(srcdir)/'`vcodec/codec1.cpp

fs2-codec1.obj: vcodec/codec1.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-codec1.obj -MD -MP -MF "$(DEPDIR)/fs2-codec1.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-codec1.obj `if test -f 'vcodec/codec1.cpp'; then $(CYGPATH_W) 'vcodec/codec1.cpp'; else $(CYGPATH_W) '$(srcdir)/vcodec/codec1.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-codec1.Tpo" "$(DEPDIR)/fs2-codec1.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-codec1.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='vcodec/codec1.cpp' object='fs2-codec1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-codec1.Po' tmpdepfile='$(DEPDIR)/fs2-codec1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-codec1.obj `if test -f 'vcodec/codec1.cpp'; then $(CYGPATH_W) 'vcodec/codec1.cpp'; else $(CYGPATH_W) '$(srcdir)/vcodec/codec1.cpp'; fi`

fs2-grsoft.o: graphics/grsoft.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grsoft.o -MD -MP -MF "$(DEPDIR)/fs2-grsoft.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grsoft.o `test -f 'graphics/grsoft.cpp' || echo '$(srcdir)/'`graphics/grsoft.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grsoft.Tpo" "$(DEPDIR)/fs2-grsoft.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grsoft.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grsoft.cpp' object='fs2-grsoft.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grsoft.Po' tmpdepfile='$(DEPDIR)/fs2-grsoft.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grsoft.o `test -f 'graphics/grsoft.cpp' || echo '$(srcdir)/'`graphics/grsoft.cpp

fs2-grsoft.obj: graphics/grsoft.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grsoft.obj -MD -MP -MF "$(DEPDIR)/fs2-grsoft.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grsoft.obj `if test -f 'graphics/grsoft.cpp'; then $(CYGPATH_W) 'graphics/grsoft.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grsoft.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grsoft.Tpo" "$(DEPDIR)/fs2-grsoft.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grsoft.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grsoft.cpp' object='fs2-grsoft.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grsoft.Po' tmpdepfile='$(DEPDIR)/fs2-grsoft.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grsoft.obj `if test -f 'graphics/grsoft.cpp'; then $(CYGPATH_W) 'graphics/grsoft.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grsoft.cpp'; fi`

fs2-tmapper.o: graphics/tmapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-tmapper.o -MD -MP -MF "$(DEPDIR)/fs2-tmapper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-tmapper.o `test -f 'graphics/tmapper.cpp' || echo '$(srcdir)/'`graphics/tmapper.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-tmapper.Tpo" "$(DEPDIR)/fs2-tmapper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-tmapper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/tmapper.cpp' object='fs2-tmapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-tmapper.Po' tmpdepfile='$(DEPDIR)/fs2-tmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-tmapper.o `test -f 'graphics/tmapper.cpp' || echo '$(srcdir)/'`graphics/tmapper.cpp

fs2-tmapper.obj: graphics/tmapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-tmapper.obj -MD -MP -MF "$(DEPDIR)/fs2-tmapper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-tmapper.obj `if test -f 'graphics/tmapper.cpp'; then $(CYGPATH_W) 'graphics/tmapper.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/tmapper.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-tmapper.Tpo" "$(DEPDIR)/fs2-tmapper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-tmapper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/tmapper.cpp' object='fs2-tmapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-tmapper.Po' tmpdepfile='$(DEPDIR)/fs2-tmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-tmapper.obj `if test -f 'graphics/tmapper.cpp'; then $(CYGPATH_W) 'graphics/tmapper.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/tmapper.cpp'; fi`

fs2-ddsutils.o: ddsutils/ddsutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ddsutils.o -MD -MP -MF "$(DEPDIR)/fs2-ddsutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ddsutils.o `test -f 'ddsutils/ddsutils.cpp' || echo '$(srcdir)/'`ddsutils/ddsutils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ddsutils.Tpo" "$(DEPDIR)/fs2-ddsutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ddsutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ddsutils/ddsutils.cpp' object='fs2-ddsutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ddsutils.Po' tmpdepfile='$(DEPDIR)/fs2-ddsutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ddsutils.o `test -f 'ddsutils/ddsutils.cpp' || echo '$(srcdir)/'`ddsutils/ddsutils.cpp

fs2-ddsutils.obj: ddsutils/ddsutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-ddsutils.obj -MD -MP -MF "$(DEPDIR)/fs2-ddsutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-ddsutils.obj `if test -f 'ddsutils/ddsutils.cpp'; then $(CYGPATH_W) 'ddsutils/ddsutils.cpp'; else $(CYGPATH_W) '$(srcdir)/ddsutils/ddsutils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-ddsutils.Tpo" "$(DEPDIR)/fs2-ddsutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-ddsutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ddsutils/ddsutils.cpp' object='fs2-ddsutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-ddsutils.Po' tmpdepfile='$(DEPDIR)/fs2-ddsutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-ddsutils.obj `if test -f 'ddsutils/ddsutils.cpp'; then $(CYGPATH_W) 'ddsutils/ddsutils.cpp'; else $(CYGPATH_W) '$(srcdir)/ddsutils/ddsutils.cpp'; fi`

fs2-windebug.o: globalincs/windebug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-windebug.o -MD -MP -MF "$(DEPDIR)/fs2-windebug.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-windebug.o `test -f 'globalincs/windebug.cpp' || echo '$(srcdir)/'`globalincs/windebug.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-windebug.Tpo" "$(DEPDIR)/fs2-windebug.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-windebug.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/windebug.cpp' object='fs2-windebug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-windebug.Po' tmpdepfile='$(DEPDIR)/fs2-windebug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-windebug.o `test -f 'globalincs/windebug.cpp' || echo '$(srcdir)/'`globalincs/windebug.cpp

fs2-windebug.obj: globalincs/windebug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-windebug.obj -MD -MP -MF "$(DEPDIR)/fs2-windebug.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-windebug.obj `if test -f 'globalincs/windebug.cpp'; then $(CYGPATH_W) 'globalincs/windebug.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/windebug.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-windebug.Tpo" "$(DEPDIR)/fs2-windebug.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-windebug.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/windebug.cpp' object='fs2-windebug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-windebug.Po' tmpdepfile='$(DEPDIR)/fs2-windebug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-windebug.obj `if test -f 'globalincs/windebug.cpp'; then $(CYGPATH_W) 'globalincs/windebug.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/windebug.cpp'; fi`

fs2-glide.o: glide/glide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-glide.o -MD -MP -MF "$(DEPDIR)/fs2-glide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-glide.o `test -f 'glide/glide.cpp' || echo '$(srcdir)/'`glide/glide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-glide.Tpo" "$(DEPDIR)/fs2-glide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-glide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='glide/glide.cpp' object='fs2-glide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-glide.Po' tmpdepfile='$(DEPDIR)/fs2-glide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-glide.o `test -f 'glide/glide.cpp' || echo '$(srcdir)/'`glide/glide.cpp

fs2-glide.obj: glide/glide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-glide.obj -MD -MP -MF "$(DEPDIR)/fs2-glide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-glide.obj `if test -f 'glide/glide.cpp'; then $(CYGPATH_W) 'glide/glide.cpp'; else $(CYGPATH_W) '$(srcdir)/glide/glide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-glide.Tpo" "$(DEPDIR)/fs2-glide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-glide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='glide/glide.cpp' object='fs2-glide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-glide.Po' tmpdepfile='$(DEPDIR)/fs2-glide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-glide.obj `if test -f 'glide/glide.cpp'; then $(CYGPATH_W) 'glide/glide.cpp'; else $(CYGPATH_W) '$(srcdir)/glide/glide.cpp'; fi`

fs2-grd3d.o: graphics/grd3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3d.o -MD -MP -MF "$(DEPDIR)/fs2-grd3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3d.o `test -f 'graphics/grd3d.cpp' || echo '$(srcdir)/'`graphics/grd3d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3d.Tpo" "$(DEPDIR)/fs2-grd3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3d.cpp' object='fs2-grd3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3d.Po' tmpdepfile='$(DEPDIR)/fs2-grd3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3d.o `test -f 'graphics/grd3d.cpp' || echo '$(srcdir)/'`graphics/grd3d.cpp

fs2-grd3d.obj: graphics/grd3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3d.obj -MD -MP -MF "$(DEPDIR)/fs2-grd3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3d.obj `if test -f 'graphics/grd3d.cpp'; then $(CYGPATH_W) 'graphics/grd3d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3d.Tpo" "$(DEPDIR)/fs2-grd3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3d.cpp' object='fs2-grd3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3d.Po' tmpdepfile='$(DEPDIR)/fs2-grd3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3d.obj `if test -f 'graphics/grd3d.cpp'; then $(CYGPATH_W) 'graphics/grd3d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3d.cpp'; fi`

fs2-grd3drender.o: graphics/grd3drender.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3drender.o -MD -MP -MF "$(DEPDIR)/fs2-grd3drender.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3drender.o `test -f 'graphics/grd3drender.cpp' || echo '$(srcdir)/'`graphics/grd3drender.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3drender.Tpo" "$(DEPDIR)/fs2-grd3drender.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3drender.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3drender.cpp' object='fs2-grd3drender.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3drender.Po' tmpdepfile='$(DEPDIR)/fs2-grd3drender.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3drender.o `test -f 'graphics/grd3drender.cpp' || echo '$(srcdir)/'`graphics/grd3drender.cpp

fs2-grd3drender.obj: graphics/grd3drender.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3drender.obj -MD -MP -MF "$(DEPDIR)/fs2-grd3drender.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3drender.obj `if test -f 'graphics/grd3drender.cpp'; then $(CYGPATH_W) 'graphics/grd3drender.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3drender.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3drender.Tpo" "$(DEPDIR)/fs2-grd3drender.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3drender.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3drender.cpp' object='fs2-grd3drender.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3drender.Po' tmpdepfile='$(DEPDIR)/fs2-grd3drender.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3drender.obj `if test -f 'graphics/grd3drender.cpp'; then $(CYGPATH_W) 'graphics/grd3drender.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3drender.cpp'; fi`

fs2-grd3dtexture.o: graphics/grd3dtexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3dtexture.o -MD -MP -MF "$(DEPDIR)/fs2-grd3dtexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3dtexture.o `test -f 'graphics/grd3dtexture.cpp' || echo '$(srcdir)/'`graphics/grd3dtexture.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3dtexture.Tpo" "$(DEPDIR)/fs2-grd3dtexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3dtexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3dtexture.cpp' object='fs2-grd3dtexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3dtexture.Po' tmpdepfile='$(DEPDIR)/fs2-grd3dtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3dtexture.o `test -f 'graphics/grd3dtexture.cpp' || echo '$(srcdir)/'`graphics/grd3dtexture.cpp

fs2-grd3dtexture.obj: graphics/grd3dtexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grd3dtexture.obj -MD -MP -MF "$(DEPDIR)/fs2-grd3dtexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grd3dtexture.obj `if test -f 'graphics/grd3dtexture.cpp'; then $(CYGPATH_W) 'graphics/grd3dtexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3dtexture.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grd3dtexture.Tpo" "$(DEPDIR)/fs2-grd3dtexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grd3dtexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3dtexture.cpp' object='fs2-grd3dtexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grd3dtexture.Po' tmpdepfile='$(DEPDIR)/fs2-grd3dtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grd3dtexture.obj `if test -f 'graphics/grd3dtexture.cpp'; then $(CYGPATH_W) 'graphics/grd3dtexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3dtexture.cpp'; fi`

fs2-grdirectdraw.o: graphics/grdirectdraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grdirectdraw.o -MD -MP -MF "$(DEPDIR)/fs2-grdirectdraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grdirectdraw.o `test -f 'graphics/grdirectdraw.cpp' || echo '$(srcdir)/'`graphics/grdirectdraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grdirectdraw.Tpo" "$(DEPDIR)/fs2-grdirectdraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grdirectdraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grdirectdraw.cpp' object='fs2-grdirectdraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grdirectdraw.Po' tmpdepfile='$(DEPDIR)/fs2-grdirectdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grdirectdraw.o `test -f 'graphics/grdirectdraw.cpp' || echo '$(srcdir)/'`graphics/grdirectdraw.cpp

fs2-grdirectdraw.obj: graphics/grdirectdraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grdirectdraw.obj -MD -MP -MF "$(DEPDIR)/fs2-grdirectdraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grdirectdraw.obj `if test -f 'graphics/grdirectdraw.cpp'; then $(CYGPATH_W) 'graphics/grdirectdraw.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grdirectdraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grdirectdraw.Tpo" "$(DEPDIR)/fs2-grdirectdraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grdirectdraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grdirectdraw.cpp' object='fs2-grdirectdraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grdirectdraw.Po' tmpdepfile='$(DEPDIR)/fs2-grdirectdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grdirectdraw.obj `if test -f 'graphics/grdirectdraw.cpp'; then $(CYGPATH_W) 'graphics/grdirectdraw.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grdirectdraw.cpp'; fi`

fs2-grglide.o: graphics/grglide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grglide.o -MD -MP -MF "$(DEPDIR)/fs2-grglide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grglide.o `test -f 'graphics/grglide.cpp' || echo '$(srcdir)/'`graphics/grglide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grglide.Tpo" "$(DEPDIR)/fs2-grglide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grglide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglide.cpp' object='fs2-grglide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grglide.Po' tmpdepfile='$(DEPDIR)/fs2-grglide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grglide.o `test -f 'graphics/grglide.cpp' || echo '$(srcdir)/'`graphics/grglide.cpp

fs2-grglide.obj: graphics/grglide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grglide.obj -MD -MP -MF "$(DEPDIR)/fs2-grglide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grglide.obj `if test -f 'graphics/grglide.cpp'; then $(CYGPATH_W) 'graphics/grglide.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grglide.Tpo" "$(DEPDIR)/fs2-grglide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grglide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglide.cpp' object='fs2-grglide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grglide.Po' tmpdepfile='$(DEPDIR)/fs2-grglide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grglide.obj `if test -f 'graphics/grglide.cpp'; then $(CYGPATH_W) 'graphics/grglide.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglide.cpp'; fi`

fs2-grglidetexture.o: graphics/grglidetexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grglidetexture.o -MD -MP -MF "$(DEPDIR)/fs2-grglidetexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grglidetexture.o `test -f 'graphics/grglidetexture.cpp' || echo '$(srcdir)/'`graphics/grglidetexture.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grglidetexture.Tpo" "$(DEPDIR)/fs2-grglidetexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grglidetexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglidetexture.cpp' object='fs2-grglidetexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grglidetexture.Po' tmpdepfile='$(DEPDIR)/fs2-grglidetexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grglidetexture.o `test -f 'graphics/grglidetexture.cpp' || echo '$(srcdir)/'`graphics/grglidetexture.cpp

fs2-grglidetexture.obj: graphics/grglidetexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-grglidetexture.obj -MD -MP -MF "$(DEPDIR)/fs2-grglidetexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-grglidetexture.obj `if test -f 'graphics/grglidetexture.cpp'; then $(CYGPATH_W) 'graphics/grglidetexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglidetexture.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-grglidetexture.Tpo" "$(DEPDIR)/fs2-grglidetexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-grglidetexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglidetexture.cpp' object='fs2-grglidetexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-grglidetexture.Po' tmpdepfile='$(DEPDIR)/fs2-grglidetexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-grglidetexture.obj `if test -f 'graphics/grglidetexture.cpp'; then $(CYGPATH_W) 'graphics/grglidetexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglidetexture.cpp'; fi`

fs2-stand_gui.o: network/stand_gui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-stand_gui.o -MD -MP -MF "$(DEPDIR)/fs2-stand_gui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-stand_gui.o `test -f 'network/stand_gui.cpp' || echo '$(srcdir)/'`network/stand_gui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-stand_gui.Tpo" "$(DEPDIR)/fs2-stand_gui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-stand_gui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/stand_gui.cpp' object='fs2-stand_gui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-stand_gui.Po' tmpdepfile='$(DEPDIR)/fs2-stand_gui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-stand_gui.o `test -f 'network/stand_gui.cpp' || echo '$(srcdir)/'`network/stand_gui.cpp

fs2-stand_gui.obj: network/stand_gui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-stand_gui.obj -MD -MP -MF "$(DEPDIR)/fs2-stand_gui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-stand_gui.obj `if test -f 'network/stand_gui.cpp'; then $(CYGPATH_W) 'network/stand_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/stand_gui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-stand_gui.Tpo" "$(DEPDIR)/fs2-stand_gui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-stand_gui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/stand_gui.cpp' object='fs2-stand_gui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-stand_gui.Po' tmpdepfile='$(DEPDIR)/fs2-stand_gui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-stand_gui.obj `if test -f 'network/stand_gui.cpp'; then $(CYGPATH_W) 'network/stand_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/stand_gui.cpp'; fi`

fs2-osapi.o: osapi/osapi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osapi.o -MD -MP -MF "$(DEPDIR)/fs2-osapi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osapi.o `test -f 'osapi/osapi.cpp' || echo '$(srcdir)/'`osapi/osapi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osapi.Tpo" "$(DEPDIR)/fs2-osapi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osapi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi.cpp' object='fs2-osapi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osapi.Po' tmpdepfile='$(DEPDIR)/fs2-osapi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osapi.o `test -f 'osapi/osapi.cpp' || echo '$(srcdir)/'`osapi/osapi.cpp

fs2-osapi.obj: osapi/osapi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osapi.obj -MD -MP -MF "$(DEPDIR)/fs2-osapi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osapi.obj `if test -f 'osapi/osapi.cpp'; then $(CYGPATH_W) 'osapi/osapi.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osapi.Tpo" "$(DEPDIR)/fs2-osapi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osapi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi.cpp' object='fs2-osapi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osapi.Po' tmpdepfile='$(DEPDIR)/fs2-osapi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osapi.obj `if test -f 'osapi/osapi.cpp'; then $(CYGPATH_W) 'osapi/osapi.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi.cpp'; fi`

fs2-osregistry.o: osapi/osregistry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osregistry.o -MD -MP -MF "$(DEPDIR)/fs2-osregistry.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osregistry.o `test -f 'osapi/osregistry.cpp' || echo '$(srcdir)/'`osapi/osregistry.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osregistry.Tpo" "$(DEPDIR)/fs2-osregistry.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osregistry.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry.cpp' object='fs2-osregistry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osregistry.Po' tmpdepfile='$(DEPDIR)/fs2-osregistry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osregistry.o `test -f 'osapi/osregistry.cpp' || echo '$(srcdir)/'`osapi/osregistry.cpp

fs2-osregistry.obj: osapi/osregistry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osregistry.obj -MD -MP -MF "$(DEPDIR)/fs2-osregistry.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osregistry.obj `if test -f 'osapi/osregistry.cpp'; then $(CYGPATH_W) 'osapi/osregistry.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osregistry.Tpo" "$(DEPDIR)/fs2-osregistry.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osregistry.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry.cpp' object='fs2-osregistry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osregistry.Po' tmpdepfile='$(DEPDIR)/fs2-osregistry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osregistry.obj `if test -f 'osapi/osregistry.cpp'; then $(CYGPATH_W) 'osapi/osregistry.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry.cpp'; fi`

fs2-outwnd.o: osapi/outwnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-outwnd.o -MD -MP -MF "$(DEPDIR)/fs2-outwnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-outwnd.o `test -f 'osapi/outwnd.cpp' || echo '$(srcdir)/'`osapi/outwnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-outwnd.Tpo" "$(DEPDIR)/fs2-outwnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-outwnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd.cpp' object='fs2-outwnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-outwnd.Po' tmpdepfile='$(DEPDIR)/fs2-outwnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-outwnd.o `test -f 'osapi/outwnd.cpp' || echo '$(srcdir)/'`osapi/outwnd.cpp

fs2-outwnd.obj: osapi/outwnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-outwnd.obj -MD -MP -MF "$(DEPDIR)/fs2-outwnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-outwnd.obj `if test -f 'osapi/outwnd.cpp'; then $(CYGPATH_W) 'osapi/outwnd.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-outwnd.Tpo" "$(DEPDIR)/fs2-outwnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-outwnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd.cpp' object='fs2-outwnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-outwnd.Po' tmpdepfile='$(DEPDIR)/fs2-outwnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-outwnd.obj `if test -f 'osapi/outwnd.cpp'; then $(CYGPATH_W) 'osapi/outwnd.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd.cpp'; fi`

fs2-xmouse.o: io/xmouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-xmouse.o -MD -MP -MF "$(DEPDIR)/fs2-xmouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-xmouse.o `test -f 'io/xmouse.cpp' || echo '$(srcdir)/'`io/xmouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-xmouse.Tpo" "$(DEPDIR)/fs2-xmouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-xmouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/xmouse.cpp' object='fs2-xmouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-xmouse.Po' tmpdepfile='$(DEPDIR)/fs2-xmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-xmouse.o `test -f 'io/xmouse.cpp' || echo '$(srcdir)/'`io/xmouse.cpp

fs2-xmouse.obj: io/xmouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-xmouse.obj -MD -MP -MF "$(DEPDIR)/fs2-xmouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-xmouse.obj `if test -f 'io/xmouse.cpp'; then $(CYGPATH_W) 'io/xmouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/xmouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-xmouse.Tpo" "$(DEPDIR)/fs2-xmouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-xmouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/xmouse.cpp' object='fs2-xmouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-xmouse.Po' tmpdepfile='$(DEPDIR)/fs2-xmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-xmouse.obj `if test -f 'io/xmouse.cpp'; then $(CYGPATH_W) 'io/xmouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/xmouse.cpp'; fi`

fs2-osapi_unix.o: osapi/osapi_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osapi_unix.o -MD -MP -MF "$(DEPDIR)/fs2-osapi_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osapi_unix.o `test -f 'osapi/osapi_unix.cpp' || echo '$(srcdir)/'`osapi/osapi_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osapi_unix.Tpo" "$(DEPDIR)/fs2-osapi_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osapi_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi_unix.cpp' object='fs2-osapi_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osapi_unix.Po' tmpdepfile='$(DEPDIR)/fs2-osapi_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osapi_unix.o `test -f 'osapi/osapi_unix.cpp' || echo '$(srcdir)/'`osapi/osapi_unix.cpp

fs2-osapi_unix.obj: osapi/osapi_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osapi_unix.obj -MD -MP -MF "$(DEPDIR)/fs2-osapi_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osapi_unix.obj `if test -f 'osapi/osapi_unix.cpp'; then $(CYGPATH_W) 'osapi/osapi_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osapi_unix.Tpo" "$(DEPDIR)/fs2-osapi_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osapi_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi_unix.cpp' object='fs2-osapi_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osapi_unix.Po' tmpdepfile='$(DEPDIR)/fs2-osapi_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osapi_unix.obj `if test -f 'osapi/osapi_unix.cpp'; then $(CYGPATH_W) 'osapi/osapi_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi_unix.cpp'; fi`

fs2-osregistry_unix.o: osapi/osregistry_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osregistry_unix.o -MD -MP -MF "$(DEPDIR)/fs2-osregistry_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osregistry_unix.o `test -f 'osapi/osregistry_unix.cpp' || echo '$(srcdir)/'`osapi/osregistry_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osregistry_unix.Tpo" "$(DEPDIR)/fs2-osregistry_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osregistry_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry_unix.cpp' object='fs2-osregistry_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osregistry_unix.Po' tmpdepfile='$(DEPDIR)/fs2-osregistry_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osregistry_unix.o `test -f 'osapi/osregistry_unix.cpp' || echo '$(srcdir)/'`osapi/osregistry_unix.cpp

fs2-osregistry_unix.obj: osapi/osregistry_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-osregistry_unix.obj -MD -MP -MF "$(DEPDIR)/fs2-osregistry_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-osregistry_unix.obj `if test -f 'osapi/osregistry_unix.cpp'; then $(CYGPATH_W) 'osapi/osregistry_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-osregistry_unix.Tpo" "$(DEPDIR)/fs2-osregistry_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-osregistry_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry_unix.cpp' object='fs2-osregistry_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-osregistry_unix.Po' tmpdepfile='$(DEPDIR)/fs2-osregistry_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-osregistry_unix.obj `if test -f 'osapi/osregistry_unix.cpp'; then $(CYGPATH_W) 'osapi/osregistry_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry_unix.cpp'; fi`

fs2-outwnd_unix.o: osapi/outwnd_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-outwnd_unix.o -MD -MP -MF "$(DEPDIR)/fs2-outwnd_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-outwnd_unix.o `test -f 'osapi/outwnd_unix.cpp' || echo '$(srcdir)/'`osapi/outwnd_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-outwnd_unix.Tpo" "$(DEPDIR)/fs2-outwnd_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-outwnd_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd_unix.cpp' object='fs2-outwnd_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-outwnd_unix.Po' tmpdepfile='$(DEPDIR)/fs2-outwnd_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-outwnd_unix.o `test -f 'osapi/outwnd_unix.cpp' || echo '$(srcdir)/'`osapi/outwnd_unix.cpp

fs2-outwnd_unix.obj: osapi/outwnd_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -MT fs2-outwnd_unix.obj -MD -MP -MF "$(DEPDIR)/fs2-outwnd_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fs2-outwnd_unix.obj `if test -f 'osapi/outwnd_unix.cpp'; then $(CYGPATH_W) 'osapi/outwnd_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fs2-outwnd_unix.Tpo" "$(DEPDIR)/fs2-outwnd_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fs2-outwnd_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd_unix.cpp' object='fs2-outwnd_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fs2-outwnd_unix.Po' tmpdepfile='$(DEPDIR)/fs2-outwnd_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fs2_CXXFLAGS) $(CXXFLAGS) -c -o fs2-outwnd_unix.obj `if test -f 'osapi/outwnd_unix.cpp'; then $(CYGPATH_W) 'osapi/outwnd_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd_unix.cpp'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
