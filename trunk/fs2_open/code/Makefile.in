# Makefile.in generated by automake 1.7.2 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# code/Makefile.am for fs2_open
#
# $Id: Makefile.in,v 1.2 2003-03-11 19:00:05 penguin Exp $

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
@FS2_JOYSTICK_TRUE@am__append_1 = \
@FS2_JOYSTICK_TRUE@ io/joy.cpp \
@FS2_JOYSTICK_TRUE@ io/joy_ff.cpp \
@FS2_JOYSTICK_TRUE@ io/swff_lib.cpp

@FS2_NETWORKING_TRUE@am__append_2 = \
@FS2_NETWORKING_TRUE@ hud/hudobserver.cpp \
@FS2_NETWORKING_TRUE@ network/multi.cpp \
@FS2_NETWORKING_TRUE@ network/multimsgs.cpp \
@FS2_NETWORKING_TRUE@ network/multiteamselect.cpp \
@FS2_NETWORKING_TRUE@ network/multiui.cpp \
@FS2_NETWORKING_TRUE@ network/multiutil.cpp \
@FS2_NETWORKING_TRUE@ network/multi_campaign.cpp \
@FS2_NETWORKING_TRUE@ network/multi_data.cpp \
@FS2_NETWORKING_TRUE@ network/multi_dogfight.cpp \
@FS2_NETWORKING_TRUE@ network/multi_endgame.cpp \
@FS2_NETWORKING_TRUE@ network/multi_ingame.cpp \
@FS2_NETWORKING_TRUE@ network/multi_kick.cpp \
@FS2_NETWORKING_TRUE@ network/multi_log.cpp \
@FS2_NETWORKING_TRUE@ network/multi_obj.cpp \
@FS2_NETWORKING_TRUE@ network/multi_observer.cpp \
@FS2_NETWORKING_TRUE@ network/multi_options.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pause.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pinfo.cpp \
@FS2_NETWORKING_TRUE@ network/multi_ping.cpp \
@FS2_NETWORKING_TRUE@ network/multi_pmsg.cpp \
@FS2_NETWORKING_TRUE@ network/multi_rate.cpp \
@FS2_NETWORKING_TRUE@ network/multi_respawn.cpp \
@FS2_NETWORKING_TRUE@ network/multi_team.cpp \
@FS2_NETWORKING_TRUE@ network/multi_voice.cpp \
@FS2_NETWORKING_TRUE@ network/multi_xfer.cpp \
@FS2_NETWORKING_TRUE@ network/psnet.cpp \
@FS2_NETWORKING_TRUE@ network/psnet2.cpp \
@FS2_NETWORKING_TRUE@ menuui/optionsmenumulti.cpp \
@FS2_NETWORKING_TRUE@ missionui/chatbox.cpp

@FS2_SOUND_TRUE@am__append_3 = \
@FS2_SOUND_TRUE@ gamesnd/eventmusic.cpp \
@FS2_SOUND_TRUE@ gamesnd/gamesnd.cpp \
@FS2_SOUND_TRUE@ object/objectsnd.cpp \
@FS2_SOUND_TRUE@ sound/acm.cpp \
@FS2_SOUND_TRUE@ sound/audiostr.cpp \
@FS2_SOUND_TRUE@ sound/ds.cpp \
@FS2_SOUND_TRUE@ sound/ds3d.cpp \
@FS2_SOUND_TRUE@ sound/dscap.cpp \
@FS2_SOUND_TRUE@ sound/midifile.cpp \
@FS2_SOUND_TRUE@ sound/rbaudio.cpp \
@FS2_SOUND_TRUE@ sound/rtvoice.cpp \
@FS2_SOUND_TRUE@ sound/sound.cpp \
@FS2_SOUND_TRUE@ sound/winmidi.cpp \
@FS2_SOUND_TRUE@ sound/winmidi_base.cpp \
@FS2_SOUND_TRUE@ vcodec/codec1.cpp

@FS2_GRSOFT_TRUE@am__append_4 = \
@FS2_GRSOFT_TRUE@ graphics/grsoft.cpp \
@FS2_GRSOFT_TRUE@ graphics/tmapper.cpp

@FS2_OS_WIN32_TRUE@am__append_5 = \
@FS2_OS_WIN32_TRUE@ cutscene/movie.cpp \
@FS2_OS_WIN32_TRUE@ directx/dx8show.cpp \
@FS2_OS_WIN32_TRUE@ ddsutils/ddsutils.cpp \
@FS2_OS_WIN32_TRUE@ globalincs/windebug.cpp \
@FS2_OS_WIN32_TRUE@ glide/glide.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3d.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3drender.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grd3dtexture.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grdirectdraw.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grglide.cpp \
@FS2_OS_WIN32_TRUE@ graphics/grglidetexture.cpp \
@FS2_OS_WIN32_TRUE@ network/stand_gui.cpp \
@FS2_OS_WIN32_TRUE@ osapi/osapi.cpp \
@FS2_OS_WIN32_TRUE@ osapi/osregistry.cpp \
@FS2_OS_WIN32_TRUE@ osapi/outwnd.cpp

@FS2_OS_UNIX_TRUE@am__append_6 = \
@FS2_OS_UNIX_TRUE@ io/xmouse.cpp \
@FS2_OS_UNIX_TRUE@ osapi/osapi_unix.cpp \
@FS2_OS_UNIX_TRUE@ osapi/osregistry_unix.cpp \
@FS2_OS_UNIX_TRUE@ osapi/outwnd_unix.cpp

@FS2_OS_WIN32_TRUE@am__append_7 = \
@FS2_OS_WIN32_TRUE@ -lgdi32 -lole32 -lwsock32 -lwinmm -lmsacm32 -lopengl32 \
@FS2_OS_WIN32_TRUE@ -lcomctl32 -lstrmiids -ldxguid -lddraw -ldinput

ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DX8_INCLUDE = @DX8_INCLUDE@
DX8_LIB = @DX8_LIB@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
FS2_GRSOFT_FALSE = @FS2_GRSOFT_FALSE@
FS2_GRSOFT_TRUE = @FS2_GRSOFT_TRUE@
FS2_JOYSTICK_FALSE = @FS2_JOYSTICK_FALSE@
FS2_JOYSTICK_TRUE = @FS2_JOYSTICK_TRUE@
FS2_NETWORKING_FALSE = @FS2_NETWORKING_FALSE@
FS2_NETWORKING_TRUE = @FS2_NETWORKING_TRUE@
FS2_OS_UNIX_FALSE = @FS2_OS_UNIX_FALSE@
FS2_OS_UNIX_TRUE = @FS2_OS_UNIX_TRUE@
FS2_OS_WIN32_FALSE = @FS2_OS_WIN32_FALSE@
FS2_OS_WIN32_TRUE = @FS2_OS_WIN32_TRUE@
FS2_SOUND_FALSE = @FS2_SOUND_FALSE@
FS2_SOUND_TRUE = @FS2_SOUND_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

noinst_PROGRAMS = fs2

fs2_SOURCES = \
 anim/animplay.cpp \
 anim/packunpack.cpp \
 asteroid/asteroid.cpp \
 bmpman/bmpman.cpp \
 cfile/cfile.cpp \
 cfile/cfilearchive.cpp \
 cfile/cfilelist.cpp \
 cfile/cfilesystem.cpp \
 cmdline/cmdline.cpp \
 cmeasure/cmeasure.cpp \
 controlconfig/controlsconfig.cpp \
 controlconfig/controlsconfigcommon.cpp \
 cutscene/cutscenes.cpp \
 debris/debris.cpp \
 debugconsole/console.cpp \
 decals/decals.cpp \
 demo/demo.cpp \
 exceptionhandler/exceptionhandler.cpp \
 fireball/fireballs.cpp \
 fireball/warpineffect.cpp \
 freespace2/freespace.cpp \
 freespace2/levelpaging.cpp \
 gamehelp/contexthelp.cpp \
 gamehelp/gameplayhelp.cpp \
 gamesequence/gamesequence.cpp \
 globalincs/alphacolors.cpp \
 globalincs/crypt.cpp \
 globalincs/systemvars.cpp \
 globalincs/version.cpp \
 graphics/2d.cpp \
 graphics/aaline.cpp \
 graphics/bitblt.cpp \
 graphics/circle.cpp \
 graphics/colors.cpp \
 graphics/font.cpp \
 graphics/gradient.cpp \
 graphics/gropengl.cpp \
 graphics/grzbuffer.cpp \
 graphics/line.cpp \
 graphics/pixel.cpp \
 graphics/rect.cpp \
 graphics/scaler.cpp \
 graphics/shade.cpp \
 hud/hud.cpp \
 hud/hudartillery.cpp \
 hud/hudbrackets.cpp \
 hud/hudconfig.cpp \
 hud/hudescort.cpp \
 hud/hudets.cpp \
 hud/hudlock.cpp \
 hud/hudmessage.cpp \
 hud/hudreticle.cpp \
 hud/hudshield.cpp \
 hud/hudsquadmsg.cpp \
 hud/hudtarget.cpp \
 hud/hudtargetbox.cpp \
 hud/hudwingmanstatus.cpp \
 io/key.cpp \
 io/keycontrol.cpp \
 io/mouse.cpp \
 io/timer.cpp \
 jumpnode/jumpnode.cpp \
 lighting/lighting.cpp \
 localization/fhash.cpp \
 localization/localize.cpp \
 math/fix.cpp \
 math/floating.cpp \
 math/fvi.cpp \
 math/spline.cpp \
 math/staticrand.cpp \
 math/vecmat.cpp \
 menuui/barracks.cpp \
 menuui/credits.cpp \
 menuui/fishtank.cpp \
 menuui/mainhallmenu.cpp \
 menuui/mainhalltemp.cpp \
 menuui/optionsmenu.cpp \
 menuui/playermenu.cpp \
 menuui/readyroom.cpp \
 menuui/snazzyui.cpp \
 menuui/techmenu.cpp \
 menuui/trainingmenu.cpp \
 mission/missionbriefcommon.cpp \
 mission/missioncampaign.cpp \
 mission/missiongoals.cpp \
 mission/missiongrid.cpp \
 mission/missionhotkey.cpp \
 mission/missionload.cpp \
 mission/missionlog.cpp \
 mission/missionmessage.cpp \
 mission/missionparse.cpp \
 mission/missiontraining.cpp \
 missionui/missionbrief.cpp \
 missionui/missioncmdbrief.cpp \
 missionui/missiondebrief.cpp \
 missionui/missionloopbrief.cpp \
 missionui/missionpause.cpp \
 missionui/missionrecommend.cpp \
 missionui/missionscreencommon.cpp \
 missionui/missionshipchoice.cpp \
 missionui/missionstats.cpp \
 missionui/missionweaponchoice.cpp \
 missionui/redalert.cpp \
 model/modelcollide.cpp \
 model/modelinterp.cpp \
 model/modeloctant.cpp \
 model/modelread.cpp \
 nebula/neb.cpp \
 nebula/neblightning.cpp \
 object/collidedebrisship.cpp \
 object/collidedebrisweapon.cpp \
 object/collideshipship.cpp \
 object/collideshipweapon.cpp \
 object/collideweaponweapon.cpp \
 object/objcollide.cpp \
 object/object.cpp \
 object/objectsort.cpp \
 observer/observer.cpp \
 palman/palman.cpp \
 parse/encrypt.cpp \
 parse/parselo.cpp \
 parse/sexp.cpp \
 particle/particle.cpp \
 pcxutils/pcxutils.cpp \
 physics/physics.cpp \
 playerman/managepilot.cpp \
 playerman/playercontrol.cpp \
 popup/popup.cpp \
 popup/popupdead.cpp \
 radar/radar.cpp \
 render/3dclipper.cpp \
 render/3ddraw.cpp \
 render/3dlaser.cpp \
 render/3dmath.cpp \
 render/3dsetup.cpp \
 ship/afterburner.cpp \
 ship/ai.cpp \
 ship/aibig.cpp \
 ship/aicode.cpp \
 ship/aigoals.cpp \
 ship/awacs.cpp \
 ship/shield.cpp \
 ship/ship.cpp \
 ship/shipcontrails.cpp \
 ship/shipfx.cpp \
 ship/shiphit.cpp \
 starfield/nebula.cpp \
 starfield/starfield.cpp \
 starfield/supernova.cpp \
 stats/medals.cpp \
 stats/scoring.cpp \
 stats/stats.cpp \
 tgautils/tgautils.cpp \
 ui/button.cpp \
 ui/checkbox.cpp \
 ui/gadget.cpp \
 ui/icon.cpp \
 ui/inputbox.cpp \
 ui/keytrap.cpp \
 ui/listbox.cpp \
 ui/radio.cpp \
 ui/scroll.cpp \
 ui/slider.cpp \
 ui/slider2.cpp \
 ui/uidraw.cpp \
 ui/uimouse.cpp \
 ui/window.cpp \
 weapon/beam.cpp \
 weapon/corkscrew.cpp \
 weapon/emp.cpp \
 weapon/flak.cpp \
 weapon/muzzleflash.cpp \
 weapon/shockwave.cpp \
 weapon/swarm.cpp \
 weapon/trails.cpp \
 weapon/weapons.cpp\
$(am__append_1) $(am__append_2) $(am__append_3) $(am__append_4) $(am__append_5) $(am__append_6)

# INCLUDES = -I.
AM_CXXFLAGS = -fno-exceptions @DX8_INCLUDE@
AM_LDFLAGS = -L/c/dx8/lib @DX8_LIB@

LDADD = $(am__append_7)
subdir = code
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = fs2$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am__fs2_SOURCES_DIST = anim/animplay.cpp anim/packunpack.cpp \
	asteroid/asteroid.cpp bmpman/bmpman.cpp cfile/cfile.cpp \
	cfile/cfilearchive.cpp cfile/cfilelist.cpp \
	cfile/cfilesystem.cpp cmdline/cmdline.cpp cmeasure/cmeasure.cpp \
	controlconfig/controlsconfig.cpp \
	controlconfig/controlsconfigcommon.cpp cutscene/cutscenes.cpp \
	debris/debris.cpp debugconsole/console.cpp decals/decals.cpp \
	demo/demo.cpp exceptionhandler/exceptionhandler.cpp \
	fireball/fireballs.cpp fireball/warpineffect.cpp \
	freespace2/freespace.cpp freespace2/levelpaging.cpp \
	gamehelp/contexthelp.cpp gamehelp/gameplayhelp.cpp \
	gamesequence/gamesequence.cpp globalincs/alphacolors.cpp \
	globalincs/crypt.cpp globalincs/systemvars.cpp \
	globalincs/version.cpp graphics/2d.cpp graphics/aaline.cpp \
	graphics/bitblt.cpp graphics/circle.cpp graphics/colors.cpp \
	graphics/font.cpp graphics/gradient.cpp graphics/gropengl.cpp \
	graphics/grzbuffer.cpp graphics/line.cpp graphics/pixel.cpp \
	graphics/rect.cpp graphics/scaler.cpp graphics/shade.cpp \
	hud/hud.cpp hud/hudartillery.cpp hud/hudbrackets.cpp \
	hud/hudconfig.cpp hud/hudescort.cpp hud/hudets.cpp \
	hud/hudlock.cpp hud/hudmessage.cpp hud/hudreticle.cpp \
	hud/hudshield.cpp hud/hudsquadmsg.cpp hud/hudtarget.cpp \
	hud/hudtargetbox.cpp hud/hudwingmanstatus.cpp io/key.cpp \
	io/keycontrol.cpp io/mouse.cpp io/timer.cpp \
	jumpnode/jumpnode.cpp lighting/lighting.cpp \
	localization/fhash.cpp localization/localize.cpp math/fix.cpp \
	math/floating.cpp math/fvi.cpp math/spline.cpp \
	math/staticrand.cpp math/vecmat.cpp menuui/barracks.cpp \
	menuui/credits.cpp menuui/fishtank.cpp menuui/mainhallmenu.cpp \
	menuui/mainhalltemp.cpp menuui/optionsmenu.cpp \
	menuui/playermenu.cpp menuui/readyroom.cpp menuui/snazzyui.cpp \
	menuui/techmenu.cpp menuui/trainingmenu.cpp \
	mission/missionbriefcommon.cpp mission/missioncampaign.cpp \
	mission/missiongoals.cpp mission/missiongrid.cpp \
	mission/missionhotkey.cpp mission/missionload.cpp \
	mission/missionlog.cpp mission/missionmessage.cpp \
	mission/missionparse.cpp mission/missiontraining.cpp \
	missionui/missionbrief.cpp missionui/missioncmdbrief.cpp \
	missionui/missiondebrief.cpp missionui/missionloopbrief.cpp \
	missionui/missionpause.cpp missionui/missionrecommend.cpp \
	missionui/missionscreencommon.cpp \
	missionui/missionshipchoice.cpp missionui/missionstats.cpp \
	missionui/missionweaponchoice.cpp missionui/redalert.cpp \
	model/modelcollide.cpp model/modelinterp.cpp \
	model/modeloctant.cpp model/modelread.cpp nebula/neb.cpp \
	nebula/neblightning.cpp object/collidedebrisship.cpp \
	object/collidedebrisweapon.cpp object/collideshipship.cpp \
	object/collideshipweapon.cpp object/collideweaponweapon.cpp \
	object/objcollide.cpp object/object.cpp object/objectsort.cpp \
	observer/observer.cpp palman/palman.cpp parse/encrypt.cpp \
	parse/parselo.cpp parse/sexp.cpp particle/particle.cpp \
	pcxutils/pcxutils.cpp physics/physics.cpp \
	playerman/managepilot.cpp playerman/playercontrol.cpp \
	popup/popup.cpp popup/popupdead.cpp radar/radar.cpp \
	render/3dclipper.cpp render/3ddraw.cpp render/3dlaser.cpp \
	render/3dmath.cpp render/3dsetup.cpp ship/afterburner.cpp \
	ship/ai.cpp ship/aibig.cpp ship/aicode.cpp ship/aigoals.cpp \
	ship/awacs.cpp ship/shield.cpp ship/ship.cpp \
	ship/shipcontrails.cpp ship/shipfx.cpp ship/shiphit.cpp \
	starfield/nebula.cpp starfield/starfield.cpp \
	starfield/supernova.cpp stats/medals.cpp stats/scoring.cpp \
	stats/stats.cpp tgautils/tgautils.cpp ui/button.cpp \
	ui/checkbox.cpp ui/gadget.cpp ui/icon.cpp ui/inputbox.cpp \
	ui/keytrap.cpp ui/listbox.cpp ui/radio.cpp ui/scroll.cpp \
	ui/slider.cpp ui/slider2.cpp ui/uidraw.cpp ui/uimouse.cpp \
	ui/window.cpp weapon/beam.cpp weapon/corkscrew.cpp \
	weapon/emp.cpp weapon/flak.cpp weapon/muzzleflash.cpp \
	weapon/shockwave.cpp weapon/swarm.cpp weapon/trails.cpp \
	weapon/weapons.cpp io/joy.cpp io/joy_ff.cpp io/swff_lib.cpp \
	hud/hudobserver.cpp network/multi.cpp network/multimsgs.cpp \
	network/multiteamselect.cpp network/multiui.cpp \
	network/multiutil.cpp network/multi_campaign.cpp \
	network/multi_data.cpp network/multi_dogfight.cpp \
	network/multi_endgame.cpp network/multi_ingame.cpp \
	network/multi_kick.cpp network/multi_log.cpp \
	network/multi_obj.cpp network/multi_observer.cpp \
	network/multi_options.cpp network/multi_pause.cpp \
	network/multi_pinfo.cpp network/multi_ping.cpp \
	network/multi_pmsg.cpp network/multi_rate.cpp \
	network/multi_respawn.cpp network/multi_team.cpp \
	network/multi_voice.cpp network/multi_xfer.cpp \
	network/psnet.cpp network/psnet2.cpp \
	menuui/optionsmenumulti.cpp missionui/chatbox.cpp \
	gamesnd/eventmusic.cpp gamesnd/gamesnd.cpp object/objectsnd.cpp \
	sound/acm.cpp sound/audiostr.cpp sound/ds.cpp sound/ds3d.cpp \
	sound/dscap.cpp sound/midifile.cpp sound/rbaudio.cpp \
	sound/rtvoice.cpp sound/sound.cpp sound/winmidi.cpp \
	sound/winmidi_base.cpp vcodec/codec1.cpp graphics/grsoft.cpp \
	graphics/tmapper.cpp cutscene/movie.cpp directx/dx8show.cpp \
	ddsutils/ddsutils.cpp globalincs/windebug.cpp glide/glide.cpp \
	graphics/grd3d.cpp graphics/grd3drender.cpp \
	graphics/grd3dtexture.cpp graphics/grdirectdraw.cpp \
	graphics/grglide.cpp graphics/grglidetexture.cpp \
	network/stand_gui.cpp osapi/osapi.cpp osapi/osregistry.cpp \
	osapi/outwnd.cpp io/xmouse.cpp osapi/osapi_unix.cpp \
	osapi/osregistry_unix.cpp osapi/outwnd_unix.cpp
@FS2_JOYSTICK_TRUE@am__objects_1 = joy.$(OBJEXT) joy_ff.$(OBJEXT) \
@FS2_JOYSTICK_TRUE@	swff_lib.$(OBJEXT)
@FS2_NETWORKING_TRUE@am__objects_2 = hudobserver.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi.$(OBJEXT) multimsgs.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multiteamselect.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multiui.$(OBJEXT) multiutil.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_campaign.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_data.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_dogfight.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_endgame.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_ingame.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_kick.$(OBJEXT) multi_log.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_obj.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_observer.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_options.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_pause.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_pinfo.$(OBJEXT) multi_ping.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_pmsg.$(OBJEXT) multi_rate.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_respawn.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_team.$(OBJEXT) multi_voice.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	multi_xfer.$(OBJEXT) psnet.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	psnet2.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	optionsmenumulti.$(OBJEXT) \
@FS2_NETWORKING_TRUE@	chatbox.$(OBJEXT)
@FS2_SOUND_TRUE@am__objects_3 = eventmusic.$(OBJEXT) gamesnd.$(OBJEXT) \
@FS2_SOUND_TRUE@	objectsnd.$(OBJEXT) acm.$(OBJEXT) \
@FS2_SOUND_TRUE@	audiostr.$(OBJEXT) ds.$(OBJEXT) ds3d.$(OBJEXT) \
@FS2_SOUND_TRUE@	dscap.$(OBJEXT) midifile.$(OBJEXT) \
@FS2_SOUND_TRUE@	rbaudio.$(OBJEXT) rtvoice.$(OBJEXT) \
@FS2_SOUND_TRUE@	sound.$(OBJEXT) winmidi.$(OBJEXT) \
@FS2_SOUND_TRUE@	winmidi_base.$(OBJEXT) codec1.$(OBJEXT)
@FS2_GRSOFT_TRUE@am__objects_4 = grsoft.$(OBJEXT) tmapper.$(OBJEXT)
@FS2_OS_WIN32_TRUE@am__objects_5 = movie.$(OBJEXT) dx8show.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	ddsutils.$(OBJEXT) windebug.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	glide.$(OBJEXT) grd3d.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	grd3drender.$(OBJEXT) grd3dtexture.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	grdirectdraw.$(OBJEXT) grglide.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	grglidetexture.$(OBJEXT) stand_gui.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	osapi.$(OBJEXT) osregistry.$(OBJEXT) \
@FS2_OS_WIN32_TRUE@	outwnd.$(OBJEXT)
@FS2_OS_UNIX_TRUE@am__objects_6 = xmouse.$(OBJEXT) osapi_unix.$(OBJEXT) \
@FS2_OS_UNIX_TRUE@	osregistry_unix.$(OBJEXT) \
@FS2_OS_UNIX_TRUE@	outwnd_unix.$(OBJEXT)
am_fs2_OBJECTS = animplay.$(OBJEXT) packunpack.$(OBJEXT) \
	asteroid.$(OBJEXT) bmpman.$(OBJEXT) cfile.$(OBJEXT) \
	cfilearchive.$(OBJEXT) cfilelist.$(OBJEXT) \
	cfilesystem.$(OBJEXT) cmdline.$(OBJEXT) cmeasure.$(OBJEXT) \
	controlsconfig.$(OBJEXT) controlsconfigcommon.$(OBJEXT) \
	cutscenes.$(OBJEXT) debris.$(OBJEXT) console.$(OBJEXT) \
	decals.$(OBJEXT) demo.$(OBJEXT) exceptionhandler.$(OBJEXT) \
	fireballs.$(OBJEXT) warpineffect.$(OBJEXT) freespace.$(OBJEXT) \
	levelpaging.$(OBJEXT) contexthelp.$(OBJEXT) \
	gameplayhelp.$(OBJEXT) gamesequence.$(OBJEXT) \
	alphacolors.$(OBJEXT) crypt.$(OBJEXT) systemvars.$(OBJEXT) \
	version.$(OBJEXT) 2d.$(OBJEXT) aaline.$(OBJEXT) \
	bitblt.$(OBJEXT) circle.$(OBJEXT) colors.$(OBJEXT) \
	font.$(OBJEXT) gradient.$(OBJEXT) gropengl.$(OBJEXT) \
	grzbuffer.$(OBJEXT) line.$(OBJEXT) pixel.$(OBJEXT) \
	rect.$(OBJEXT) scaler.$(OBJEXT) shade.$(OBJEXT) hud.$(OBJEXT) \
	hudartillery.$(OBJEXT) hudbrackets.$(OBJEXT) \
	hudconfig.$(OBJEXT) hudescort.$(OBJEXT) hudets.$(OBJEXT) \
	hudlock.$(OBJEXT) hudmessage.$(OBJEXT) hudreticle.$(OBJEXT) \
	hudshield.$(OBJEXT) hudsquadmsg.$(OBJEXT) hudtarget.$(OBJEXT) \
	hudtargetbox.$(OBJEXT) hudwingmanstatus.$(OBJEXT) key.$(OBJEXT) \
	keycontrol.$(OBJEXT) mouse.$(OBJEXT) timer.$(OBJEXT) \
	jumpnode.$(OBJEXT) lighting.$(OBJEXT) fhash.$(OBJEXT) \
	localize.$(OBJEXT) fix.$(OBJEXT) floating.$(OBJEXT) \
	fvi.$(OBJEXT) spline.$(OBJEXT) staticrand.$(OBJEXT) \
	vecmat.$(OBJEXT) barracks.$(OBJEXT) credits.$(OBJEXT) \
	fishtank.$(OBJEXT) mainhallmenu.$(OBJEXT) \
	mainhalltemp.$(OBJEXT) optionsmenu.$(OBJEXT) \
	playermenu.$(OBJEXT) readyroom.$(OBJEXT) snazzyui.$(OBJEXT) \
	techmenu.$(OBJEXT) trainingmenu.$(OBJEXT) \
	missionbriefcommon.$(OBJEXT) missioncampaign.$(OBJEXT) \
	missiongoals.$(OBJEXT) missiongrid.$(OBJEXT) \
	missionhotkey.$(OBJEXT) missionload.$(OBJEXT) \
	missionlog.$(OBJEXT) missionmessage.$(OBJEXT) \
	missionparse.$(OBJEXT) missiontraining.$(OBJEXT) \
	missionbrief.$(OBJEXT) missioncmdbrief.$(OBJEXT) \
	missiondebrief.$(OBJEXT) missionloopbrief.$(OBJEXT) \
	missionpause.$(OBJEXT) missionrecommend.$(OBJEXT) \
	missionscreencommon.$(OBJEXT) missionshipchoice.$(OBJEXT) \
	missionstats.$(OBJEXT) missionweaponchoice.$(OBJEXT) \
	redalert.$(OBJEXT) modelcollide.$(OBJEXT) modelinterp.$(OBJEXT) \
	modeloctant.$(OBJEXT) modelread.$(OBJEXT) neb.$(OBJEXT) \
	neblightning.$(OBJEXT) collidedebrisship.$(OBJEXT) \
	collidedebrisweapon.$(OBJEXT) collideshipship.$(OBJEXT) \
	collideshipweapon.$(OBJEXT) collideweaponweapon.$(OBJEXT) \
	objcollide.$(OBJEXT) object.$(OBJEXT) objectsort.$(OBJEXT) \
	observer.$(OBJEXT) palman.$(OBJEXT) encrypt.$(OBJEXT) \
	parselo.$(OBJEXT) sexp.$(OBJEXT) particle.$(OBJEXT) \
	pcxutils.$(OBJEXT) physics.$(OBJEXT) managepilot.$(OBJEXT) \
	playercontrol.$(OBJEXT) popup.$(OBJEXT) popupdead.$(OBJEXT) \
	radar.$(OBJEXT) 3dclipper.$(OBJEXT) 3ddraw.$(OBJEXT) \
	3dlaser.$(OBJEXT) 3dmath.$(OBJEXT) 3dsetup.$(OBJEXT) \
	afterburner.$(OBJEXT) ai.$(OBJEXT) aibig.$(OBJEXT) \
	aicode.$(OBJEXT) aigoals.$(OBJEXT) awacs.$(OBJEXT) \
	shield.$(OBJEXT) ship.$(OBJEXT) shipcontrails.$(OBJEXT) \
	shipfx.$(OBJEXT) shiphit.$(OBJEXT) nebula.$(OBJEXT) \
	starfield.$(OBJEXT) supernova.$(OBJEXT) medals.$(OBJEXT) \
	scoring.$(OBJEXT) stats.$(OBJEXT) tgautils.$(OBJEXT) \
	button.$(OBJEXT) checkbox.$(OBJEXT) gadget.$(OBJEXT) \
	icon.$(OBJEXT) inputbox.$(OBJEXT) keytrap.$(OBJEXT) \
	listbox.$(OBJEXT) radio.$(OBJEXT) scroll.$(OBJEXT) \
	slider.$(OBJEXT) slider2.$(OBJEXT) uidraw.$(OBJEXT) \
	uimouse.$(OBJEXT) window.$(OBJEXT) beam.$(OBJEXT) \
	corkscrew.$(OBJEXT) emp.$(OBJEXT) flak.$(OBJEXT) \
	muzzleflash.$(OBJEXT) shockwave.$(OBJEXT) swarm.$(OBJEXT) \
	trails.$(OBJEXT) weapons.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6)
fs2_OBJECTS = $(am_fs2_OBJECTS)
fs2_LDADD = $(LDADD)
@FS2_OS_WIN32_TRUE@fs2_DEPENDENCIES =
@FS2_OS_WIN32_FALSE@fs2_DEPENDENCIES =
fs2_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/2d.Po ./$(DEPDIR)/3dclipper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/3ddraw.Po ./$(DEPDIR)/3dlaser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/3dmath.Po ./$(DEPDIR)/3dsetup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/aaline.Po ./$(DEPDIR)/acm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/afterburner.Po ./$(DEPDIR)/ai.Po \
@AMDEP_TRUE@	./$(DEPDIR)/aibig.Po ./$(DEPDIR)/aicode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/aigoals.Po ./$(DEPDIR)/alphacolors.Po \
@AMDEP_TRUE@	./$(DEPDIR)/animplay.Po ./$(DEPDIR)/asteroid.Po \
@AMDEP_TRUE@	./$(DEPDIR)/audiostr.Po ./$(DEPDIR)/awacs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/barracks.Po ./$(DEPDIR)/beam.Po \
@AMDEP_TRUE@	./$(DEPDIR)/bitblt.Po ./$(DEPDIR)/bmpman.Po \
@AMDEP_TRUE@	./$(DEPDIR)/button.Po ./$(DEPDIR)/cfile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cfilearchive.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cfilelist.Po ./$(DEPDIR)/cfilesystem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/chatbox.Po ./$(DEPDIR)/checkbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/circle.Po ./$(DEPDIR)/cmdline.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cmeasure.Po ./$(DEPDIR)/codec1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collidedebrisship.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collidedebrisweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collideshipship.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collideshipweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/collideweaponweapon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/colors.Po ./$(DEPDIR)/console.Po \
@AMDEP_TRUE@	./$(DEPDIR)/contexthelp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/controlsconfig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/controlsconfigcommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/corkscrew.Po ./$(DEPDIR)/credits.Po \
@AMDEP_TRUE@	./$(DEPDIR)/crypt.Po ./$(DEPDIR)/cutscenes.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ddsutils.Po ./$(DEPDIR)/debris.Po \
@AMDEP_TRUE@	./$(DEPDIR)/decals.Po ./$(DEPDIR)/demo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ds.Po ./$(DEPDIR)/ds3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dscap.Po ./$(DEPDIR)/dx8show.Po \
@AMDEP_TRUE@	./$(DEPDIR)/emp.Po ./$(DEPDIR)/encrypt.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eventmusic.Po \
@AMDEP_TRUE@	./$(DEPDIR)/exceptionhandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fhash.Po ./$(DEPDIR)/fireballs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fishtank.Po ./$(DEPDIR)/fix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flak.Po ./$(DEPDIR)/floating.Po \
@AMDEP_TRUE@	./$(DEPDIR)/font.Po ./$(DEPDIR)/freespace.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fvi.Po ./$(DEPDIR)/gadget.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gameplayhelp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gamesequence.Po ./$(DEPDIR)/gamesnd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/glide.Po ./$(DEPDIR)/gradient.Po \
@AMDEP_TRUE@	./$(DEPDIR)/grd3d.Po ./$(DEPDIR)/grd3drender.Po \
@AMDEP_TRUE@	./$(DEPDIR)/grd3dtexture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/grdirectdraw.Po ./$(DEPDIR)/grglide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/grglidetexture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gropengl.Po ./$(DEPDIR)/grsoft.Po \
@AMDEP_TRUE@	./$(DEPDIR)/grzbuffer.Po ./$(DEPDIR)/hud.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudartillery.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudbrackets.Po ./$(DEPDIR)/hudconfig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudescort.Po ./$(DEPDIR)/hudets.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudlock.Po ./$(DEPDIR)/hudmessage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudobserver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudreticle.Po ./$(DEPDIR)/hudshield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudsquadmsg.Po ./$(DEPDIR)/hudtarget.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudtargetbox.Po \
@AMDEP_TRUE@	./$(DEPDIR)/hudwingmanstatus.Po ./$(DEPDIR)/icon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/inputbox.Po ./$(DEPDIR)/joy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/joy_ff.Po ./$(DEPDIR)/jumpnode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/key.Po ./$(DEPDIR)/keycontrol.Po \
@AMDEP_TRUE@	./$(DEPDIR)/keytrap.Po ./$(DEPDIR)/levelpaging.Po \
@AMDEP_TRUE@	./$(DEPDIR)/lighting.Po ./$(DEPDIR)/line.Po \
@AMDEP_TRUE@	./$(DEPDIR)/listbox.Po ./$(DEPDIR)/localize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mainhallmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mainhalltemp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/managepilot.Po ./$(DEPDIR)/medals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/midifile.Po ./$(DEPDIR)/missionbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionbriefcommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missioncampaign.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missioncmdbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missiondebrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missiongoals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missiongrid.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionhotkey.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionlog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionloopbrief.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionmessage.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionparse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionpause.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionrecommend.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionscreencommon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionshipchoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionstats.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missiontraining.Po \
@AMDEP_TRUE@	./$(DEPDIR)/missionweaponchoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/modelcollide.Po \
@AMDEP_TRUE@	./$(DEPDIR)/modelinterp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/modeloctant.Po ./$(DEPDIR)/modelread.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mouse.Po ./$(DEPDIR)/movie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi.Po ./$(DEPDIR)/multi_campaign.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_dogfight.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_endgame.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_ingame.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_kick.Po ./$(DEPDIR)/multi_log.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_obj.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_observer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_options.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_pause.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_pinfo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_ping.Po ./$(DEPDIR)/multi_pmsg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_rate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_respawn.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_team.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_voice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multi_xfer.Po ./$(DEPDIR)/multimsgs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multiteamselect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multiui.Po ./$(DEPDIR)/multiutil.Po \
@AMDEP_TRUE@	./$(DEPDIR)/muzzleflash.Po ./$(DEPDIR)/neb.Po \
@AMDEP_TRUE@	./$(DEPDIR)/neblightning.Po ./$(DEPDIR)/nebula.Po \
@AMDEP_TRUE@	./$(DEPDIR)/objcollide.Po ./$(DEPDIR)/object.Po \
@AMDEP_TRUE@	./$(DEPDIR)/objectsnd.Po ./$(DEPDIR)/objectsort.Po \
@AMDEP_TRUE@	./$(DEPDIR)/observer.Po ./$(DEPDIR)/optionsmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/optionsmenumulti.Po \
@AMDEP_TRUE@	./$(DEPDIR)/osapi.Po ./$(DEPDIR)/osapi_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/osregistry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/osregistry_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/outwnd.Po ./$(DEPDIR)/outwnd_unix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/packunpack.Po ./$(DEPDIR)/palman.Po \
@AMDEP_TRUE@	./$(DEPDIR)/parselo.Po ./$(DEPDIR)/particle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pcxutils.Po ./$(DEPDIR)/physics.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pixel.Po ./$(DEPDIR)/playercontrol.Po \
@AMDEP_TRUE@	./$(DEPDIR)/playermenu.Po ./$(DEPDIR)/popup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/popupdead.Po ./$(DEPDIR)/psnet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/psnet2.Po ./$(DEPDIR)/radar.Po \
@AMDEP_TRUE@	./$(DEPDIR)/radio.Po ./$(DEPDIR)/rbaudio.Po \
@AMDEP_TRUE@	./$(DEPDIR)/readyroom.Po ./$(DEPDIR)/rect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/redalert.Po ./$(DEPDIR)/rtvoice.Po \
@AMDEP_TRUE@	./$(DEPDIR)/scaler.Po ./$(DEPDIR)/scoring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/scroll.Po ./$(DEPDIR)/sexp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/shade.Po ./$(DEPDIR)/shield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ship.Po ./$(DEPDIR)/shipcontrails.Po \
@AMDEP_TRUE@	./$(DEPDIR)/shipfx.Po ./$(DEPDIR)/shiphit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/shockwave.Po ./$(DEPDIR)/slider.Po \
@AMDEP_TRUE@	./$(DEPDIR)/slider2.Po ./$(DEPDIR)/snazzyui.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sound.Po ./$(DEPDIR)/spline.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stand_gui.Po ./$(DEPDIR)/starfield.Po \
@AMDEP_TRUE@	./$(DEPDIR)/staticrand.Po ./$(DEPDIR)/stats.Po \
@AMDEP_TRUE@	./$(DEPDIR)/supernova.Po ./$(DEPDIR)/swarm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/swff_lib.Po ./$(DEPDIR)/systemvars.Po \
@AMDEP_TRUE@	./$(DEPDIR)/techmenu.Po ./$(DEPDIR)/tgautils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/timer.Po ./$(DEPDIR)/tmapper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trails.Po ./$(DEPDIR)/trainingmenu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/uidraw.Po ./$(DEPDIR)/uimouse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/vecmat.Po ./$(DEPDIR)/version.Po \
@AMDEP_TRUE@	./$(DEPDIR)/warpineffect.Po ./$(DEPDIR)/weapons.Po \
@AMDEP_TRUE@	./$(DEPDIR)/windebug.Po ./$(DEPDIR)/window.Po \
@AMDEP_TRUE@	./$(DEPDIR)/winmidi.Po ./$(DEPDIR)/winmidi_base.Po \
@AMDEP_TRUE@	./$(DEPDIR)/xmouse.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(am__fs2_SOURCES_DIST)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(fs2_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  code/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
fs2$(EXEEXT): $(fs2_OBJECTS) $(fs2_DEPENDENCIES) 
	@rm -f fs2$(EXEEXT)
	$(CXXLINK) $(fs2_LDFLAGS) $(fs2_OBJECTS) $(fs2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3dclipper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3ddraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3dlaser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3dmath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3dsetup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aaline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/afterburner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ai.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aibig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aicode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aigoals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alphacolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/animplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asteroid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audiostr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/awacs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barracks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitblt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bmpman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfilearchive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfilelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfilesystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chatbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/checkbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/circle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmeasure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codec1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collidedebrisship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collidedebrisweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collideshipship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collideshipweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collideweaponweapon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/console.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contexthelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/controlsconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/controlsconfigcommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corkscrew.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/credits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cutscenes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ddsutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debris.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/decals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/demo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ds3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dscap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dx8show.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventmusic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exceptionhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fhash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fireballs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fishtank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flak.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floating.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/freespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fvi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gadget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gameplayhelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gamesequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gamesnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/glide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gradient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grd3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grd3drender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grd3dtexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grdirectdraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grglide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grglidetexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gropengl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grsoft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grzbuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hud.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudartillery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudbrackets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudescort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudlock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudmessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudobserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudreticle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudshield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudsquadmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudtarget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudtargetbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hudwingmanstatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/icon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inputbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/joy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/joy_ff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jumpnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keycontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keytrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/levelpaging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lighting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/line.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/localize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainhallmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainhalltemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/managepilot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/medals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/midifile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionbriefcommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missioncampaign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missioncmdbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missiondebrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missiongoals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missiongrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionhotkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionloopbrief.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionmessage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionpause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionrecommend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionscreencommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionshipchoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionstats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missiontraining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missionweaponchoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modelcollide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modelinterp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modeloctant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modelread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/movie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_campaign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_dogfight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_endgame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_ingame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_kick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_obj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_observer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_pause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_pinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_pmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_rate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_respawn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_team.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_voice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_xfer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multimsgs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiteamselect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/muzzleflash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neblightning.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nebula.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objcollide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objectsnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objectsort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optionsmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optionsmenumulti.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osapi_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osregistry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osregistry_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outwnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outwnd_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packunpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/palman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parselo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/particle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pcxutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/physics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playercontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playermenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/popup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/popupdead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psnet2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rbaudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readyroom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/redalert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtvoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scaler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scroll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shipcontrails.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shipfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shiphit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shockwave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slider2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snazzyui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stand_gui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/starfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/staticrand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/supernova.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swarm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swff_lib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systemvars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/techmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgautils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trails.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trainingmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uidraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uimouse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vecmat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/warpineffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/weapons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/windebug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/winmidi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/winmidi_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmouse.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

animplay.o: anim/animplay.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT animplay.o -MD -MP -MF "$(DEPDIR)/animplay.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o animplay.o `test -f 'anim/animplay.cpp' || echo '$(srcdir)/'`anim/animplay.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/animplay.Tpo" "$(DEPDIR)/animplay.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/animplay.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/animplay.cpp' object='animplay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/animplay.Po' tmpdepfile='$(DEPDIR)/animplay.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o animplay.o `test -f 'anim/animplay.cpp' || echo '$(srcdir)/'`anim/animplay.cpp

animplay.obj: anim/animplay.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT animplay.obj -MD -MP -MF "$(DEPDIR)/animplay.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o animplay.obj `if test -f 'anim/animplay.cpp'; then $(CYGPATH_W) 'anim/animplay.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/animplay.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/animplay.Tpo" "$(DEPDIR)/animplay.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/animplay.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/animplay.cpp' object='animplay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/animplay.Po' tmpdepfile='$(DEPDIR)/animplay.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o animplay.obj `if test -f 'anim/animplay.cpp'; then $(CYGPATH_W) 'anim/animplay.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/animplay.cpp'; fi`

packunpack.o: anim/packunpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT packunpack.o -MD -MP -MF "$(DEPDIR)/packunpack.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o packunpack.o `test -f 'anim/packunpack.cpp' || echo '$(srcdir)/'`anim/packunpack.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/packunpack.Tpo" "$(DEPDIR)/packunpack.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/packunpack.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/packunpack.cpp' object='packunpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/packunpack.Po' tmpdepfile='$(DEPDIR)/packunpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o packunpack.o `test -f 'anim/packunpack.cpp' || echo '$(srcdir)/'`anim/packunpack.cpp

packunpack.obj: anim/packunpack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT packunpack.obj -MD -MP -MF "$(DEPDIR)/packunpack.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o packunpack.obj `if test -f 'anim/packunpack.cpp'; then $(CYGPATH_W) 'anim/packunpack.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/packunpack.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/packunpack.Tpo" "$(DEPDIR)/packunpack.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/packunpack.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='anim/packunpack.cpp' object='packunpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/packunpack.Po' tmpdepfile='$(DEPDIR)/packunpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o packunpack.obj `if test -f 'anim/packunpack.cpp'; then $(CYGPATH_W) 'anim/packunpack.cpp'; else $(CYGPATH_W) '$(srcdir)/anim/packunpack.cpp'; fi`

asteroid.o: asteroid/asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asteroid.o -MD -MP -MF "$(DEPDIR)/asteroid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o asteroid.o `test -f 'asteroid/asteroid.cpp' || echo '$(srcdir)/'`asteroid/asteroid.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/asteroid.Tpo" "$(DEPDIR)/asteroid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/asteroid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid/asteroid.cpp' object='asteroid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/asteroid.Po' tmpdepfile='$(DEPDIR)/asteroid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asteroid.o `test -f 'asteroid/asteroid.cpp' || echo '$(srcdir)/'`asteroid/asteroid.cpp

asteroid.obj: asteroid/asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT asteroid.obj -MD -MP -MF "$(DEPDIR)/asteroid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o asteroid.obj `if test -f 'asteroid/asteroid.cpp'; then $(CYGPATH_W) 'asteroid/asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid/asteroid.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/asteroid.Tpo" "$(DEPDIR)/asteroid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/asteroid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid/asteroid.cpp' object='asteroid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/asteroid.Po' tmpdepfile='$(DEPDIR)/asteroid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o asteroid.obj `if test -f 'asteroid/asteroid.cpp'; then $(CYGPATH_W) 'asteroid/asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid/asteroid.cpp'; fi`

bmpman.o: bmpman/bmpman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bmpman.o -MD -MP -MF "$(DEPDIR)/bmpman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o bmpman.o `test -f 'bmpman/bmpman.cpp' || echo '$(srcdir)/'`bmpman/bmpman.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/bmpman.Tpo" "$(DEPDIR)/bmpman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/bmpman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bmpman/bmpman.cpp' object='bmpman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bmpman.Po' tmpdepfile='$(DEPDIR)/bmpman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bmpman.o `test -f 'bmpman/bmpman.cpp' || echo '$(srcdir)/'`bmpman/bmpman.cpp

bmpman.obj: bmpman/bmpman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bmpman.obj -MD -MP -MF "$(DEPDIR)/bmpman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o bmpman.obj `if test -f 'bmpman/bmpman.cpp'; then $(CYGPATH_W) 'bmpman/bmpman.cpp'; else $(CYGPATH_W) '$(srcdir)/bmpman/bmpman.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/bmpman.Tpo" "$(DEPDIR)/bmpman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/bmpman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bmpman/bmpman.cpp' object='bmpman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bmpman.Po' tmpdepfile='$(DEPDIR)/bmpman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bmpman.obj `if test -f 'bmpman/bmpman.cpp'; then $(CYGPATH_W) 'bmpman/bmpman.cpp'; else $(CYGPATH_W) '$(srcdir)/bmpman/bmpman.cpp'; fi`

cfile.o: cfile/cfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfile.o -MD -MP -MF "$(DEPDIR)/cfile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfile.o `test -f 'cfile/cfile.cpp' || echo '$(srcdir)/'`cfile/cfile.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfile.Tpo" "$(DEPDIR)/cfile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfile.cpp' object='cfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfile.Po' tmpdepfile='$(DEPDIR)/cfile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfile.o `test -f 'cfile/cfile.cpp' || echo '$(srcdir)/'`cfile/cfile.cpp

cfile.obj: cfile/cfile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfile.obj -MD -MP -MF "$(DEPDIR)/cfile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfile.obj `if test -f 'cfile/cfile.cpp'; then $(CYGPATH_W) 'cfile/cfile.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfile.Tpo" "$(DEPDIR)/cfile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfile.cpp' object='cfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfile.Po' tmpdepfile='$(DEPDIR)/cfile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfile.obj `if test -f 'cfile/cfile.cpp'; then $(CYGPATH_W) 'cfile/cfile.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfile.cpp'; fi`

cfilearchive.o: cfile/cfilearchive.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilearchive.o -MD -MP -MF "$(DEPDIR)/cfilearchive.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilearchive.o `test -f 'cfile/cfilearchive.cpp' || echo '$(srcdir)/'`cfile/cfilearchive.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilearchive.Tpo" "$(DEPDIR)/cfilearchive.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilearchive.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilearchive.cpp' object='cfilearchive.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilearchive.Po' tmpdepfile='$(DEPDIR)/cfilearchive.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilearchive.o `test -f 'cfile/cfilearchive.cpp' || echo '$(srcdir)/'`cfile/cfilearchive.cpp

cfilearchive.obj: cfile/cfilearchive.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilearchive.obj -MD -MP -MF "$(DEPDIR)/cfilearchive.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilearchive.obj `if test -f 'cfile/cfilearchive.cpp'; then $(CYGPATH_W) 'cfile/cfilearchive.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilearchive.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilearchive.Tpo" "$(DEPDIR)/cfilearchive.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilearchive.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilearchive.cpp' object='cfilearchive.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilearchive.Po' tmpdepfile='$(DEPDIR)/cfilearchive.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilearchive.obj `if test -f 'cfile/cfilearchive.cpp'; then $(CYGPATH_W) 'cfile/cfilearchive.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilearchive.cpp'; fi`

cfilelist.o: cfile/cfilelist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilelist.o -MD -MP -MF "$(DEPDIR)/cfilelist.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilelist.o `test -f 'cfile/cfilelist.cpp' || echo '$(srcdir)/'`cfile/cfilelist.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilelist.Tpo" "$(DEPDIR)/cfilelist.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilelist.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilelist.cpp' object='cfilelist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilelist.Po' tmpdepfile='$(DEPDIR)/cfilelist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilelist.o `test -f 'cfile/cfilelist.cpp' || echo '$(srcdir)/'`cfile/cfilelist.cpp

cfilelist.obj: cfile/cfilelist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilelist.obj -MD -MP -MF "$(DEPDIR)/cfilelist.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilelist.obj `if test -f 'cfile/cfilelist.cpp'; then $(CYGPATH_W) 'cfile/cfilelist.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilelist.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilelist.Tpo" "$(DEPDIR)/cfilelist.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilelist.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilelist.cpp' object='cfilelist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilelist.Po' tmpdepfile='$(DEPDIR)/cfilelist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilelist.obj `if test -f 'cfile/cfilelist.cpp'; then $(CYGPATH_W) 'cfile/cfilelist.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilelist.cpp'; fi`

cfilesystem.o: cfile/cfilesystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilesystem.o -MD -MP -MF "$(DEPDIR)/cfilesystem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilesystem.o `test -f 'cfile/cfilesystem.cpp' || echo '$(srcdir)/'`cfile/cfilesystem.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilesystem.Tpo" "$(DEPDIR)/cfilesystem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilesystem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilesystem.cpp' object='cfilesystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilesystem.Po' tmpdepfile='$(DEPDIR)/cfilesystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilesystem.o `test -f 'cfile/cfilesystem.cpp' || echo '$(srcdir)/'`cfile/cfilesystem.cpp

cfilesystem.obj: cfile/cfilesystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cfilesystem.obj -MD -MP -MF "$(DEPDIR)/cfilesystem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cfilesystem.obj `if test -f 'cfile/cfilesystem.cpp'; then $(CYGPATH_W) 'cfile/cfilesystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilesystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cfilesystem.Tpo" "$(DEPDIR)/cfilesystem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cfilesystem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cfile/cfilesystem.cpp' object='cfilesystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cfilesystem.Po' tmpdepfile='$(DEPDIR)/cfilesystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cfilesystem.obj `if test -f 'cfile/cfilesystem.cpp'; then $(CYGPATH_W) 'cfile/cfilesystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile/cfilesystem.cpp'; fi`

cmdline.o: cmdline/cmdline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmdline.o -MD -MP -MF "$(DEPDIR)/cmdline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cmdline.o `test -f 'cmdline/cmdline.cpp' || echo '$(srcdir)/'`cmdline/cmdline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cmdline.Tpo" "$(DEPDIR)/cmdline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cmdline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmdline/cmdline.cpp' object='cmdline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cmdline.Po' tmpdepfile='$(DEPDIR)/cmdline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmdline.o `test -f 'cmdline/cmdline.cpp' || echo '$(srcdir)/'`cmdline/cmdline.cpp

cmdline.obj: cmdline/cmdline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmdline.obj -MD -MP -MF "$(DEPDIR)/cmdline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cmdline.obj `if test -f 'cmdline/cmdline.cpp'; then $(CYGPATH_W) 'cmdline/cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline/cmdline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cmdline.Tpo" "$(DEPDIR)/cmdline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cmdline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmdline/cmdline.cpp' object='cmdline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cmdline.Po' tmpdepfile='$(DEPDIR)/cmdline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmdline.obj `if test -f 'cmdline/cmdline.cpp'; then $(CYGPATH_W) 'cmdline/cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/cmdline/cmdline.cpp'; fi`

cmeasure.o: cmeasure/cmeasure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmeasure.o -MD -MP -MF "$(DEPDIR)/cmeasure.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cmeasure.o `test -f 'cmeasure/cmeasure.cpp' || echo '$(srcdir)/'`cmeasure/cmeasure.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cmeasure.Tpo" "$(DEPDIR)/cmeasure.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cmeasure.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmeasure/cmeasure.cpp' object='cmeasure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cmeasure.Po' tmpdepfile='$(DEPDIR)/cmeasure.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmeasure.o `test -f 'cmeasure/cmeasure.cpp' || echo '$(srcdir)/'`cmeasure/cmeasure.cpp

cmeasure.obj: cmeasure/cmeasure.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmeasure.obj -MD -MP -MF "$(DEPDIR)/cmeasure.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cmeasure.obj `if test -f 'cmeasure/cmeasure.cpp'; then $(CYGPATH_W) 'cmeasure/cmeasure.cpp'; else $(CYGPATH_W) '$(srcdir)/cmeasure/cmeasure.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cmeasure.Tpo" "$(DEPDIR)/cmeasure.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cmeasure.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cmeasure/cmeasure.cpp' object='cmeasure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cmeasure.Po' tmpdepfile='$(DEPDIR)/cmeasure.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmeasure.obj `if test -f 'cmeasure/cmeasure.cpp'; then $(CYGPATH_W) 'cmeasure/cmeasure.cpp'; else $(CYGPATH_W) '$(srcdir)/cmeasure/cmeasure.cpp'; fi`

controlsconfig.o: controlconfig/controlsconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT controlsconfig.o -MD -MP -MF "$(DEPDIR)/controlsconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o controlsconfig.o `test -f 'controlconfig/controlsconfig.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/controlsconfig.Tpo" "$(DEPDIR)/controlsconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/controlsconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfig.cpp' object='controlsconfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/controlsconfig.Po' tmpdepfile='$(DEPDIR)/controlsconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o controlsconfig.o `test -f 'controlconfig/controlsconfig.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfig.cpp

controlsconfig.obj: controlconfig/controlsconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT controlsconfig.obj -MD -MP -MF "$(DEPDIR)/controlsconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o controlsconfig.obj `if test -f 'controlconfig/controlsconfig.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/controlsconfig.Tpo" "$(DEPDIR)/controlsconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/controlsconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfig.cpp' object='controlsconfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/controlsconfig.Po' tmpdepfile='$(DEPDIR)/controlsconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o controlsconfig.obj `if test -f 'controlconfig/controlsconfig.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfig.cpp'; fi`

controlsconfigcommon.o: controlconfig/controlsconfigcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT controlsconfigcommon.o -MD -MP -MF "$(DEPDIR)/controlsconfigcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o controlsconfigcommon.o `test -f 'controlconfig/controlsconfigcommon.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfigcommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/controlsconfigcommon.Tpo" "$(DEPDIR)/controlsconfigcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/controlsconfigcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfigcommon.cpp' object='controlsconfigcommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/controlsconfigcommon.Po' tmpdepfile='$(DEPDIR)/controlsconfigcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o controlsconfigcommon.o `test -f 'controlconfig/controlsconfigcommon.cpp' || echo '$(srcdir)/'`controlconfig/controlsconfigcommon.cpp

controlsconfigcommon.obj: controlconfig/controlsconfigcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT controlsconfigcommon.obj -MD -MP -MF "$(DEPDIR)/controlsconfigcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o controlsconfigcommon.obj `if test -f 'controlconfig/controlsconfigcommon.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfigcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfigcommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/controlsconfigcommon.Tpo" "$(DEPDIR)/controlsconfigcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/controlsconfigcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlconfig/controlsconfigcommon.cpp' object='controlsconfigcommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/controlsconfigcommon.Po' tmpdepfile='$(DEPDIR)/controlsconfigcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o controlsconfigcommon.obj `if test -f 'controlconfig/controlsconfigcommon.cpp'; then $(CYGPATH_W) 'controlconfig/controlsconfigcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/controlconfig/controlsconfigcommon.cpp'; fi`

cutscenes.o: cutscene/cutscenes.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cutscenes.o -MD -MP -MF "$(DEPDIR)/cutscenes.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cutscenes.o `test -f 'cutscene/cutscenes.cpp' || echo '$(srcdir)/'`cutscene/cutscenes.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cutscenes.Tpo" "$(DEPDIR)/cutscenes.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cutscenes.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/cutscenes.cpp' object='cutscenes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cutscenes.Po' tmpdepfile='$(DEPDIR)/cutscenes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cutscenes.o `test -f 'cutscene/cutscenes.cpp' || echo '$(srcdir)/'`cutscene/cutscenes.cpp

cutscenes.obj: cutscene/cutscenes.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cutscenes.obj -MD -MP -MF "$(DEPDIR)/cutscenes.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o cutscenes.obj `if test -f 'cutscene/cutscenes.cpp'; then $(CYGPATH_W) 'cutscene/cutscenes.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/cutscenes.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/cutscenes.Tpo" "$(DEPDIR)/cutscenes.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/cutscenes.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/cutscenes.cpp' object='cutscenes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cutscenes.Po' tmpdepfile='$(DEPDIR)/cutscenes.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cutscenes.obj `if test -f 'cutscene/cutscenes.cpp'; then $(CYGPATH_W) 'cutscene/cutscenes.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/cutscenes.cpp'; fi`

debris.o: debris/debris.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debris.o -MD -MP -MF "$(DEPDIR)/debris.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o debris.o `test -f 'debris/debris.cpp' || echo '$(srcdir)/'`debris/debris.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/debris.Tpo" "$(DEPDIR)/debris.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/debris.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debris/debris.cpp' object='debris.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/debris.Po' tmpdepfile='$(DEPDIR)/debris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debris.o `test -f 'debris/debris.cpp' || echo '$(srcdir)/'`debris/debris.cpp

debris.obj: debris/debris.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debris.obj -MD -MP -MF "$(DEPDIR)/debris.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o debris.obj `if test -f 'debris/debris.cpp'; then $(CYGPATH_W) 'debris/debris.cpp'; else $(CYGPATH_W) '$(srcdir)/debris/debris.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/debris.Tpo" "$(DEPDIR)/debris.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/debris.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debris/debris.cpp' object='debris.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/debris.Po' tmpdepfile='$(DEPDIR)/debris.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debris.obj `if test -f 'debris/debris.cpp'; then $(CYGPATH_W) 'debris/debris.cpp'; else $(CYGPATH_W) '$(srcdir)/debris/debris.cpp'; fi`

console.o: debugconsole/console.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT console.o -MD -MP -MF "$(DEPDIR)/console.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o console.o `test -f 'debugconsole/console.cpp' || echo '$(srcdir)/'`debugconsole/console.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/console.Tpo" "$(DEPDIR)/console.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/console.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debugconsole/console.cpp' object='console.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/console.Po' tmpdepfile='$(DEPDIR)/console.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o console.o `test -f 'debugconsole/console.cpp' || echo '$(srcdir)/'`debugconsole/console.cpp

console.obj: debugconsole/console.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT console.obj -MD -MP -MF "$(DEPDIR)/console.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o console.obj `if test -f 'debugconsole/console.cpp'; then $(CYGPATH_W) 'debugconsole/console.cpp'; else $(CYGPATH_W) '$(srcdir)/debugconsole/console.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/console.Tpo" "$(DEPDIR)/console.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/console.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='debugconsole/console.cpp' object='console.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/console.Po' tmpdepfile='$(DEPDIR)/console.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o console.obj `if test -f 'debugconsole/console.cpp'; then $(CYGPATH_W) 'debugconsole/console.cpp'; else $(CYGPATH_W) '$(srcdir)/debugconsole/console.cpp'; fi`

decals.o: decals/decals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decals.o -MD -MP -MF "$(DEPDIR)/decals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o decals.o `test -f 'decals/decals.cpp' || echo '$(srcdir)/'`decals/decals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/decals.Tpo" "$(DEPDIR)/decals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/decals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='decals/decals.cpp' object='decals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/decals.Po' tmpdepfile='$(DEPDIR)/decals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decals.o `test -f 'decals/decals.cpp' || echo '$(srcdir)/'`decals/decals.cpp

decals.obj: decals/decals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decals.obj -MD -MP -MF "$(DEPDIR)/decals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o decals.obj `if test -f 'decals/decals.cpp'; then $(CYGPATH_W) 'decals/decals.cpp'; else $(CYGPATH_W) '$(srcdir)/decals/decals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/decals.Tpo" "$(DEPDIR)/decals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/decals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='decals/decals.cpp' object='decals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/decals.Po' tmpdepfile='$(DEPDIR)/decals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decals.obj `if test -f 'decals/decals.cpp'; then $(CYGPATH_W) 'decals/decals.cpp'; else $(CYGPATH_W) '$(srcdir)/decals/decals.cpp'; fi`

demo.o: demo/demo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT demo.o -MD -MP -MF "$(DEPDIR)/demo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o demo.o `test -f 'demo/demo.cpp' || echo '$(srcdir)/'`demo/demo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/demo.Tpo" "$(DEPDIR)/demo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/demo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='demo/demo.cpp' object='demo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/demo.Po' tmpdepfile='$(DEPDIR)/demo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o demo.o `test -f 'demo/demo.cpp' || echo '$(srcdir)/'`demo/demo.cpp

demo.obj: demo/demo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT demo.obj -MD -MP -MF "$(DEPDIR)/demo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o demo.obj `if test -f 'demo/demo.cpp'; then $(CYGPATH_W) 'demo/demo.cpp'; else $(CYGPATH_W) '$(srcdir)/demo/demo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/demo.Tpo" "$(DEPDIR)/demo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/demo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='demo/demo.cpp' object='demo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/demo.Po' tmpdepfile='$(DEPDIR)/demo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o demo.obj `if test -f 'demo/demo.cpp'; then $(CYGPATH_W) 'demo/demo.cpp'; else $(CYGPATH_W) '$(srcdir)/demo/demo.cpp'; fi`

exceptionhandler.o: exceptionhandler/exceptionhandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exceptionhandler.o -MD -MP -MF "$(DEPDIR)/exceptionhandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exceptionhandler.o `test -f 'exceptionhandler/exceptionhandler.cpp' || echo '$(srcdir)/'`exceptionhandler/exceptionhandler.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/exceptionhandler.Tpo" "$(DEPDIR)/exceptionhandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exceptionhandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='exceptionhandler/exceptionhandler.cpp' object='exceptionhandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exceptionhandler.Po' tmpdepfile='$(DEPDIR)/exceptionhandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exceptionhandler.o `test -f 'exceptionhandler/exceptionhandler.cpp' || echo '$(srcdir)/'`exceptionhandler/exceptionhandler.cpp

exceptionhandler.obj: exceptionhandler/exceptionhandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exceptionhandler.obj -MD -MP -MF "$(DEPDIR)/exceptionhandler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o exceptionhandler.obj `if test -f 'exceptionhandler/exceptionhandler.cpp'; then $(CYGPATH_W) 'exceptionhandler/exceptionhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/exceptionhandler/exceptionhandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/exceptionhandler.Tpo" "$(DEPDIR)/exceptionhandler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/exceptionhandler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='exceptionhandler/exceptionhandler.cpp' object='exceptionhandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/exceptionhandler.Po' tmpdepfile='$(DEPDIR)/exceptionhandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exceptionhandler.obj `if test -f 'exceptionhandler/exceptionhandler.cpp'; then $(CYGPATH_W) 'exceptionhandler/exceptionhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/exceptionhandler/exceptionhandler.cpp'; fi`

fireballs.o: fireball/fireballs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fireballs.o -MD -MP -MF "$(DEPDIR)/fireballs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fireballs.o `test -f 'fireball/fireballs.cpp' || echo '$(srcdir)/'`fireball/fireballs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fireballs.Tpo" "$(DEPDIR)/fireballs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fireballs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/fireballs.cpp' object='fireballs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fireballs.Po' tmpdepfile='$(DEPDIR)/fireballs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fireballs.o `test -f 'fireball/fireballs.cpp' || echo '$(srcdir)/'`fireball/fireballs.cpp

fireballs.obj: fireball/fireballs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fireballs.obj -MD -MP -MF "$(DEPDIR)/fireballs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fireballs.obj `if test -f 'fireball/fireballs.cpp'; then $(CYGPATH_W) 'fireball/fireballs.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/fireballs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fireballs.Tpo" "$(DEPDIR)/fireballs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fireballs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/fireballs.cpp' object='fireballs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fireballs.Po' tmpdepfile='$(DEPDIR)/fireballs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fireballs.obj `if test -f 'fireball/fireballs.cpp'; then $(CYGPATH_W) 'fireball/fireballs.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/fireballs.cpp'; fi`

warpineffect.o: fireball/warpineffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT warpineffect.o -MD -MP -MF "$(DEPDIR)/warpineffect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o warpineffect.o `test -f 'fireball/warpineffect.cpp' || echo '$(srcdir)/'`fireball/warpineffect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/warpineffect.Tpo" "$(DEPDIR)/warpineffect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/warpineffect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/warpineffect.cpp' object='warpineffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/warpineffect.Po' tmpdepfile='$(DEPDIR)/warpineffect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o warpineffect.o `test -f 'fireball/warpineffect.cpp' || echo '$(srcdir)/'`fireball/warpineffect.cpp

warpineffect.obj: fireball/warpineffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT warpineffect.obj -MD -MP -MF "$(DEPDIR)/warpineffect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o warpineffect.obj `if test -f 'fireball/warpineffect.cpp'; then $(CYGPATH_W) 'fireball/warpineffect.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/warpineffect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/warpineffect.Tpo" "$(DEPDIR)/warpineffect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/warpineffect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fireball/warpineffect.cpp' object='warpineffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/warpineffect.Po' tmpdepfile='$(DEPDIR)/warpineffect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o warpineffect.obj `if test -f 'fireball/warpineffect.cpp'; then $(CYGPATH_W) 'fireball/warpineffect.cpp'; else $(CYGPATH_W) '$(srcdir)/fireball/warpineffect.cpp'; fi`

freespace.o: freespace2/freespace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT freespace.o -MD -MP -MF "$(DEPDIR)/freespace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o freespace.o `test -f 'freespace2/freespace.cpp' || echo '$(srcdir)/'`freespace2/freespace.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/freespace.Tpo" "$(DEPDIR)/freespace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/freespace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/freespace.cpp' object='freespace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/freespace.Po' tmpdepfile='$(DEPDIR)/freespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o freespace.o `test -f 'freespace2/freespace.cpp' || echo '$(srcdir)/'`freespace2/freespace.cpp

freespace.obj: freespace2/freespace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT freespace.obj -MD -MP -MF "$(DEPDIR)/freespace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o freespace.obj `if test -f 'freespace2/freespace.cpp'; then $(CYGPATH_W) 'freespace2/freespace.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/freespace.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/freespace.Tpo" "$(DEPDIR)/freespace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/freespace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/freespace.cpp' object='freespace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/freespace.Po' tmpdepfile='$(DEPDIR)/freespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o freespace.obj `if test -f 'freespace2/freespace.cpp'; then $(CYGPATH_W) 'freespace2/freespace.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/freespace.cpp'; fi`

levelpaging.o: freespace2/levelpaging.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT levelpaging.o -MD -MP -MF "$(DEPDIR)/levelpaging.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o levelpaging.o `test -f 'freespace2/levelpaging.cpp' || echo '$(srcdir)/'`freespace2/levelpaging.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/levelpaging.Tpo" "$(DEPDIR)/levelpaging.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/levelpaging.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/levelpaging.cpp' object='levelpaging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/levelpaging.Po' tmpdepfile='$(DEPDIR)/levelpaging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o levelpaging.o `test -f 'freespace2/levelpaging.cpp' || echo '$(srcdir)/'`freespace2/levelpaging.cpp

levelpaging.obj: freespace2/levelpaging.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT levelpaging.obj -MD -MP -MF "$(DEPDIR)/levelpaging.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o levelpaging.obj `if test -f 'freespace2/levelpaging.cpp'; then $(CYGPATH_W) 'freespace2/levelpaging.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/levelpaging.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/levelpaging.Tpo" "$(DEPDIR)/levelpaging.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/levelpaging.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freespace2/levelpaging.cpp' object='levelpaging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/levelpaging.Po' tmpdepfile='$(DEPDIR)/levelpaging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o levelpaging.obj `if test -f 'freespace2/levelpaging.cpp'; then $(CYGPATH_W) 'freespace2/levelpaging.cpp'; else $(CYGPATH_W) '$(srcdir)/freespace2/levelpaging.cpp'; fi`

contexthelp.o: gamehelp/contexthelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contexthelp.o -MD -MP -MF "$(DEPDIR)/contexthelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o contexthelp.o `test -f 'gamehelp/contexthelp.cpp' || echo '$(srcdir)/'`gamehelp/contexthelp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/contexthelp.Tpo" "$(DEPDIR)/contexthelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/contexthelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/contexthelp.cpp' object='contexthelp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/contexthelp.Po' tmpdepfile='$(DEPDIR)/contexthelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contexthelp.o `test -f 'gamehelp/contexthelp.cpp' || echo '$(srcdir)/'`gamehelp/contexthelp.cpp

contexthelp.obj: gamehelp/contexthelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT contexthelp.obj -MD -MP -MF "$(DEPDIR)/contexthelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o contexthelp.obj `if test -f 'gamehelp/contexthelp.cpp'; then $(CYGPATH_W) 'gamehelp/contexthelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/contexthelp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/contexthelp.Tpo" "$(DEPDIR)/contexthelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/contexthelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/contexthelp.cpp' object='contexthelp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/contexthelp.Po' tmpdepfile='$(DEPDIR)/contexthelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o contexthelp.obj `if test -f 'gamehelp/contexthelp.cpp'; then $(CYGPATH_W) 'gamehelp/contexthelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/contexthelp.cpp'; fi`

gameplayhelp.o: gamehelp/gameplayhelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameplayhelp.o -MD -MP -MF "$(DEPDIR)/gameplayhelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gameplayhelp.o `test -f 'gamehelp/gameplayhelp.cpp' || echo '$(srcdir)/'`gamehelp/gameplayhelp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gameplayhelp.Tpo" "$(DEPDIR)/gameplayhelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gameplayhelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/gameplayhelp.cpp' object='gameplayhelp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gameplayhelp.Po' tmpdepfile='$(DEPDIR)/gameplayhelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameplayhelp.o `test -f 'gamehelp/gameplayhelp.cpp' || echo '$(srcdir)/'`gamehelp/gameplayhelp.cpp

gameplayhelp.obj: gamehelp/gameplayhelp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameplayhelp.obj -MD -MP -MF "$(DEPDIR)/gameplayhelp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gameplayhelp.obj `if test -f 'gamehelp/gameplayhelp.cpp'; then $(CYGPATH_W) 'gamehelp/gameplayhelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/gameplayhelp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gameplayhelp.Tpo" "$(DEPDIR)/gameplayhelp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gameplayhelp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamehelp/gameplayhelp.cpp' object='gameplayhelp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gameplayhelp.Po' tmpdepfile='$(DEPDIR)/gameplayhelp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameplayhelp.obj `if test -f 'gamehelp/gameplayhelp.cpp'; then $(CYGPATH_W) 'gamehelp/gameplayhelp.cpp'; else $(CYGPATH_W) '$(srcdir)/gamehelp/gameplayhelp.cpp'; fi`

gamesequence.o: gamesequence/gamesequence.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamesequence.o -MD -MP -MF "$(DEPDIR)/gamesequence.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gamesequence.o `test -f 'gamesequence/gamesequence.cpp' || echo '$(srcdir)/'`gamesequence/gamesequence.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gamesequence.Tpo" "$(DEPDIR)/gamesequence.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gamesequence.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesequence/gamesequence.cpp' object='gamesequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gamesequence.Po' tmpdepfile='$(DEPDIR)/gamesequence.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamesequence.o `test -f 'gamesequence/gamesequence.cpp' || echo '$(srcdir)/'`gamesequence/gamesequence.cpp

gamesequence.obj: gamesequence/gamesequence.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamesequence.obj -MD -MP -MF "$(DEPDIR)/gamesequence.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gamesequence.obj `if test -f 'gamesequence/gamesequence.cpp'; then $(CYGPATH_W) 'gamesequence/gamesequence.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesequence/gamesequence.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gamesequence.Tpo" "$(DEPDIR)/gamesequence.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gamesequence.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesequence/gamesequence.cpp' object='gamesequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gamesequence.Po' tmpdepfile='$(DEPDIR)/gamesequence.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamesequence.obj `if test -f 'gamesequence/gamesequence.cpp'; then $(CYGPATH_W) 'gamesequence/gamesequence.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesequence/gamesequence.cpp'; fi`

alphacolors.o: globalincs/alphacolors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alphacolors.o -MD -MP -MF "$(DEPDIR)/alphacolors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o alphacolors.o `test -f 'globalincs/alphacolors.cpp' || echo '$(srcdir)/'`globalincs/alphacolors.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/alphacolors.Tpo" "$(DEPDIR)/alphacolors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/alphacolors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/alphacolors.cpp' object='alphacolors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/alphacolors.Po' tmpdepfile='$(DEPDIR)/alphacolors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alphacolors.o `test -f 'globalincs/alphacolors.cpp' || echo '$(srcdir)/'`globalincs/alphacolors.cpp

alphacolors.obj: globalincs/alphacolors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alphacolors.obj -MD -MP -MF "$(DEPDIR)/alphacolors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o alphacolors.obj `if test -f 'globalincs/alphacolors.cpp'; then $(CYGPATH_W) 'globalincs/alphacolors.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/alphacolors.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/alphacolors.Tpo" "$(DEPDIR)/alphacolors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/alphacolors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/alphacolors.cpp' object='alphacolors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/alphacolors.Po' tmpdepfile='$(DEPDIR)/alphacolors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alphacolors.obj `if test -f 'globalincs/alphacolors.cpp'; then $(CYGPATH_W) 'globalincs/alphacolors.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/alphacolors.cpp'; fi`

crypt.o: globalincs/crypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypt.o -MD -MP -MF "$(DEPDIR)/crypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o crypt.o `test -f 'globalincs/crypt.cpp' || echo '$(srcdir)/'`globalincs/crypt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/crypt.Tpo" "$(DEPDIR)/crypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/crypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/crypt.cpp' object='crypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/crypt.Po' tmpdepfile='$(DEPDIR)/crypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypt.o `test -f 'globalincs/crypt.cpp' || echo '$(srcdir)/'`globalincs/crypt.cpp

crypt.obj: globalincs/crypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypt.obj -MD -MP -MF "$(DEPDIR)/crypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o crypt.obj `if test -f 'globalincs/crypt.cpp'; then $(CYGPATH_W) 'globalincs/crypt.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/crypt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/crypt.Tpo" "$(DEPDIR)/crypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/crypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/crypt.cpp' object='crypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/crypt.Po' tmpdepfile='$(DEPDIR)/crypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypt.obj `if test -f 'globalincs/crypt.cpp'; then $(CYGPATH_W) 'globalincs/crypt.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/crypt.cpp'; fi`

systemvars.o: globalincs/systemvars.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT systemvars.o -MD -MP -MF "$(DEPDIR)/systemvars.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o systemvars.o `test -f 'globalincs/systemvars.cpp' || echo '$(srcdir)/'`globalincs/systemvars.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/systemvars.Tpo" "$(DEPDIR)/systemvars.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/systemvars.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/systemvars.cpp' object='systemvars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/systemvars.Po' tmpdepfile='$(DEPDIR)/systemvars.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o systemvars.o `test -f 'globalincs/systemvars.cpp' || echo '$(srcdir)/'`globalincs/systemvars.cpp

systemvars.obj: globalincs/systemvars.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT systemvars.obj -MD -MP -MF "$(DEPDIR)/systemvars.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o systemvars.obj `if test -f 'globalincs/systemvars.cpp'; then $(CYGPATH_W) 'globalincs/systemvars.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/systemvars.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/systemvars.Tpo" "$(DEPDIR)/systemvars.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/systemvars.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/systemvars.cpp' object='systemvars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/systemvars.Po' tmpdepfile='$(DEPDIR)/systemvars.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o systemvars.obj `if test -f 'globalincs/systemvars.cpp'; then $(CYGPATH_W) 'globalincs/systemvars.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/systemvars.cpp'; fi`

version.o: globalincs/version.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version.o -MD -MP -MF "$(DEPDIR)/version.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o version.o `test -f 'globalincs/version.cpp' || echo '$(srcdir)/'`globalincs/version.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/version.Tpo" "$(DEPDIR)/version.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/version.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/version.cpp' object='version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/version.Po' tmpdepfile='$(DEPDIR)/version.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version.o `test -f 'globalincs/version.cpp' || echo '$(srcdir)/'`globalincs/version.cpp

version.obj: globalincs/version.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT version.obj -MD -MP -MF "$(DEPDIR)/version.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o version.obj `if test -f 'globalincs/version.cpp'; then $(CYGPATH_W) 'globalincs/version.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/version.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/version.Tpo" "$(DEPDIR)/version.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/version.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/version.cpp' object='version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/version.Po' tmpdepfile='$(DEPDIR)/version.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o version.obj `if test -f 'globalincs/version.cpp'; then $(CYGPATH_W) 'globalincs/version.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/version.cpp'; fi`

2d.o: graphics/2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 2d.o -MD -MP -MF "$(DEPDIR)/2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 2d.o `test -f 'graphics/2d.cpp' || echo '$(srcdir)/'`graphics/2d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/2d.Tpo" "$(DEPDIR)/2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/2d.cpp' object='2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/2d.Po' tmpdepfile='$(DEPDIR)/2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 2d.o `test -f 'graphics/2d.cpp' || echo '$(srcdir)/'`graphics/2d.cpp

2d.obj: graphics/2d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 2d.obj -MD -MP -MF "$(DEPDIR)/2d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 2d.obj `if test -f 'graphics/2d.cpp'; then $(CYGPATH_W) 'graphics/2d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/2d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/2d.Tpo" "$(DEPDIR)/2d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/2d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/2d.cpp' object='2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/2d.Po' tmpdepfile='$(DEPDIR)/2d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 2d.obj `if test -f 'graphics/2d.cpp'; then $(CYGPATH_W) 'graphics/2d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/2d.cpp'; fi`

aaline.o: graphics/aaline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aaline.o -MD -MP -MF "$(DEPDIR)/aaline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aaline.o `test -f 'graphics/aaline.cpp' || echo '$(srcdir)/'`graphics/aaline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aaline.Tpo" "$(DEPDIR)/aaline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aaline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/aaline.cpp' object='aaline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aaline.Po' tmpdepfile='$(DEPDIR)/aaline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aaline.o `test -f 'graphics/aaline.cpp' || echo '$(srcdir)/'`graphics/aaline.cpp

aaline.obj: graphics/aaline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aaline.obj -MD -MP -MF "$(DEPDIR)/aaline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aaline.obj `if test -f 'graphics/aaline.cpp'; then $(CYGPATH_W) 'graphics/aaline.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/aaline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aaline.Tpo" "$(DEPDIR)/aaline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aaline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/aaline.cpp' object='aaline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aaline.Po' tmpdepfile='$(DEPDIR)/aaline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aaline.obj `if test -f 'graphics/aaline.cpp'; then $(CYGPATH_W) 'graphics/aaline.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/aaline.cpp'; fi`

bitblt.o: graphics/bitblt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitblt.o -MD -MP -MF "$(DEPDIR)/bitblt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o bitblt.o `test -f 'graphics/bitblt.cpp' || echo '$(srcdir)/'`graphics/bitblt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/bitblt.Tpo" "$(DEPDIR)/bitblt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/bitblt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/bitblt.cpp' object='bitblt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bitblt.Po' tmpdepfile='$(DEPDIR)/bitblt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitblt.o `test -f 'graphics/bitblt.cpp' || echo '$(srcdir)/'`graphics/bitblt.cpp

bitblt.obj: graphics/bitblt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitblt.obj -MD -MP -MF "$(DEPDIR)/bitblt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o bitblt.obj `if test -f 'graphics/bitblt.cpp'; then $(CYGPATH_W) 'graphics/bitblt.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/bitblt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/bitblt.Tpo" "$(DEPDIR)/bitblt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/bitblt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/bitblt.cpp' object='bitblt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bitblt.Po' tmpdepfile='$(DEPDIR)/bitblt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitblt.obj `if test -f 'graphics/bitblt.cpp'; then $(CYGPATH_W) 'graphics/bitblt.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/bitblt.cpp'; fi`

circle.o: graphics/circle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT circle.o -MD -MP -MF "$(DEPDIR)/circle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o circle.o `test -f 'graphics/circle.cpp' || echo '$(srcdir)/'`graphics/circle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/circle.Tpo" "$(DEPDIR)/circle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/circle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/circle.cpp' object='circle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/circle.Po' tmpdepfile='$(DEPDIR)/circle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o circle.o `test -f 'graphics/circle.cpp' || echo '$(srcdir)/'`graphics/circle.cpp

circle.obj: graphics/circle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT circle.obj -MD -MP -MF "$(DEPDIR)/circle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o circle.obj `if test -f 'graphics/circle.cpp'; then $(CYGPATH_W) 'graphics/circle.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/circle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/circle.Tpo" "$(DEPDIR)/circle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/circle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/circle.cpp' object='circle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/circle.Po' tmpdepfile='$(DEPDIR)/circle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o circle.obj `if test -f 'graphics/circle.cpp'; then $(CYGPATH_W) 'graphics/circle.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/circle.cpp'; fi`

colors.o: graphics/colors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT colors.o -MD -MP -MF "$(DEPDIR)/colors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o colors.o `test -f 'graphics/colors.cpp' || echo '$(srcdir)/'`graphics/colors.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/colors.Tpo" "$(DEPDIR)/colors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/colors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/colors.cpp' object='colors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/colors.Po' tmpdepfile='$(DEPDIR)/colors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o colors.o `test -f 'graphics/colors.cpp' || echo '$(srcdir)/'`graphics/colors.cpp

colors.obj: graphics/colors.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT colors.obj -MD -MP -MF "$(DEPDIR)/colors.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o colors.obj `if test -f 'graphics/colors.cpp'; then $(CYGPATH_W) 'graphics/colors.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/colors.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/colors.Tpo" "$(DEPDIR)/colors.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/colors.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/colors.cpp' object='colors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/colors.Po' tmpdepfile='$(DEPDIR)/colors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o colors.obj `if test -f 'graphics/colors.cpp'; then $(CYGPATH_W) 'graphics/colors.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/colors.cpp'; fi`

font.o: graphics/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.o -MD -MP -MF "$(DEPDIR)/font.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o font.o `test -f 'graphics/font.cpp' || echo '$(srcdir)/'`graphics/font.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/font.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/font.cpp' object='font.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/font.Po' tmpdepfile='$(DEPDIR)/font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.o `test -f 'graphics/font.cpp' || echo '$(srcdir)/'`graphics/font.cpp

font.obj: graphics/font.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.obj -MD -MP -MF "$(DEPDIR)/font.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o font.obj `if test -f 'graphics/font.cpp'; then $(CYGPATH_W) 'graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/font.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/font.Tpo" "$(DEPDIR)/font.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/font.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/font.cpp' object='font.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/font.Po' tmpdepfile='$(DEPDIR)/font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.obj `if test -f 'graphics/font.cpp'; then $(CYGPATH_W) 'graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/font.cpp'; fi`

gradient.o: graphics/gradient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gradient.o -MD -MP -MF "$(DEPDIR)/gradient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gradient.o `test -f 'graphics/gradient.cpp' || echo '$(srcdir)/'`graphics/gradient.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gradient.Tpo" "$(DEPDIR)/gradient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gradient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gradient.cpp' object='gradient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gradient.Po' tmpdepfile='$(DEPDIR)/gradient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gradient.o `test -f 'graphics/gradient.cpp' || echo '$(srcdir)/'`graphics/gradient.cpp

gradient.obj: graphics/gradient.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gradient.obj -MD -MP -MF "$(DEPDIR)/gradient.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gradient.obj `if test -f 'graphics/gradient.cpp'; then $(CYGPATH_W) 'graphics/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gradient.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gradient.Tpo" "$(DEPDIR)/gradient.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gradient.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gradient.cpp' object='gradient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gradient.Po' tmpdepfile='$(DEPDIR)/gradient.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gradient.obj `if test -f 'graphics/gradient.cpp'; then $(CYGPATH_W) 'graphics/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gradient.cpp'; fi`

gropengl.o: graphics/gropengl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gropengl.o -MD -MP -MF "$(DEPDIR)/gropengl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gropengl.o `test -f 'graphics/gropengl.cpp' || echo '$(srcdir)/'`graphics/gropengl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gropengl.Tpo" "$(DEPDIR)/gropengl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gropengl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gropengl.cpp' object='gropengl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gropengl.Po' tmpdepfile='$(DEPDIR)/gropengl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gropengl.o `test -f 'graphics/gropengl.cpp' || echo '$(srcdir)/'`graphics/gropengl.cpp

gropengl.obj: graphics/gropengl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gropengl.obj -MD -MP -MF "$(DEPDIR)/gropengl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gropengl.obj `if test -f 'graphics/gropengl.cpp'; then $(CYGPATH_W) 'graphics/gropengl.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gropengl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gropengl.Tpo" "$(DEPDIR)/gropengl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gropengl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/gropengl.cpp' object='gropengl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gropengl.Po' tmpdepfile='$(DEPDIR)/gropengl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gropengl.obj `if test -f 'graphics/gropengl.cpp'; then $(CYGPATH_W) 'graphics/gropengl.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/gropengl.cpp'; fi`

grzbuffer.o: graphics/grzbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grzbuffer.o -MD -MP -MF "$(DEPDIR)/grzbuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grzbuffer.o `test -f 'graphics/grzbuffer.cpp' || echo '$(srcdir)/'`graphics/grzbuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grzbuffer.Tpo" "$(DEPDIR)/grzbuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grzbuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grzbuffer.cpp' object='grzbuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grzbuffer.Po' tmpdepfile='$(DEPDIR)/grzbuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grzbuffer.o `test -f 'graphics/grzbuffer.cpp' || echo '$(srcdir)/'`graphics/grzbuffer.cpp

grzbuffer.obj: graphics/grzbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grzbuffer.obj -MD -MP -MF "$(DEPDIR)/grzbuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grzbuffer.obj `if test -f 'graphics/grzbuffer.cpp'; then $(CYGPATH_W) 'graphics/grzbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grzbuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grzbuffer.Tpo" "$(DEPDIR)/grzbuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grzbuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grzbuffer.cpp' object='grzbuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grzbuffer.Po' tmpdepfile='$(DEPDIR)/grzbuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grzbuffer.obj `if test -f 'graphics/grzbuffer.cpp'; then $(CYGPATH_W) 'graphics/grzbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grzbuffer.cpp'; fi`

line.o: graphics/line.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT line.o -MD -MP -MF "$(DEPDIR)/line.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o line.o `test -f 'graphics/line.cpp' || echo '$(srcdir)/'`graphics/line.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/line.Tpo" "$(DEPDIR)/line.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/line.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/line.cpp' object='line.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/line.Po' tmpdepfile='$(DEPDIR)/line.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o line.o `test -f 'graphics/line.cpp' || echo '$(srcdir)/'`graphics/line.cpp

line.obj: graphics/line.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT line.obj -MD -MP -MF "$(DEPDIR)/line.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o line.obj `if test -f 'graphics/line.cpp'; then $(CYGPATH_W) 'graphics/line.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/line.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/line.Tpo" "$(DEPDIR)/line.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/line.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/line.cpp' object='line.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/line.Po' tmpdepfile='$(DEPDIR)/line.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o line.obj `if test -f 'graphics/line.cpp'; then $(CYGPATH_W) 'graphics/line.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/line.cpp'; fi`

pixel.o: graphics/pixel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pixel.o -MD -MP -MF "$(DEPDIR)/pixel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pixel.o `test -f 'graphics/pixel.cpp' || echo '$(srcdir)/'`graphics/pixel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pixel.Tpo" "$(DEPDIR)/pixel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pixel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/pixel.cpp' object='pixel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pixel.Po' tmpdepfile='$(DEPDIR)/pixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pixel.o `test -f 'graphics/pixel.cpp' || echo '$(srcdir)/'`graphics/pixel.cpp

pixel.obj: graphics/pixel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pixel.obj -MD -MP -MF "$(DEPDIR)/pixel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pixel.obj `if test -f 'graphics/pixel.cpp'; then $(CYGPATH_W) 'graphics/pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/pixel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pixel.Tpo" "$(DEPDIR)/pixel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pixel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/pixel.cpp' object='pixel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pixel.Po' tmpdepfile='$(DEPDIR)/pixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pixel.obj `if test -f 'graphics/pixel.cpp'; then $(CYGPATH_W) 'graphics/pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/pixel.cpp'; fi`

rect.o: graphics/rect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rect.o -MD -MP -MF "$(DEPDIR)/rect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rect.o `test -f 'graphics/rect.cpp' || echo '$(srcdir)/'`graphics/rect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rect.Tpo" "$(DEPDIR)/rect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/rect.cpp' object='rect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rect.Po' tmpdepfile='$(DEPDIR)/rect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rect.o `test -f 'graphics/rect.cpp' || echo '$(srcdir)/'`graphics/rect.cpp

rect.obj: graphics/rect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rect.obj -MD -MP -MF "$(DEPDIR)/rect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rect.obj `if test -f 'graphics/rect.cpp'; then $(CYGPATH_W) 'graphics/rect.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/rect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rect.Tpo" "$(DEPDIR)/rect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/rect.cpp' object='rect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rect.Po' tmpdepfile='$(DEPDIR)/rect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rect.obj `if test -f 'graphics/rect.cpp'; then $(CYGPATH_W) 'graphics/rect.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/rect.cpp'; fi`

scaler.o: graphics/scaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaler.o -MD -MP -MF "$(DEPDIR)/scaler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scaler.o `test -f 'graphics/scaler.cpp' || echo '$(srcdir)/'`graphics/scaler.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scaler.Tpo" "$(DEPDIR)/scaler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scaler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/scaler.cpp' object='scaler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scaler.Po' tmpdepfile='$(DEPDIR)/scaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaler.o `test -f 'graphics/scaler.cpp' || echo '$(srcdir)/'`graphics/scaler.cpp

scaler.obj: graphics/scaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaler.obj -MD -MP -MF "$(DEPDIR)/scaler.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scaler.obj `if test -f 'graphics/scaler.cpp'; then $(CYGPATH_W) 'graphics/scaler.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/scaler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scaler.Tpo" "$(DEPDIR)/scaler.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scaler.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/scaler.cpp' object='scaler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scaler.Po' tmpdepfile='$(DEPDIR)/scaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaler.obj `if test -f 'graphics/scaler.cpp'; then $(CYGPATH_W) 'graphics/scaler.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/scaler.cpp'; fi`

shade.o: graphics/shade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shade.o -MD -MP -MF "$(DEPDIR)/shade.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shade.o `test -f 'graphics/shade.cpp' || echo '$(srcdir)/'`graphics/shade.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shade.Tpo" "$(DEPDIR)/shade.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shade.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/shade.cpp' object='shade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shade.Po' tmpdepfile='$(DEPDIR)/shade.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shade.o `test -f 'graphics/shade.cpp' || echo '$(srcdir)/'`graphics/shade.cpp

shade.obj: graphics/shade.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shade.obj -MD -MP -MF "$(DEPDIR)/shade.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shade.obj `if test -f 'graphics/shade.cpp'; then $(CYGPATH_W) 'graphics/shade.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/shade.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shade.Tpo" "$(DEPDIR)/shade.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shade.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/shade.cpp' object='shade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shade.Po' tmpdepfile='$(DEPDIR)/shade.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shade.obj `if test -f 'graphics/shade.cpp'; then $(CYGPATH_W) 'graphics/shade.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/shade.cpp'; fi`

hud.o: hud/hud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hud.o -MD -MP -MF "$(DEPDIR)/hud.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hud.o `test -f 'hud/hud.cpp' || echo '$(srcdir)/'`hud/hud.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hud.Tpo" "$(DEPDIR)/hud.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hud.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hud.cpp' object='hud.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hud.Po' tmpdepfile='$(DEPDIR)/hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hud.o `test -f 'hud/hud.cpp' || echo '$(srcdir)/'`hud/hud.cpp

hud.obj: hud/hud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hud.obj -MD -MP -MF "$(DEPDIR)/hud.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hud.obj `if test -f 'hud/hud.cpp'; then $(CYGPATH_W) 'hud/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hud.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hud.Tpo" "$(DEPDIR)/hud.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hud.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hud.cpp' object='hud.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hud.Po' tmpdepfile='$(DEPDIR)/hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hud.obj `if test -f 'hud/hud.cpp'; then $(CYGPATH_W) 'hud/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hud.cpp'; fi`

hudartillery.o: hud/hudartillery.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudartillery.o -MD -MP -MF "$(DEPDIR)/hudartillery.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudartillery.o `test -f 'hud/hudartillery.cpp' || echo '$(srcdir)/'`hud/hudartillery.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudartillery.Tpo" "$(DEPDIR)/hudartillery.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudartillery.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudartillery.cpp' object='hudartillery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudartillery.Po' tmpdepfile='$(DEPDIR)/hudartillery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudartillery.o `test -f 'hud/hudartillery.cpp' || echo '$(srcdir)/'`hud/hudartillery.cpp

hudartillery.obj: hud/hudartillery.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudartillery.obj -MD -MP -MF "$(DEPDIR)/hudartillery.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudartillery.obj `if test -f 'hud/hudartillery.cpp'; then $(CYGPATH_W) 'hud/hudartillery.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudartillery.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudartillery.Tpo" "$(DEPDIR)/hudartillery.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudartillery.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudartillery.cpp' object='hudartillery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudartillery.Po' tmpdepfile='$(DEPDIR)/hudartillery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudartillery.obj `if test -f 'hud/hudartillery.cpp'; then $(CYGPATH_W) 'hud/hudartillery.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudartillery.cpp'; fi`

hudbrackets.o: hud/hudbrackets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudbrackets.o -MD -MP -MF "$(DEPDIR)/hudbrackets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudbrackets.o `test -f 'hud/hudbrackets.cpp' || echo '$(srcdir)/'`hud/hudbrackets.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudbrackets.Tpo" "$(DEPDIR)/hudbrackets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudbrackets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudbrackets.cpp' object='hudbrackets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudbrackets.Po' tmpdepfile='$(DEPDIR)/hudbrackets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudbrackets.o `test -f 'hud/hudbrackets.cpp' || echo '$(srcdir)/'`hud/hudbrackets.cpp

hudbrackets.obj: hud/hudbrackets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudbrackets.obj -MD -MP -MF "$(DEPDIR)/hudbrackets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudbrackets.obj `if test -f 'hud/hudbrackets.cpp'; then $(CYGPATH_W) 'hud/hudbrackets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudbrackets.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudbrackets.Tpo" "$(DEPDIR)/hudbrackets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudbrackets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudbrackets.cpp' object='hudbrackets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudbrackets.Po' tmpdepfile='$(DEPDIR)/hudbrackets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudbrackets.obj `if test -f 'hud/hudbrackets.cpp'; then $(CYGPATH_W) 'hud/hudbrackets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudbrackets.cpp'; fi`

hudconfig.o: hud/hudconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudconfig.o -MD -MP -MF "$(DEPDIR)/hudconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudconfig.o `test -f 'hud/hudconfig.cpp' || echo '$(srcdir)/'`hud/hudconfig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudconfig.Tpo" "$(DEPDIR)/hudconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudconfig.cpp' object='hudconfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudconfig.Po' tmpdepfile='$(DEPDIR)/hudconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudconfig.o `test -f 'hud/hudconfig.cpp' || echo '$(srcdir)/'`hud/hudconfig.cpp

hudconfig.obj: hud/hudconfig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudconfig.obj -MD -MP -MF "$(DEPDIR)/hudconfig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudconfig.obj `if test -f 'hud/hudconfig.cpp'; then $(CYGPATH_W) 'hud/hudconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudconfig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudconfig.Tpo" "$(DEPDIR)/hudconfig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudconfig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudconfig.cpp' object='hudconfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudconfig.Po' tmpdepfile='$(DEPDIR)/hudconfig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudconfig.obj `if test -f 'hud/hudconfig.cpp'; then $(CYGPATH_W) 'hud/hudconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudconfig.cpp'; fi`

hudescort.o: hud/hudescort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudescort.o -MD -MP -MF "$(DEPDIR)/hudescort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudescort.o `test -f 'hud/hudescort.cpp' || echo '$(srcdir)/'`hud/hudescort.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudescort.Tpo" "$(DEPDIR)/hudescort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudescort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudescort.cpp' object='hudescort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudescort.Po' tmpdepfile='$(DEPDIR)/hudescort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudescort.o `test -f 'hud/hudescort.cpp' || echo '$(srcdir)/'`hud/hudescort.cpp

hudescort.obj: hud/hudescort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudescort.obj -MD -MP -MF "$(DEPDIR)/hudescort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudescort.obj `if test -f 'hud/hudescort.cpp'; then $(CYGPATH_W) 'hud/hudescort.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudescort.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudescort.Tpo" "$(DEPDIR)/hudescort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudescort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudescort.cpp' object='hudescort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudescort.Po' tmpdepfile='$(DEPDIR)/hudescort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudescort.obj `if test -f 'hud/hudescort.cpp'; then $(CYGPATH_W) 'hud/hudescort.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudescort.cpp'; fi`

hudets.o: hud/hudets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudets.o -MD -MP -MF "$(DEPDIR)/hudets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudets.o `test -f 'hud/hudets.cpp' || echo '$(srcdir)/'`hud/hudets.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudets.Tpo" "$(DEPDIR)/hudets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudets.cpp' object='hudets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudets.Po' tmpdepfile='$(DEPDIR)/hudets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudets.o `test -f 'hud/hudets.cpp' || echo '$(srcdir)/'`hud/hudets.cpp

hudets.obj: hud/hudets.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudets.obj -MD -MP -MF "$(DEPDIR)/hudets.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudets.obj `if test -f 'hud/hudets.cpp'; then $(CYGPATH_W) 'hud/hudets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudets.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudets.Tpo" "$(DEPDIR)/hudets.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudets.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudets.cpp' object='hudets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudets.Po' tmpdepfile='$(DEPDIR)/hudets.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudets.obj `if test -f 'hud/hudets.cpp'; then $(CYGPATH_W) 'hud/hudets.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudets.cpp'; fi`

hudlock.o: hud/hudlock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudlock.o -MD -MP -MF "$(DEPDIR)/hudlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudlock.o `test -f 'hud/hudlock.cpp' || echo '$(srcdir)/'`hud/hudlock.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudlock.Tpo" "$(DEPDIR)/hudlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudlock.cpp' object='hudlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudlock.Po' tmpdepfile='$(DEPDIR)/hudlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudlock.o `test -f 'hud/hudlock.cpp' || echo '$(srcdir)/'`hud/hudlock.cpp

hudlock.obj: hud/hudlock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudlock.obj -MD -MP -MF "$(DEPDIR)/hudlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudlock.obj `if test -f 'hud/hudlock.cpp'; then $(CYGPATH_W) 'hud/hudlock.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudlock.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudlock.Tpo" "$(DEPDIR)/hudlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudlock.cpp' object='hudlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudlock.Po' tmpdepfile='$(DEPDIR)/hudlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudlock.obj `if test -f 'hud/hudlock.cpp'; then $(CYGPATH_W) 'hud/hudlock.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudlock.cpp'; fi`

hudmessage.o: hud/hudmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudmessage.o -MD -MP -MF "$(DEPDIR)/hudmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudmessage.o `test -f 'hud/hudmessage.cpp' || echo '$(srcdir)/'`hud/hudmessage.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudmessage.Tpo" "$(DEPDIR)/hudmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudmessage.cpp' object='hudmessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudmessage.Po' tmpdepfile='$(DEPDIR)/hudmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudmessage.o `test -f 'hud/hudmessage.cpp' || echo '$(srcdir)/'`hud/hudmessage.cpp

hudmessage.obj: hud/hudmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudmessage.obj -MD -MP -MF "$(DEPDIR)/hudmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudmessage.obj `if test -f 'hud/hudmessage.cpp'; then $(CYGPATH_W) 'hud/hudmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudmessage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudmessage.Tpo" "$(DEPDIR)/hudmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudmessage.cpp' object='hudmessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudmessage.Po' tmpdepfile='$(DEPDIR)/hudmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudmessage.obj `if test -f 'hud/hudmessage.cpp'; then $(CYGPATH_W) 'hud/hudmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudmessage.cpp'; fi`

hudreticle.o: hud/hudreticle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudreticle.o -MD -MP -MF "$(DEPDIR)/hudreticle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudreticle.o `test -f 'hud/hudreticle.cpp' || echo '$(srcdir)/'`hud/hudreticle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudreticle.Tpo" "$(DEPDIR)/hudreticle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudreticle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudreticle.cpp' object='hudreticle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudreticle.Po' tmpdepfile='$(DEPDIR)/hudreticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudreticle.o `test -f 'hud/hudreticle.cpp' || echo '$(srcdir)/'`hud/hudreticle.cpp

hudreticle.obj: hud/hudreticle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudreticle.obj -MD -MP -MF "$(DEPDIR)/hudreticle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudreticle.obj `if test -f 'hud/hudreticle.cpp'; then $(CYGPATH_W) 'hud/hudreticle.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudreticle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudreticle.Tpo" "$(DEPDIR)/hudreticle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudreticle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudreticle.cpp' object='hudreticle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudreticle.Po' tmpdepfile='$(DEPDIR)/hudreticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudreticle.obj `if test -f 'hud/hudreticle.cpp'; then $(CYGPATH_W) 'hud/hudreticle.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudreticle.cpp'; fi`

hudshield.o: hud/hudshield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudshield.o -MD -MP -MF "$(DEPDIR)/hudshield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudshield.o `test -f 'hud/hudshield.cpp' || echo '$(srcdir)/'`hud/hudshield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudshield.Tpo" "$(DEPDIR)/hudshield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudshield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudshield.cpp' object='hudshield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudshield.Po' tmpdepfile='$(DEPDIR)/hudshield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudshield.o `test -f 'hud/hudshield.cpp' || echo '$(srcdir)/'`hud/hudshield.cpp

hudshield.obj: hud/hudshield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudshield.obj -MD -MP -MF "$(DEPDIR)/hudshield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudshield.obj `if test -f 'hud/hudshield.cpp'; then $(CYGPATH_W) 'hud/hudshield.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudshield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudshield.Tpo" "$(DEPDIR)/hudshield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudshield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudshield.cpp' object='hudshield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudshield.Po' tmpdepfile='$(DEPDIR)/hudshield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudshield.obj `if test -f 'hud/hudshield.cpp'; then $(CYGPATH_W) 'hud/hudshield.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudshield.cpp'; fi`

hudsquadmsg.o: hud/hudsquadmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudsquadmsg.o -MD -MP -MF "$(DEPDIR)/hudsquadmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudsquadmsg.o `test -f 'hud/hudsquadmsg.cpp' || echo '$(srcdir)/'`hud/hudsquadmsg.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudsquadmsg.Tpo" "$(DEPDIR)/hudsquadmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudsquadmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudsquadmsg.cpp' object='hudsquadmsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudsquadmsg.Po' tmpdepfile='$(DEPDIR)/hudsquadmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudsquadmsg.o `test -f 'hud/hudsquadmsg.cpp' || echo '$(srcdir)/'`hud/hudsquadmsg.cpp

hudsquadmsg.obj: hud/hudsquadmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudsquadmsg.obj -MD -MP -MF "$(DEPDIR)/hudsquadmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudsquadmsg.obj `if test -f 'hud/hudsquadmsg.cpp'; then $(CYGPATH_W) 'hud/hudsquadmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudsquadmsg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudsquadmsg.Tpo" "$(DEPDIR)/hudsquadmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudsquadmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudsquadmsg.cpp' object='hudsquadmsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudsquadmsg.Po' tmpdepfile='$(DEPDIR)/hudsquadmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudsquadmsg.obj `if test -f 'hud/hudsquadmsg.cpp'; then $(CYGPATH_W) 'hud/hudsquadmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudsquadmsg.cpp'; fi`

hudtarget.o: hud/hudtarget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudtarget.o -MD -MP -MF "$(DEPDIR)/hudtarget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudtarget.o `test -f 'hud/hudtarget.cpp' || echo '$(srcdir)/'`hud/hudtarget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudtarget.Tpo" "$(DEPDIR)/hudtarget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudtarget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtarget.cpp' object='hudtarget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudtarget.Po' tmpdepfile='$(DEPDIR)/hudtarget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudtarget.o `test -f 'hud/hudtarget.cpp' || echo '$(srcdir)/'`hud/hudtarget.cpp

hudtarget.obj: hud/hudtarget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudtarget.obj -MD -MP -MF "$(DEPDIR)/hudtarget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudtarget.obj `if test -f 'hud/hudtarget.cpp'; then $(CYGPATH_W) 'hud/hudtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtarget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudtarget.Tpo" "$(DEPDIR)/hudtarget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudtarget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtarget.cpp' object='hudtarget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudtarget.Po' tmpdepfile='$(DEPDIR)/hudtarget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudtarget.obj `if test -f 'hud/hudtarget.cpp'; then $(CYGPATH_W) 'hud/hudtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtarget.cpp'; fi`

hudtargetbox.o: hud/hudtargetbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudtargetbox.o -MD -MP -MF "$(DEPDIR)/hudtargetbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudtargetbox.o `test -f 'hud/hudtargetbox.cpp' || echo '$(srcdir)/'`hud/hudtargetbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudtargetbox.Tpo" "$(DEPDIR)/hudtargetbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudtargetbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtargetbox.cpp' object='hudtargetbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudtargetbox.Po' tmpdepfile='$(DEPDIR)/hudtargetbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudtargetbox.o `test -f 'hud/hudtargetbox.cpp' || echo '$(srcdir)/'`hud/hudtargetbox.cpp

hudtargetbox.obj: hud/hudtargetbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudtargetbox.obj -MD -MP -MF "$(DEPDIR)/hudtargetbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudtargetbox.obj `if test -f 'hud/hudtargetbox.cpp'; then $(CYGPATH_W) 'hud/hudtargetbox.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtargetbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudtargetbox.Tpo" "$(DEPDIR)/hudtargetbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudtargetbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudtargetbox.cpp' object='hudtargetbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudtargetbox.Po' tmpdepfile='$(DEPDIR)/hudtargetbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudtargetbox.obj `if test -f 'hud/hudtargetbox.cpp'; then $(CYGPATH_W) 'hud/hudtargetbox.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudtargetbox.cpp'; fi`

hudwingmanstatus.o: hud/hudwingmanstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudwingmanstatus.o -MD -MP -MF "$(DEPDIR)/hudwingmanstatus.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudwingmanstatus.o `test -f 'hud/hudwingmanstatus.cpp' || echo '$(srcdir)/'`hud/hudwingmanstatus.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudwingmanstatus.Tpo" "$(DEPDIR)/hudwingmanstatus.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudwingmanstatus.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudwingmanstatus.cpp' object='hudwingmanstatus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudwingmanstatus.Po' tmpdepfile='$(DEPDIR)/hudwingmanstatus.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudwingmanstatus.o `test -f 'hud/hudwingmanstatus.cpp' || echo '$(srcdir)/'`hud/hudwingmanstatus.cpp

hudwingmanstatus.obj: hud/hudwingmanstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudwingmanstatus.obj -MD -MP -MF "$(DEPDIR)/hudwingmanstatus.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudwingmanstatus.obj `if test -f 'hud/hudwingmanstatus.cpp'; then $(CYGPATH_W) 'hud/hudwingmanstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudwingmanstatus.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudwingmanstatus.Tpo" "$(DEPDIR)/hudwingmanstatus.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudwingmanstatus.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudwingmanstatus.cpp' object='hudwingmanstatus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudwingmanstatus.Po' tmpdepfile='$(DEPDIR)/hudwingmanstatus.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudwingmanstatus.obj `if test -f 'hud/hudwingmanstatus.cpp'; then $(CYGPATH_W) 'hud/hudwingmanstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudwingmanstatus.cpp'; fi`

key.o: io/key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT key.o -MD -MP -MF "$(DEPDIR)/key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o key.o `test -f 'io/key.cpp' || echo '$(srcdir)/'`io/key.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/key.Tpo" "$(DEPDIR)/key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/key.cpp' object='key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/key.Po' tmpdepfile='$(DEPDIR)/key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o key.o `test -f 'io/key.cpp' || echo '$(srcdir)/'`io/key.cpp

key.obj: io/key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT key.obj -MD -MP -MF "$(DEPDIR)/key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o key.obj `if test -f 'io/key.cpp'; then $(CYGPATH_W) 'io/key.cpp'; else $(CYGPATH_W) '$(srcdir)/io/key.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/key.Tpo" "$(DEPDIR)/key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/key.cpp' object='key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/key.Po' tmpdepfile='$(DEPDIR)/key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o key.obj `if test -f 'io/key.cpp'; then $(CYGPATH_W) 'io/key.cpp'; else $(CYGPATH_W) '$(srcdir)/io/key.cpp'; fi`

keycontrol.o: io/keycontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keycontrol.o -MD -MP -MF "$(DEPDIR)/keycontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o keycontrol.o `test -f 'io/keycontrol.cpp' || echo '$(srcdir)/'`io/keycontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/keycontrol.Tpo" "$(DEPDIR)/keycontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/keycontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/keycontrol.cpp' object='keycontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/keycontrol.Po' tmpdepfile='$(DEPDIR)/keycontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keycontrol.o `test -f 'io/keycontrol.cpp' || echo '$(srcdir)/'`io/keycontrol.cpp

keycontrol.obj: io/keycontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keycontrol.obj -MD -MP -MF "$(DEPDIR)/keycontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o keycontrol.obj `if test -f 'io/keycontrol.cpp'; then $(CYGPATH_W) 'io/keycontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/io/keycontrol.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/keycontrol.Tpo" "$(DEPDIR)/keycontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/keycontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/keycontrol.cpp' object='keycontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/keycontrol.Po' tmpdepfile='$(DEPDIR)/keycontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keycontrol.obj `if test -f 'io/keycontrol.cpp'; then $(CYGPATH_W) 'io/keycontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/io/keycontrol.cpp'; fi`

mouse.o: io/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mouse.o -MD -MP -MF "$(DEPDIR)/mouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mouse.o `test -f 'io/mouse.cpp' || echo '$(srcdir)/'`io/mouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mouse.Tpo" "$(DEPDIR)/mouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/mouse.cpp' object='mouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mouse.Po' tmpdepfile='$(DEPDIR)/mouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mouse.o `test -f 'io/mouse.cpp' || echo '$(srcdir)/'`io/mouse.cpp

mouse.obj: io/mouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mouse.obj -MD -MP -MF "$(DEPDIR)/mouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mouse.obj `if test -f 'io/mouse.cpp'; then $(CYGPATH_W) 'io/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/mouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mouse.Tpo" "$(DEPDIR)/mouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/mouse.cpp' object='mouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mouse.Po' tmpdepfile='$(DEPDIR)/mouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mouse.obj `if test -f 'io/mouse.cpp'; then $(CYGPATH_W) 'io/mouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/mouse.cpp'; fi`

timer.o: io/timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.o -MD -MP -MF "$(DEPDIR)/timer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o timer.o `test -f 'io/timer.cpp' || echo '$(srcdir)/'`io/timer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/timer.Tpo" "$(DEPDIR)/timer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/timer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/timer.cpp' object='timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/timer.Po' tmpdepfile='$(DEPDIR)/timer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.o `test -f 'io/timer.cpp' || echo '$(srcdir)/'`io/timer.cpp

timer.obj: io/timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.obj -MD -MP -MF "$(DEPDIR)/timer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o timer.obj `if test -f 'io/timer.cpp'; then $(CYGPATH_W) 'io/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/io/timer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/timer.Tpo" "$(DEPDIR)/timer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/timer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/timer.cpp' object='timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/timer.Po' tmpdepfile='$(DEPDIR)/timer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.obj `if test -f 'io/timer.cpp'; then $(CYGPATH_W) 'io/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/io/timer.cpp'; fi`

jumpnode.o: jumpnode/jumpnode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jumpnode.o -MD -MP -MF "$(DEPDIR)/jumpnode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o jumpnode.o `test -f 'jumpnode/jumpnode.cpp' || echo '$(srcdir)/'`jumpnode/jumpnode.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/jumpnode.Tpo" "$(DEPDIR)/jumpnode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/jumpnode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jumpnode/jumpnode.cpp' object='jumpnode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/jumpnode.Po' tmpdepfile='$(DEPDIR)/jumpnode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jumpnode.o `test -f 'jumpnode/jumpnode.cpp' || echo '$(srcdir)/'`jumpnode/jumpnode.cpp

jumpnode.obj: jumpnode/jumpnode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jumpnode.obj -MD -MP -MF "$(DEPDIR)/jumpnode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o jumpnode.obj `if test -f 'jumpnode/jumpnode.cpp'; then $(CYGPATH_W) 'jumpnode/jumpnode.cpp'; else $(CYGPATH_W) '$(srcdir)/jumpnode/jumpnode.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/jumpnode.Tpo" "$(DEPDIR)/jumpnode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/jumpnode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jumpnode/jumpnode.cpp' object='jumpnode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/jumpnode.Po' tmpdepfile='$(DEPDIR)/jumpnode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jumpnode.obj `if test -f 'jumpnode/jumpnode.cpp'; then $(CYGPATH_W) 'jumpnode/jumpnode.cpp'; else $(CYGPATH_W) '$(srcdir)/jumpnode/jumpnode.cpp'; fi`

lighting.o: lighting/lighting.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lighting.o -MD -MP -MF "$(DEPDIR)/lighting.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o lighting.o `test -f 'lighting/lighting.cpp' || echo '$(srcdir)/'`lighting/lighting.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/lighting.Tpo" "$(DEPDIR)/lighting.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/lighting.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lighting/lighting.cpp' object='lighting.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/lighting.Po' tmpdepfile='$(DEPDIR)/lighting.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lighting.o `test -f 'lighting/lighting.cpp' || echo '$(srcdir)/'`lighting/lighting.cpp

lighting.obj: lighting/lighting.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lighting.obj -MD -MP -MF "$(DEPDIR)/lighting.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o lighting.obj `if test -f 'lighting/lighting.cpp'; then $(CYGPATH_W) 'lighting/lighting.cpp'; else $(CYGPATH_W) '$(srcdir)/lighting/lighting.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/lighting.Tpo" "$(DEPDIR)/lighting.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/lighting.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lighting/lighting.cpp' object='lighting.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/lighting.Po' tmpdepfile='$(DEPDIR)/lighting.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lighting.obj `if test -f 'lighting/lighting.cpp'; then $(CYGPATH_W) 'lighting/lighting.cpp'; else $(CYGPATH_W) '$(srcdir)/lighting/lighting.cpp'; fi`

fhash.o: localization/fhash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fhash.o -MD -MP -MF "$(DEPDIR)/fhash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fhash.o `test -f 'localization/fhash.cpp' || echo '$(srcdir)/'`localization/fhash.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fhash.Tpo" "$(DEPDIR)/fhash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fhash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/fhash.cpp' object='fhash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fhash.Po' tmpdepfile='$(DEPDIR)/fhash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fhash.o `test -f 'localization/fhash.cpp' || echo '$(srcdir)/'`localization/fhash.cpp

fhash.obj: localization/fhash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fhash.obj -MD -MP -MF "$(DEPDIR)/fhash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fhash.obj `if test -f 'localization/fhash.cpp'; then $(CYGPATH_W) 'localization/fhash.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/fhash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fhash.Tpo" "$(DEPDIR)/fhash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fhash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/fhash.cpp' object='fhash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fhash.Po' tmpdepfile='$(DEPDIR)/fhash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fhash.obj `if test -f 'localization/fhash.cpp'; then $(CYGPATH_W) 'localization/fhash.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/fhash.cpp'; fi`

localize.o: localization/localize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT localize.o -MD -MP -MF "$(DEPDIR)/localize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o localize.o `test -f 'localization/localize.cpp' || echo '$(srcdir)/'`localization/localize.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/localize.Tpo" "$(DEPDIR)/localize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/localize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/localize.cpp' object='localize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/localize.Po' tmpdepfile='$(DEPDIR)/localize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o localize.o `test -f 'localization/localize.cpp' || echo '$(srcdir)/'`localization/localize.cpp

localize.obj: localization/localize.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT localize.obj -MD -MP -MF "$(DEPDIR)/localize.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o localize.obj `if test -f 'localization/localize.cpp'; then $(CYGPATH_W) 'localization/localize.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/localize.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/localize.Tpo" "$(DEPDIR)/localize.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/localize.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='localization/localize.cpp' object='localize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/localize.Po' tmpdepfile='$(DEPDIR)/localize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o localize.obj `if test -f 'localization/localize.cpp'; then $(CYGPATH_W) 'localization/localize.cpp'; else $(CYGPATH_W) '$(srcdir)/localization/localize.cpp'; fi`

fix.o: math/fix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fix.o -MD -MP -MF "$(DEPDIR)/fix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fix.o `test -f 'math/fix.cpp' || echo '$(srcdir)/'`math/fix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fix.Tpo" "$(DEPDIR)/fix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fix.cpp' object='fix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fix.Po' tmpdepfile='$(DEPDIR)/fix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fix.o `test -f 'math/fix.cpp' || echo '$(srcdir)/'`math/fix.cpp

fix.obj: math/fix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fix.obj -MD -MP -MF "$(DEPDIR)/fix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fix.obj `if test -f 'math/fix.cpp'; then $(CYGPATH_W) 'math/fix.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fix.Tpo" "$(DEPDIR)/fix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fix.cpp' object='fix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fix.Po' tmpdepfile='$(DEPDIR)/fix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fix.obj `if test -f 'math/fix.cpp'; then $(CYGPATH_W) 'math/fix.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fix.cpp'; fi`

floating.o: math/floating.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT floating.o -MD -MP -MF "$(DEPDIR)/floating.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o floating.o `test -f 'math/floating.cpp' || echo '$(srcdir)/'`math/floating.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/floating.Tpo" "$(DEPDIR)/floating.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/floating.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/floating.cpp' object='floating.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/floating.Po' tmpdepfile='$(DEPDIR)/floating.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o floating.o `test -f 'math/floating.cpp' || echo '$(srcdir)/'`math/floating.cpp

floating.obj: math/floating.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT floating.obj -MD -MP -MF "$(DEPDIR)/floating.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o floating.obj `if test -f 'math/floating.cpp'; then $(CYGPATH_W) 'math/floating.cpp'; else $(CYGPATH_W) '$(srcdir)/math/floating.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/floating.Tpo" "$(DEPDIR)/floating.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/floating.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/floating.cpp' object='floating.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/floating.Po' tmpdepfile='$(DEPDIR)/floating.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o floating.obj `if test -f 'math/floating.cpp'; then $(CYGPATH_W) 'math/floating.cpp'; else $(CYGPATH_W) '$(srcdir)/math/floating.cpp'; fi`

fvi.o: math/fvi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fvi.o -MD -MP -MF "$(DEPDIR)/fvi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fvi.o `test -f 'math/fvi.cpp' || echo '$(srcdir)/'`math/fvi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fvi.Tpo" "$(DEPDIR)/fvi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fvi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fvi.cpp' object='fvi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fvi.Po' tmpdepfile='$(DEPDIR)/fvi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fvi.o `test -f 'math/fvi.cpp' || echo '$(srcdir)/'`math/fvi.cpp

fvi.obj: math/fvi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fvi.obj -MD -MP -MF "$(DEPDIR)/fvi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fvi.obj `if test -f 'math/fvi.cpp'; then $(CYGPATH_W) 'math/fvi.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fvi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fvi.Tpo" "$(DEPDIR)/fvi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fvi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/fvi.cpp' object='fvi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fvi.Po' tmpdepfile='$(DEPDIR)/fvi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fvi.obj `if test -f 'math/fvi.cpp'; then $(CYGPATH_W) 'math/fvi.cpp'; else $(CYGPATH_W) '$(srcdir)/math/fvi.cpp'; fi`

spline.o: math/spline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spline.o -MD -MP -MF "$(DEPDIR)/spline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o spline.o `test -f 'math/spline.cpp' || echo '$(srcdir)/'`math/spline.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/spline.Tpo" "$(DEPDIR)/spline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/spline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/spline.cpp' object='spline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/spline.Po' tmpdepfile='$(DEPDIR)/spline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spline.o `test -f 'math/spline.cpp' || echo '$(srcdir)/'`math/spline.cpp

spline.obj: math/spline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spline.obj -MD -MP -MF "$(DEPDIR)/spline.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o spline.obj `if test -f 'math/spline.cpp'; then $(CYGPATH_W) 'math/spline.cpp'; else $(CYGPATH_W) '$(srcdir)/math/spline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/spline.Tpo" "$(DEPDIR)/spline.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/spline.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/spline.cpp' object='spline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/spline.Po' tmpdepfile='$(DEPDIR)/spline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spline.obj `if test -f 'math/spline.cpp'; then $(CYGPATH_W) 'math/spline.cpp'; else $(CYGPATH_W) '$(srcdir)/math/spline.cpp'; fi`

staticrand.o: math/staticrand.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT staticrand.o -MD -MP -MF "$(DEPDIR)/staticrand.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o staticrand.o `test -f 'math/staticrand.cpp' || echo '$(srcdir)/'`math/staticrand.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/staticrand.Tpo" "$(DEPDIR)/staticrand.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/staticrand.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/staticrand.cpp' object='staticrand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/staticrand.Po' tmpdepfile='$(DEPDIR)/staticrand.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o staticrand.o `test -f 'math/staticrand.cpp' || echo '$(srcdir)/'`math/staticrand.cpp

staticrand.obj: math/staticrand.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT staticrand.obj -MD -MP -MF "$(DEPDIR)/staticrand.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o staticrand.obj `if test -f 'math/staticrand.cpp'; then $(CYGPATH_W) 'math/staticrand.cpp'; else $(CYGPATH_W) '$(srcdir)/math/staticrand.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/staticrand.Tpo" "$(DEPDIR)/staticrand.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/staticrand.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/staticrand.cpp' object='staticrand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/staticrand.Po' tmpdepfile='$(DEPDIR)/staticrand.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o staticrand.obj `if test -f 'math/staticrand.cpp'; then $(CYGPATH_W) 'math/staticrand.cpp'; else $(CYGPATH_W) '$(srcdir)/math/staticrand.cpp'; fi`

vecmat.o: math/vecmat.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vecmat.o -MD -MP -MF "$(DEPDIR)/vecmat.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o vecmat.o `test -f 'math/vecmat.cpp' || echo '$(srcdir)/'`math/vecmat.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/vecmat.Tpo" "$(DEPDIR)/vecmat.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/vecmat.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/vecmat.cpp' object='vecmat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/vecmat.Po' tmpdepfile='$(DEPDIR)/vecmat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vecmat.o `test -f 'math/vecmat.cpp' || echo '$(srcdir)/'`math/vecmat.cpp

vecmat.obj: math/vecmat.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vecmat.obj -MD -MP -MF "$(DEPDIR)/vecmat.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o vecmat.obj `if test -f 'math/vecmat.cpp'; then $(CYGPATH_W) 'math/vecmat.cpp'; else $(CYGPATH_W) '$(srcdir)/math/vecmat.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/vecmat.Tpo" "$(DEPDIR)/vecmat.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/vecmat.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='math/vecmat.cpp' object='vecmat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/vecmat.Po' tmpdepfile='$(DEPDIR)/vecmat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vecmat.obj `if test -f 'math/vecmat.cpp'; then $(CYGPATH_W) 'math/vecmat.cpp'; else $(CYGPATH_W) '$(srcdir)/math/vecmat.cpp'; fi`

barracks.o: menuui/barracks.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barracks.o -MD -MP -MF "$(DEPDIR)/barracks.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o barracks.o `test -f 'menuui/barracks.cpp' || echo '$(srcdir)/'`menuui/barracks.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/barracks.Tpo" "$(DEPDIR)/barracks.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/barracks.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/barracks.cpp' object='barracks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/barracks.Po' tmpdepfile='$(DEPDIR)/barracks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barracks.o `test -f 'menuui/barracks.cpp' || echo '$(srcdir)/'`menuui/barracks.cpp

barracks.obj: menuui/barracks.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT barracks.obj -MD -MP -MF "$(DEPDIR)/barracks.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o barracks.obj `if test -f 'menuui/barracks.cpp'; then $(CYGPATH_W) 'menuui/barracks.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/barracks.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/barracks.Tpo" "$(DEPDIR)/barracks.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/barracks.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/barracks.cpp' object='barracks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/barracks.Po' tmpdepfile='$(DEPDIR)/barracks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o barracks.obj `if test -f 'menuui/barracks.cpp'; then $(CYGPATH_W) 'menuui/barracks.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/barracks.cpp'; fi`

credits.o: menuui/credits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT credits.o -MD -MP -MF "$(DEPDIR)/credits.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o credits.o `test -f 'menuui/credits.cpp' || echo '$(srcdir)/'`menuui/credits.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/credits.Tpo" "$(DEPDIR)/credits.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/credits.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/credits.cpp' object='credits.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/credits.Po' tmpdepfile='$(DEPDIR)/credits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o credits.o `test -f 'menuui/credits.cpp' || echo '$(srcdir)/'`menuui/credits.cpp

credits.obj: menuui/credits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT credits.obj -MD -MP -MF "$(DEPDIR)/credits.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o credits.obj `if test -f 'menuui/credits.cpp'; then $(CYGPATH_W) 'menuui/credits.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/credits.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/credits.Tpo" "$(DEPDIR)/credits.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/credits.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/credits.cpp' object='credits.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/credits.Po' tmpdepfile='$(DEPDIR)/credits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o credits.obj `if test -f 'menuui/credits.cpp'; then $(CYGPATH_W) 'menuui/credits.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/credits.cpp'; fi`

fishtank.o: menuui/fishtank.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fishtank.o -MD -MP -MF "$(DEPDIR)/fishtank.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fishtank.o `test -f 'menuui/fishtank.cpp' || echo '$(srcdir)/'`menuui/fishtank.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fishtank.Tpo" "$(DEPDIR)/fishtank.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fishtank.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/fishtank.cpp' object='fishtank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fishtank.Po' tmpdepfile='$(DEPDIR)/fishtank.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fishtank.o `test -f 'menuui/fishtank.cpp' || echo '$(srcdir)/'`menuui/fishtank.cpp

fishtank.obj: menuui/fishtank.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fishtank.obj -MD -MP -MF "$(DEPDIR)/fishtank.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o fishtank.obj `if test -f 'menuui/fishtank.cpp'; then $(CYGPATH_W) 'menuui/fishtank.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/fishtank.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/fishtank.Tpo" "$(DEPDIR)/fishtank.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/fishtank.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/fishtank.cpp' object='fishtank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/fishtank.Po' tmpdepfile='$(DEPDIR)/fishtank.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fishtank.obj `if test -f 'menuui/fishtank.cpp'; then $(CYGPATH_W) 'menuui/fishtank.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/fishtank.cpp'; fi`

mainhallmenu.o: menuui/mainhallmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainhallmenu.o -MD -MP -MF "$(DEPDIR)/mainhallmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mainhallmenu.o `test -f 'menuui/mainhallmenu.cpp' || echo '$(srcdir)/'`menuui/mainhallmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mainhallmenu.Tpo" "$(DEPDIR)/mainhallmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mainhallmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhallmenu.cpp' object='mainhallmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mainhallmenu.Po' tmpdepfile='$(DEPDIR)/mainhallmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainhallmenu.o `test -f 'menuui/mainhallmenu.cpp' || echo '$(srcdir)/'`menuui/mainhallmenu.cpp

mainhallmenu.obj: menuui/mainhallmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainhallmenu.obj -MD -MP -MF "$(DEPDIR)/mainhallmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mainhallmenu.obj `if test -f 'menuui/mainhallmenu.cpp'; then $(CYGPATH_W) 'menuui/mainhallmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhallmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mainhallmenu.Tpo" "$(DEPDIR)/mainhallmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mainhallmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhallmenu.cpp' object='mainhallmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mainhallmenu.Po' tmpdepfile='$(DEPDIR)/mainhallmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainhallmenu.obj `if test -f 'menuui/mainhallmenu.cpp'; then $(CYGPATH_W) 'menuui/mainhallmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhallmenu.cpp'; fi`

mainhalltemp.o: menuui/mainhalltemp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainhalltemp.o -MD -MP -MF "$(DEPDIR)/mainhalltemp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mainhalltemp.o `test -f 'menuui/mainhalltemp.cpp' || echo '$(srcdir)/'`menuui/mainhalltemp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mainhalltemp.Tpo" "$(DEPDIR)/mainhalltemp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mainhalltemp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhalltemp.cpp' object='mainhalltemp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mainhalltemp.Po' tmpdepfile='$(DEPDIR)/mainhalltemp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainhalltemp.o `test -f 'menuui/mainhalltemp.cpp' || echo '$(srcdir)/'`menuui/mainhalltemp.cpp

mainhalltemp.obj: menuui/mainhalltemp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mainhalltemp.obj -MD -MP -MF "$(DEPDIR)/mainhalltemp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o mainhalltemp.obj `if test -f 'menuui/mainhalltemp.cpp'; then $(CYGPATH_W) 'menuui/mainhalltemp.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhalltemp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/mainhalltemp.Tpo" "$(DEPDIR)/mainhalltemp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/mainhalltemp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/mainhalltemp.cpp' object='mainhalltemp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/mainhalltemp.Po' tmpdepfile='$(DEPDIR)/mainhalltemp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mainhalltemp.obj `if test -f 'menuui/mainhalltemp.cpp'; then $(CYGPATH_W) 'menuui/mainhalltemp.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/mainhalltemp.cpp'; fi`

optionsmenu.o: menuui/optionsmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT optionsmenu.o -MD -MP -MF "$(DEPDIR)/optionsmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o optionsmenu.o `test -f 'menuui/optionsmenu.cpp' || echo '$(srcdir)/'`menuui/optionsmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/optionsmenu.Tpo" "$(DEPDIR)/optionsmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/optionsmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenu.cpp' object='optionsmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/optionsmenu.Po' tmpdepfile='$(DEPDIR)/optionsmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o optionsmenu.o `test -f 'menuui/optionsmenu.cpp' || echo '$(srcdir)/'`menuui/optionsmenu.cpp

optionsmenu.obj: menuui/optionsmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT optionsmenu.obj -MD -MP -MF "$(DEPDIR)/optionsmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o optionsmenu.obj `if test -f 'menuui/optionsmenu.cpp'; then $(CYGPATH_W) 'menuui/optionsmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/optionsmenu.Tpo" "$(DEPDIR)/optionsmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/optionsmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenu.cpp' object='optionsmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/optionsmenu.Po' tmpdepfile='$(DEPDIR)/optionsmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o optionsmenu.obj `if test -f 'menuui/optionsmenu.cpp'; then $(CYGPATH_W) 'menuui/optionsmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenu.cpp'; fi`

playermenu.o: menuui/playermenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT playermenu.o -MD -MP -MF "$(DEPDIR)/playermenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o playermenu.o `test -f 'menuui/playermenu.cpp' || echo '$(srcdir)/'`menuui/playermenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/playermenu.Tpo" "$(DEPDIR)/playermenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/playermenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/playermenu.cpp' object='playermenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/playermenu.Po' tmpdepfile='$(DEPDIR)/playermenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o playermenu.o `test -f 'menuui/playermenu.cpp' || echo '$(srcdir)/'`menuui/playermenu.cpp

playermenu.obj: menuui/playermenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT playermenu.obj -MD -MP -MF "$(DEPDIR)/playermenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o playermenu.obj `if test -f 'menuui/playermenu.cpp'; then $(CYGPATH_W) 'menuui/playermenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/playermenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/playermenu.Tpo" "$(DEPDIR)/playermenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/playermenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/playermenu.cpp' object='playermenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/playermenu.Po' tmpdepfile='$(DEPDIR)/playermenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o playermenu.obj `if test -f 'menuui/playermenu.cpp'; then $(CYGPATH_W) 'menuui/playermenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/playermenu.cpp'; fi`

readyroom.o: menuui/readyroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readyroom.o -MD -MP -MF "$(DEPDIR)/readyroom.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o readyroom.o `test -f 'menuui/readyroom.cpp' || echo '$(srcdir)/'`menuui/readyroom.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/readyroom.Tpo" "$(DEPDIR)/readyroom.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/readyroom.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/readyroom.cpp' object='readyroom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/readyroom.Po' tmpdepfile='$(DEPDIR)/readyroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readyroom.o `test -f 'menuui/readyroom.cpp' || echo '$(srcdir)/'`menuui/readyroom.cpp

readyroom.obj: menuui/readyroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readyroom.obj -MD -MP -MF "$(DEPDIR)/readyroom.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o readyroom.obj `if test -f 'menuui/readyroom.cpp'; then $(CYGPATH_W) 'menuui/readyroom.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/readyroom.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/readyroom.Tpo" "$(DEPDIR)/readyroom.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/readyroom.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/readyroom.cpp' object='readyroom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/readyroom.Po' tmpdepfile='$(DEPDIR)/readyroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readyroom.obj `if test -f 'menuui/readyroom.cpp'; then $(CYGPATH_W) 'menuui/readyroom.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/readyroom.cpp'; fi`

snazzyui.o: menuui/snazzyui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT snazzyui.o -MD -MP -MF "$(DEPDIR)/snazzyui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o snazzyui.o `test -f 'menuui/snazzyui.cpp' || echo '$(srcdir)/'`menuui/snazzyui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/snazzyui.Tpo" "$(DEPDIR)/snazzyui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/snazzyui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/snazzyui.cpp' object='snazzyui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/snazzyui.Po' tmpdepfile='$(DEPDIR)/snazzyui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o snazzyui.o `test -f 'menuui/snazzyui.cpp' || echo '$(srcdir)/'`menuui/snazzyui.cpp

snazzyui.obj: menuui/snazzyui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT snazzyui.obj -MD -MP -MF "$(DEPDIR)/snazzyui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o snazzyui.obj `if test -f 'menuui/snazzyui.cpp'; then $(CYGPATH_W) 'menuui/snazzyui.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/snazzyui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/snazzyui.Tpo" "$(DEPDIR)/snazzyui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/snazzyui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/snazzyui.cpp' object='snazzyui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/snazzyui.Po' tmpdepfile='$(DEPDIR)/snazzyui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o snazzyui.obj `if test -f 'menuui/snazzyui.cpp'; then $(CYGPATH_W) 'menuui/snazzyui.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/snazzyui.cpp'; fi`

techmenu.o: menuui/techmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT techmenu.o -MD -MP -MF "$(DEPDIR)/techmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o techmenu.o `test -f 'menuui/techmenu.cpp' || echo '$(srcdir)/'`menuui/techmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/techmenu.Tpo" "$(DEPDIR)/techmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/techmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/techmenu.cpp' object='techmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/techmenu.Po' tmpdepfile='$(DEPDIR)/techmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o techmenu.o `test -f 'menuui/techmenu.cpp' || echo '$(srcdir)/'`menuui/techmenu.cpp

techmenu.obj: menuui/techmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT techmenu.obj -MD -MP -MF "$(DEPDIR)/techmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o techmenu.obj `if test -f 'menuui/techmenu.cpp'; then $(CYGPATH_W) 'menuui/techmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/techmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/techmenu.Tpo" "$(DEPDIR)/techmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/techmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/techmenu.cpp' object='techmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/techmenu.Po' tmpdepfile='$(DEPDIR)/techmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o techmenu.obj `if test -f 'menuui/techmenu.cpp'; then $(CYGPATH_W) 'menuui/techmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/techmenu.cpp'; fi`

trainingmenu.o: menuui/trainingmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trainingmenu.o -MD -MP -MF "$(DEPDIR)/trainingmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o trainingmenu.o `test -f 'menuui/trainingmenu.cpp' || echo '$(srcdir)/'`menuui/trainingmenu.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/trainingmenu.Tpo" "$(DEPDIR)/trainingmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/trainingmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/trainingmenu.cpp' object='trainingmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/trainingmenu.Po' tmpdepfile='$(DEPDIR)/trainingmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trainingmenu.o `test -f 'menuui/trainingmenu.cpp' || echo '$(srcdir)/'`menuui/trainingmenu.cpp

trainingmenu.obj: menuui/trainingmenu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trainingmenu.obj -MD -MP -MF "$(DEPDIR)/trainingmenu.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o trainingmenu.obj `if test -f 'menuui/trainingmenu.cpp'; then $(CYGPATH_W) 'menuui/trainingmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/trainingmenu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/trainingmenu.Tpo" "$(DEPDIR)/trainingmenu.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/trainingmenu.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/trainingmenu.cpp' object='trainingmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/trainingmenu.Po' tmpdepfile='$(DEPDIR)/trainingmenu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trainingmenu.obj `if test -f 'menuui/trainingmenu.cpp'; then $(CYGPATH_W) 'menuui/trainingmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/trainingmenu.cpp'; fi`

missionbriefcommon.o: mission/missionbriefcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionbriefcommon.o -MD -MP -MF "$(DEPDIR)/missionbriefcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionbriefcommon.o `test -f 'mission/missionbriefcommon.cpp' || echo '$(srcdir)/'`mission/missionbriefcommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionbriefcommon.Tpo" "$(DEPDIR)/missionbriefcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionbriefcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionbriefcommon.cpp' object='missionbriefcommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionbriefcommon.Po' tmpdepfile='$(DEPDIR)/missionbriefcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionbriefcommon.o `test -f 'mission/missionbriefcommon.cpp' || echo '$(srcdir)/'`mission/missionbriefcommon.cpp

missionbriefcommon.obj: mission/missionbriefcommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionbriefcommon.obj -MD -MP -MF "$(DEPDIR)/missionbriefcommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionbriefcommon.obj `if test -f 'mission/missionbriefcommon.cpp'; then $(CYGPATH_W) 'mission/missionbriefcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionbriefcommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionbriefcommon.Tpo" "$(DEPDIR)/missionbriefcommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionbriefcommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionbriefcommon.cpp' object='missionbriefcommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionbriefcommon.Po' tmpdepfile='$(DEPDIR)/missionbriefcommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionbriefcommon.obj `if test -f 'mission/missionbriefcommon.cpp'; then $(CYGPATH_W) 'mission/missionbriefcommon.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionbriefcommon.cpp'; fi`

missioncampaign.o: mission/missioncampaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missioncampaign.o -MD -MP -MF "$(DEPDIR)/missioncampaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missioncampaign.o `test -f 'mission/missioncampaign.cpp' || echo '$(srcdir)/'`mission/missioncampaign.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missioncampaign.Tpo" "$(DEPDIR)/missioncampaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missioncampaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missioncampaign.cpp' object='missioncampaign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missioncampaign.Po' tmpdepfile='$(DEPDIR)/missioncampaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missioncampaign.o `test -f 'mission/missioncampaign.cpp' || echo '$(srcdir)/'`mission/missioncampaign.cpp

missioncampaign.obj: mission/missioncampaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missioncampaign.obj -MD -MP -MF "$(DEPDIR)/missioncampaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missioncampaign.obj `if test -f 'mission/missioncampaign.cpp'; then $(CYGPATH_W) 'mission/missioncampaign.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missioncampaign.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missioncampaign.Tpo" "$(DEPDIR)/missioncampaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missioncampaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missioncampaign.cpp' object='missioncampaign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missioncampaign.Po' tmpdepfile='$(DEPDIR)/missioncampaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missioncampaign.obj `if test -f 'mission/missioncampaign.cpp'; then $(CYGPATH_W) 'mission/missioncampaign.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missioncampaign.cpp'; fi`

missiongoals.o: mission/missiongoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiongoals.o -MD -MP -MF "$(DEPDIR)/missiongoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiongoals.o `test -f 'mission/missiongoals.cpp' || echo '$(srcdir)/'`mission/missiongoals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiongoals.Tpo" "$(DEPDIR)/missiongoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiongoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongoals.cpp' object='missiongoals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiongoals.Po' tmpdepfile='$(DEPDIR)/missiongoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiongoals.o `test -f 'mission/missiongoals.cpp' || echo '$(srcdir)/'`mission/missiongoals.cpp

missiongoals.obj: mission/missiongoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiongoals.obj -MD -MP -MF "$(DEPDIR)/missiongoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiongoals.obj `if test -f 'mission/missiongoals.cpp'; then $(CYGPATH_W) 'mission/missiongoals.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongoals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiongoals.Tpo" "$(DEPDIR)/missiongoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiongoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongoals.cpp' object='missiongoals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiongoals.Po' tmpdepfile='$(DEPDIR)/missiongoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiongoals.obj `if test -f 'mission/missiongoals.cpp'; then $(CYGPATH_W) 'mission/missiongoals.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongoals.cpp'; fi`

missiongrid.o: mission/missiongrid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiongrid.o -MD -MP -MF "$(DEPDIR)/missiongrid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiongrid.o `test -f 'mission/missiongrid.cpp' || echo '$(srcdir)/'`mission/missiongrid.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiongrid.Tpo" "$(DEPDIR)/missiongrid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiongrid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongrid.cpp' object='missiongrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiongrid.Po' tmpdepfile='$(DEPDIR)/missiongrid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiongrid.o `test -f 'mission/missiongrid.cpp' || echo '$(srcdir)/'`mission/missiongrid.cpp

missiongrid.obj: mission/missiongrid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiongrid.obj -MD -MP -MF "$(DEPDIR)/missiongrid.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiongrid.obj `if test -f 'mission/missiongrid.cpp'; then $(CYGPATH_W) 'mission/missiongrid.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongrid.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiongrid.Tpo" "$(DEPDIR)/missiongrid.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiongrid.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiongrid.cpp' object='missiongrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiongrid.Po' tmpdepfile='$(DEPDIR)/missiongrid.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiongrid.obj `if test -f 'mission/missiongrid.cpp'; then $(CYGPATH_W) 'mission/missiongrid.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiongrid.cpp'; fi`

missionhotkey.o: mission/missionhotkey.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionhotkey.o -MD -MP -MF "$(DEPDIR)/missionhotkey.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionhotkey.o `test -f 'mission/missionhotkey.cpp' || echo '$(srcdir)/'`mission/missionhotkey.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionhotkey.Tpo" "$(DEPDIR)/missionhotkey.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionhotkey.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionhotkey.cpp' object='missionhotkey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionhotkey.Po' tmpdepfile='$(DEPDIR)/missionhotkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionhotkey.o `test -f 'mission/missionhotkey.cpp' || echo '$(srcdir)/'`mission/missionhotkey.cpp

missionhotkey.obj: mission/missionhotkey.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionhotkey.obj -MD -MP -MF "$(DEPDIR)/missionhotkey.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionhotkey.obj `if test -f 'mission/missionhotkey.cpp'; then $(CYGPATH_W) 'mission/missionhotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionhotkey.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionhotkey.Tpo" "$(DEPDIR)/missionhotkey.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionhotkey.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionhotkey.cpp' object='missionhotkey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionhotkey.Po' tmpdepfile='$(DEPDIR)/missionhotkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionhotkey.obj `if test -f 'mission/missionhotkey.cpp'; then $(CYGPATH_W) 'mission/missionhotkey.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionhotkey.cpp'; fi`

missionload.o: mission/missionload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionload.o -MD -MP -MF "$(DEPDIR)/missionload.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionload.o `test -f 'mission/missionload.cpp' || echo '$(srcdir)/'`mission/missionload.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionload.Tpo" "$(DEPDIR)/missionload.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionload.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionload.cpp' object='missionload.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionload.Po' tmpdepfile='$(DEPDIR)/missionload.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionload.o `test -f 'mission/missionload.cpp' || echo '$(srcdir)/'`mission/missionload.cpp

missionload.obj: mission/missionload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionload.obj -MD -MP -MF "$(DEPDIR)/missionload.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionload.obj `if test -f 'mission/missionload.cpp'; then $(CYGPATH_W) 'mission/missionload.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionload.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionload.Tpo" "$(DEPDIR)/missionload.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionload.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionload.cpp' object='missionload.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionload.Po' tmpdepfile='$(DEPDIR)/missionload.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionload.obj `if test -f 'mission/missionload.cpp'; then $(CYGPATH_W) 'mission/missionload.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionload.cpp'; fi`

missionlog.o: mission/missionlog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionlog.o -MD -MP -MF "$(DEPDIR)/missionlog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionlog.o `test -f 'mission/missionlog.cpp' || echo '$(srcdir)/'`mission/missionlog.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionlog.Tpo" "$(DEPDIR)/missionlog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionlog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionlog.cpp' object='missionlog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionlog.Po' tmpdepfile='$(DEPDIR)/missionlog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionlog.o `test -f 'mission/missionlog.cpp' || echo '$(srcdir)/'`mission/missionlog.cpp

missionlog.obj: mission/missionlog.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionlog.obj -MD -MP -MF "$(DEPDIR)/missionlog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionlog.obj `if test -f 'mission/missionlog.cpp'; then $(CYGPATH_W) 'mission/missionlog.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionlog.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionlog.Tpo" "$(DEPDIR)/missionlog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionlog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionlog.cpp' object='missionlog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionlog.Po' tmpdepfile='$(DEPDIR)/missionlog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionlog.obj `if test -f 'mission/missionlog.cpp'; then $(CYGPATH_W) 'mission/missionlog.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionlog.cpp'; fi`

missionmessage.o: mission/missionmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionmessage.o -MD -MP -MF "$(DEPDIR)/missionmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionmessage.o `test -f 'mission/missionmessage.cpp' || echo '$(srcdir)/'`mission/missionmessage.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionmessage.Tpo" "$(DEPDIR)/missionmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionmessage.cpp' object='missionmessage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionmessage.Po' tmpdepfile='$(DEPDIR)/missionmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionmessage.o `test -f 'mission/missionmessage.cpp' || echo '$(srcdir)/'`mission/missionmessage.cpp

missionmessage.obj: mission/missionmessage.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionmessage.obj -MD -MP -MF "$(DEPDIR)/missionmessage.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionmessage.obj `if test -f 'mission/missionmessage.cpp'; then $(CYGPATH_W) 'mission/missionmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionmessage.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionmessage.Tpo" "$(DEPDIR)/missionmessage.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionmessage.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionmessage.cpp' object='missionmessage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionmessage.Po' tmpdepfile='$(DEPDIR)/missionmessage.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionmessage.obj `if test -f 'mission/missionmessage.cpp'; then $(CYGPATH_W) 'mission/missionmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionmessage.cpp'; fi`

missionparse.o: mission/missionparse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionparse.o -MD -MP -MF "$(DEPDIR)/missionparse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionparse.o `test -f 'mission/missionparse.cpp' || echo '$(srcdir)/'`mission/missionparse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionparse.Tpo" "$(DEPDIR)/missionparse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionparse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionparse.cpp' object='missionparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionparse.Po' tmpdepfile='$(DEPDIR)/missionparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionparse.o `test -f 'mission/missionparse.cpp' || echo '$(srcdir)/'`mission/missionparse.cpp

missionparse.obj: mission/missionparse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionparse.obj -MD -MP -MF "$(DEPDIR)/missionparse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionparse.obj `if test -f 'mission/missionparse.cpp'; then $(CYGPATH_W) 'mission/missionparse.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionparse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionparse.Tpo" "$(DEPDIR)/missionparse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionparse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missionparse.cpp' object='missionparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionparse.Po' tmpdepfile='$(DEPDIR)/missionparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionparse.obj `if test -f 'mission/missionparse.cpp'; then $(CYGPATH_W) 'mission/missionparse.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missionparse.cpp'; fi`

missiontraining.o: mission/missiontraining.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiontraining.o -MD -MP -MF "$(DEPDIR)/missiontraining.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiontraining.o `test -f 'mission/missiontraining.cpp' || echo '$(srcdir)/'`mission/missiontraining.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiontraining.Tpo" "$(DEPDIR)/missiontraining.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiontraining.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiontraining.cpp' object='missiontraining.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiontraining.Po' tmpdepfile='$(DEPDIR)/missiontraining.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiontraining.o `test -f 'mission/missiontraining.cpp' || echo '$(srcdir)/'`mission/missiontraining.cpp

missiontraining.obj: mission/missiontraining.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiontraining.obj -MD -MP -MF "$(DEPDIR)/missiontraining.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiontraining.obj `if test -f 'mission/missiontraining.cpp'; then $(CYGPATH_W) 'mission/missiontraining.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiontraining.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiontraining.Tpo" "$(DEPDIR)/missiontraining.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiontraining.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mission/missiontraining.cpp' object='missiontraining.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiontraining.Po' tmpdepfile='$(DEPDIR)/missiontraining.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiontraining.obj `if test -f 'mission/missiontraining.cpp'; then $(CYGPATH_W) 'mission/missiontraining.cpp'; else $(CYGPATH_W) '$(srcdir)/mission/missiontraining.cpp'; fi`

missionbrief.o: missionui/missionbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionbrief.o -MD -MP -MF "$(DEPDIR)/missionbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionbrief.o `test -f 'missionui/missionbrief.cpp' || echo '$(srcdir)/'`missionui/missionbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionbrief.Tpo" "$(DEPDIR)/missionbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionbrief.cpp' object='missionbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionbrief.Po' tmpdepfile='$(DEPDIR)/missionbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionbrief.o `test -f 'missionui/missionbrief.cpp' || echo '$(srcdir)/'`missionui/missionbrief.cpp

missionbrief.obj: missionui/missionbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionbrief.obj -MD -MP -MF "$(DEPDIR)/missionbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionbrief.obj `if test -f 'missionui/missionbrief.cpp'; then $(CYGPATH_W) 'missionui/missionbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionbrief.Tpo" "$(DEPDIR)/missionbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionbrief.cpp' object='missionbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionbrief.Po' tmpdepfile='$(DEPDIR)/missionbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionbrief.obj `if test -f 'missionui/missionbrief.cpp'; then $(CYGPATH_W) 'missionui/missionbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionbrief.cpp'; fi`

missioncmdbrief.o: missionui/missioncmdbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missioncmdbrief.o -MD -MP -MF "$(DEPDIR)/missioncmdbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missioncmdbrief.o `test -f 'missionui/missioncmdbrief.cpp' || echo '$(srcdir)/'`missionui/missioncmdbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missioncmdbrief.Tpo" "$(DEPDIR)/missioncmdbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missioncmdbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missioncmdbrief.cpp' object='missioncmdbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missioncmdbrief.Po' tmpdepfile='$(DEPDIR)/missioncmdbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missioncmdbrief.o `test -f 'missionui/missioncmdbrief.cpp' || echo '$(srcdir)/'`missionui/missioncmdbrief.cpp

missioncmdbrief.obj: missionui/missioncmdbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missioncmdbrief.obj -MD -MP -MF "$(DEPDIR)/missioncmdbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missioncmdbrief.obj `if test -f 'missionui/missioncmdbrief.cpp'; then $(CYGPATH_W) 'missionui/missioncmdbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missioncmdbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missioncmdbrief.Tpo" "$(DEPDIR)/missioncmdbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missioncmdbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missioncmdbrief.cpp' object='missioncmdbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missioncmdbrief.Po' tmpdepfile='$(DEPDIR)/missioncmdbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missioncmdbrief.obj `if test -f 'missionui/missioncmdbrief.cpp'; then $(CYGPATH_W) 'missionui/missioncmdbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missioncmdbrief.cpp'; fi`

missiondebrief.o: missionui/missiondebrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiondebrief.o -MD -MP -MF "$(DEPDIR)/missiondebrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiondebrief.o `test -f 'missionui/missiondebrief.cpp' || echo '$(srcdir)/'`missionui/missiondebrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiondebrief.Tpo" "$(DEPDIR)/missiondebrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiondebrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missiondebrief.cpp' object='missiondebrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiondebrief.Po' tmpdepfile='$(DEPDIR)/missiondebrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiondebrief.o `test -f 'missionui/missiondebrief.cpp' || echo '$(srcdir)/'`missionui/missiondebrief.cpp

missiondebrief.obj: missionui/missiondebrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missiondebrief.obj -MD -MP -MF "$(DEPDIR)/missiondebrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missiondebrief.obj `if test -f 'missionui/missiondebrief.cpp'; then $(CYGPATH_W) 'missionui/missiondebrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missiondebrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missiondebrief.Tpo" "$(DEPDIR)/missiondebrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missiondebrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missiondebrief.cpp' object='missiondebrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missiondebrief.Po' tmpdepfile='$(DEPDIR)/missiondebrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missiondebrief.obj `if test -f 'missionui/missiondebrief.cpp'; then $(CYGPATH_W) 'missionui/missiondebrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missiondebrief.cpp'; fi`

missionloopbrief.o: missionui/missionloopbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionloopbrief.o -MD -MP -MF "$(DEPDIR)/missionloopbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionloopbrief.o `test -f 'missionui/missionloopbrief.cpp' || echo '$(srcdir)/'`missionui/missionloopbrief.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionloopbrief.Tpo" "$(DEPDIR)/missionloopbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionloopbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionloopbrief.cpp' object='missionloopbrief.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionloopbrief.Po' tmpdepfile='$(DEPDIR)/missionloopbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionloopbrief.o `test -f 'missionui/missionloopbrief.cpp' || echo '$(srcdir)/'`missionui/missionloopbrief.cpp

missionloopbrief.obj: missionui/missionloopbrief.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionloopbrief.obj -MD -MP -MF "$(DEPDIR)/missionloopbrief.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionloopbrief.obj `if test -f 'missionui/missionloopbrief.cpp'; then $(CYGPATH_W) 'missionui/missionloopbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionloopbrief.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionloopbrief.Tpo" "$(DEPDIR)/missionloopbrief.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionloopbrief.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionloopbrief.cpp' object='missionloopbrief.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionloopbrief.Po' tmpdepfile='$(DEPDIR)/missionloopbrief.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionloopbrief.obj `if test -f 'missionui/missionloopbrief.cpp'; then $(CYGPATH_W) 'missionui/missionloopbrief.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionloopbrief.cpp'; fi`

missionpause.o: missionui/missionpause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionpause.o -MD -MP -MF "$(DEPDIR)/missionpause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionpause.o `test -f 'missionui/missionpause.cpp' || echo '$(srcdir)/'`missionui/missionpause.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionpause.Tpo" "$(DEPDIR)/missionpause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionpause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionpause.cpp' object='missionpause.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionpause.Po' tmpdepfile='$(DEPDIR)/missionpause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionpause.o `test -f 'missionui/missionpause.cpp' || echo '$(srcdir)/'`missionui/missionpause.cpp

missionpause.obj: missionui/missionpause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionpause.obj -MD -MP -MF "$(DEPDIR)/missionpause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionpause.obj `if test -f 'missionui/missionpause.cpp'; then $(CYGPATH_W) 'missionui/missionpause.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionpause.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionpause.Tpo" "$(DEPDIR)/missionpause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionpause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionpause.cpp' object='missionpause.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionpause.Po' tmpdepfile='$(DEPDIR)/missionpause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionpause.obj `if test -f 'missionui/missionpause.cpp'; then $(CYGPATH_W) 'missionui/missionpause.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionpause.cpp'; fi`

missionrecommend.o: missionui/missionrecommend.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionrecommend.o -MD -MP -MF "$(DEPDIR)/missionrecommend.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionrecommend.o `test -f 'missionui/missionrecommend.cpp' || echo '$(srcdir)/'`missionui/missionrecommend.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionrecommend.Tpo" "$(DEPDIR)/missionrecommend.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionrecommend.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionrecommend.cpp' object='missionrecommend.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionrecommend.Po' tmpdepfile='$(DEPDIR)/missionrecommend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionrecommend.o `test -f 'missionui/missionrecommend.cpp' || echo '$(srcdir)/'`missionui/missionrecommend.cpp

missionrecommend.obj: missionui/missionrecommend.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionrecommend.obj -MD -MP -MF "$(DEPDIR)/missionrecommend.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionrecommend.obj `if test -f 'missionui/missionrecommend.cpp'; then $(CYGPATH_W) 'missionui/missionrecommend.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionrecommend.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionrecommend.Tpo" "$(DEPDIR)/missionrecommend.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionrecommend.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionrecommend.cpp' object='missionrecommend.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionrecommend.Po' tmpdepfile='$(DEPDIR)/missionrecommend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionrecommend.obj `if test -f 'missionui/missionrecommend.cpp'; then $(CYGPATH_W) 'missionui/missionrecommend.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionrecommend.cpp'; fi`

missionscreencommon.o: missionui/missionscreencommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionscreencommon.o -MD -MP -MF "$(DEPDIR)/missionscreencommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionscreencommon.o `test -f 'missionui/missionscreencommon.cpp' || echo '$(srcdir)/'`missionui/missionscreencommon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionscreencommon.Tpo" "$(DEPDIR)/missionscreencommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionscreencommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionscreencommon.cpp' object='missionscreencommon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionscreencommon.Po' tmpdepfile='$(DEPDIR)/missionscreencommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionscreencommon.o `test -f 'missionui/missionscreencommon.cpp' || echo '$(srcdir)/'`missionui/missionscreencommon.cpp

missionscreencommon.obj: missionui/missionscreencommon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionscreencommon.obj -MD -MP -MF "$(DEPDIR)/missionscreencommon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionscreencommon.obj `if test -f 'missionui/missionscreencommon.cpp'; then $(CYGPATH_W) 'missionui/missionscreencommon.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionscreencommon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionscreencommon.Tpo" "$(DEPDIR)/missionscreencommon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionscreencommon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionscreencommon.cpp' object='missionscreencommon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionscreencommon.Po' tmpdepfile='$(DEPDIR)/missionscreencommon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionscreencommon.obj `if test -f 'missionui/missionscreencommon.cpp'; then $(CYGPATH_W) 'missionui/missionscreencommon.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionscreencommon.cpp'; fi`

missionshipchoice.o: missionui/missionshipchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionshipchoice.o -MD -MP -MF "$(DEPDIR)/missionshipchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionshipchoice.o `test -f 'missionui/missionshipchoice.cpp' || echo '$(srcdir)/'`missionui/missionshipchoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionshipchoice.Tpo" "$(DEPDIR)/missionshipchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionshipchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionshipchoice.cpp' object='missionshipchoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionshipchoice.Po' tmpdepfile='$(DEPDIR)/missionshipchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionshipchoice.o `test -f 'missionui/missionshipchoice.cpp' || echo '$(srcdir)/'`missionui/missionshipchoice.cpp

missionshipchoice.obj: missionui/missionshipchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionshipchoice.obj -MD -MP -MF "$(DEPDIR)/missionshipchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionshipchoice.obj `if test -f 'missionui/missionshipchoice.cpp'; then $(CYGPATH_W) 'missionui/missionshipchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionshipchoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionshipchoice.Tpo" "$(DEPDIR)/missionshipchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionshipchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionshipchoice.cpp' object='missionshipchoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionshipchoice.Po' tmpdepfile='$(DEPDIR)/missionshipchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionshipchoice.obj `if test -f 'missionui/missionshipchoice.cpp'; then $(CYGPATH_W) 'missionui/missionshipchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionshipchoice.cpp'; fi`

missionstats.o: missionui/missionstats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionstats.o -MD -MP -MF "$(DEPDIR)/missionstats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionstats.o `test -f 'missionui/missionstats.cpp' || echo '$(srcdir)/'`missionui/missionstats.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionstats.Tpo" "$(DEPDIR)/missionstats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionstats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionstats.cpp' object='missionstats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionstats.Po' tmpdepfile='$(DEPDIR)/missionstats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionstats.o `test -f 'missionui/missionstats.cpp' || echo '$(srcdir)/'`missionui/missionstats.cpp

missionstats.obj: missionui/missionstats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionstats.obj -MD -MP -MF "$(DEPDIR)/missionstats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionstats.obj `if test -f 'missionui/missionstats.cpp'; then $(CYGPATH_W) 'missionui/missionstats.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionstats.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionstats.Tpo" "$(DEPDIR)/missionstats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionstats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionstats.cpp' object='missionstats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionstats.Po' tmpdepfile='$(DEPDIR)/missionstats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionstats.obj `if test -f 'missionui/missionstats.cpp'; then $(CYGPATH_W) 'missionui/missionstats.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionstats.cpp'; fi`

missionweaponchoice.o: missionui/missionweaponchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionweaponchoice.o -MD -MP -MF "$(DEPDIR)/missionweaponchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionweaponchoice.o `test -f 'missionui/missionweaponchoice.cpp' || echo '$(srcdir)/'`missionui/missionweaponchoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionweaponchoice.Tpo" "$(DEPDIR)/missionweaponchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionweaponchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionweaponchoice.cpp' object='missionweaponchoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionweaponchoice.Po' tmpdepfile='$(DEPDIR)/missionweaponchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionweaponchoice.o `test -f 'missionui/missionweaponchoice.cpp' || echo '$(srcdir)/'`missionui/missionweaponchoice.cpp

missionweaponchoice.obj: missionui/missionweaponchoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT missionweaponchoice.obj -MD -MP -MF "$(DEPDIR)/missionweaponchoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o missionweaponchoice.obj `if test -f 'missionui/missionweaponchoice.cpp'; then $(CYGPATH_W) 'missionui/missionweaponchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionweaponchoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/missionweaponchoice.Tpo" "$(DEPDIR)/missionweaponchoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/missionweaponchoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/missionweaponchoice.cpp' object='missionweaponchoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/missionweaponchoice.Po' tmpdepfile='$(DEPDIR)/missionweaponchoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o missionweaponchoice.obj `if test -f 'missionui/missionweaponchoice.cpp'; then $(CYGPATH_W) 'missionui/missionweaponchoice.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/missionweaponchoice.cpp'; fi`

redalert.o: missionui/redalert.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT redalert.o -MD -MP -MF "$(DEPDIR)/redalert.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o redalert.o `test -f 'missionui/redalert.cpp' || echo '$(srcdir)/'`missionui/redalert.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/redalert.Tpo" "$(DEPDIR)/redalert.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/redalert.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/redalert.cpp' object='redalert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/redalert.Po' tmpdepfile='$(DEPDIR)/redalert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o redalert.o `test -f 'missionui/redalert.cpp' || echo '$(srcdir)/'`missionui/redalert.cpp

redalert.obj: missionui/redalert.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT redalert.obj -MD -MP -MF "$(DEPDIR)/redalert.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o redalert.obj `if test -f 'missionui/redalert.cpp'; then $(CYGPATH_W) 'missionui/redalert.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/redalert.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/redalert.Tpo" "$(DEPDIR)/redalert.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/redalert.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/redalert.cpp' object='redalert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/redalert.Po' tmpdepfile='$(DEPDIR)/redalert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o redalert.obj `if test -f 'missionui/redalert.cpp'; then $(CYGPATH_W) 'missionui/redalert.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/redalert.cpp'; fi`

modelcollide.o: model/modelcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelcollide.o -MD -MP -MF "$(DEPDIR)/modelcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelcollide.o `test -f 'model/modelcollide.cpp' || echo '$(srcdir)/'`model/modelcollide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelcollide.Tpo" "$(DEPDIR)/modelcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelcollide.cpp' object='modelcollide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelcollide.Po' tmpdepfile='$(DEPDIR)/modelcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelcollide.o `test -f 'model/modelcollide.cpp' || echo '$(srcdir)/'`model/modelcollide.cpp

modelcollide.obj: model/modelcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelcollide.obj -MD -MP -MF "$(DEPDIR)/modelcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelcollide.obj `if test -f 'model/modelcollide.cpp'; then $(CYGPATH_W) 'model/modelcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelcollide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelcollide.Tpo" "$(DEPDIR)/modelcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelcollide.cpp' object='modelcollide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelcollide.Po' tmpdepfile='$(DEPDIR)/modelcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelcollide.obj `if test -f 'model/modelcollide.cpp'; then $(CYGPATH_W) 'model/modelcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelcollide.cpp'; fi`

modelinterp.o: model/modelinterp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelinterp.o -MD -MP -MF "$(DEPDIR)/modelinterp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelinterp.o `test -f 'model/modelinterp.cpp' || echo '$(srcdir)/'`model/modelinterp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelinterp.Tpo" "$(DEPDIR)/modelinterp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelinterp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelinterp.cpp' object='modelinterp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelinterp.Po' tmpdepfile='$(DEPDIR)/modelinterp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelinterp.o `test -f 'model/modelinterp.cpp' || echo '$(srcdir)/'`model/modelinterp.cpp

modelinterp.obj: model/modelinterp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelinterp.obj -MD -MP -MF "$(DEPDIR)/modelinterp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelinterp.obj `if test -f 'model/modelinterp.cpp'; then $(CYGPATH_W) 'model/modelinterp.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelinterp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelinterp.Tpo" "$(DEPDIR)/modelinterp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelinterp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelinterp.cpp' object='modelinterp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelinterp.Po' tmpdepfile='$(DEPDIR)/modelinterp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelinterp.obj `if test -f 'model/modelinterp.cpp'; then $(CYGPATH_W) 'model/modelinterp.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelinterp.cpp'; fi`

modeloctant.o: model/modeloctant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modeloctant.o -MD -MP -MF "$(DEPDIR)/modeloctant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modeloctant.o `test -f 'model/modeloctant.cpp' || echo '$(srcdir)/'`model/modeloctant.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modeloctant.Tpo" "$(DEPDIR)/modeloctant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modeloctant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modeloctant.cpp' object='modeloctant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modeloctant.Po' tmpdepfile='$(DEPDIR)/modeloctant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modeloctant.o `test -f 'model/modeloctant.cpp' || echo '$(srcdir)/'`model/modeloctant.cpp

modeloctant.obj: model/modeloctant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modeloctant.obj -MD -MP -MF "$(DEPDIR)/modeloctant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modeloctant.obj `if test -f 'model/modeloctant.cpp'; then $(CYGPATH_W) 'model/modeloctant.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modeloctant.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modeloctant.Tpo" "$(DEPDIR)/modeloctant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modeloctant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modeloctant.cpp' object='modeloctant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modeloctant.Po' tmpdepfile='$(DEPDIR)/modeloctant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modeloctant.obj `if test -f 'model/modeloctant.cpp'; then $(CYGPATH_W) 'model/modeloctant.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modeloctant.cpp'; fi`

modelread.o: model/modelread.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelread.o -MD -MP -MF "$(DEPDIR)/modelread.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelread.o `test -f 'model/modelread.cpp' || echo '$(srcdir)/'`model/modelread.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelread.Tpo" "$(DEPDIR)/modelread.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelread.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelread.cpp' object='modelread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelread.Po' tmpdepfile='$(DEPDIR)/modelread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelread.o `test -f 'model/modelread.cpp' || echo '$(srcdir)/'`model/modelread.cpp

modelread.obj: model/modelread.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modelread.obj -MD -MP -MF "$(DEPDIR)/modelread.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o modelread.obj `if test -f 'model/modelread.cpp'; then $(CYGPATH_W) 'model/modelread.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelread.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/modelread.Tpo" "$(DEPDIR)/modelread.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/modelread.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model/modelread.cpp' object='modelread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/modelread.Po' tmpdepfile='$(DEPDIR)/modelread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modelread.obj `if test -f 'model/modelread.cpp'; then $(CYGPATH_W) 'model/modelread.cpp'; else $(CYGPATH_W) '$(srcdir)/model/modelread.cpp'; fi`

neb.o: nebula/neb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neb.o -MD -MP -MF "$(DEPDIR)/neb.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o neb.o `test -f 'nebula/neb.cpp' || echo '$(srcdir)/'`nebula/neb.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/neb.Tpo" "$(DEPDIR)/neb.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/neb.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neb.cpp' object='neb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/neb.Po' tmpdepfile='$(DEPDIR)/neb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neb.o `test -f 'nebula/neb.cpp' || echo '$(srcdir)/'`nebula/neb.cpp

neb.obj: nebula/neb.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neb.obj -MD -MP -MF "$(DEPDIR)/neb.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o neb.obj `if test -f 'nebula/neb.cpp'; then $(CYGPATH_W) 'nebula/neb.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neb.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/neb.Tpo" "$(DEPDIR)/neb.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/neb.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neb.cpp' object='neb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/neb.Po' tmpdepfile='$(DEPDIR)/neb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neb.obj `if test -f 'nebula/neb.cpp'; then $(CYGPATH_W) 'nebula/neb.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neb.cpp'; fi`

neblightning.o: nebula/neblightning.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neblightning.o -MD -MP -MF "$(DEPDIR)/neblightning.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o neblightning.o `test -f 'nebula/neblightning.cpp' || echo '$(srcdir)/'`nebula/neblightning.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/neblightning.Tpo" "$(DEPDIR)/neblightning.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/neblightning.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neblightning.cpp' object='neblightning.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/neblightning.Po' tmpdepfile='$(DEPDIR)/neblightning.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neblightning.o `test -f 'nebula/neblightning.cpp' || echo '$(srcdir)/'`nebula/neblightning.cpp

neblightning.obj: nebula/neblightning.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT neblightning.obj -MD -MP -MF "$(DEPDIR)/neblightning.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o neblightning.obj `if test -f 'nebula/neblightning.cpp'; then $(CYGPATH_W) 'nebula/neblightning.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neblightning.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/neblightning.Tpo" "$(DEPDIR)/neblightning.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/neblightning.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nebula/neblightning.cpp' object='neblightning.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/neblightning.Po' tmpdepfile='$(DEPDIR)/neblightning.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o neblightning.obj `if test -f 'nebula/neblightning.cpp'; then $(CYGPATH_W) 'nebula/neblightning.cpp'; else $(CYGPATH_W) '$(srcdir)/nebula/neblightning.cpp'; fi`

collidedebrisship.o: object/collidedebrisship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collidedebrisship.o -MD -MP -MF "$(DEPDIR)/collidedebrisship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collidedebrisship.o `test -f 'object/collidedebrisship.cpp' || echo '$(srcdir)/'`object/collidedebrisship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collidedebrisship.Tpo" "$(DEPDIR)/collidedebrisship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collidedebrisship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisship.cpp' object='collidedebrisship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collidedebrisship.Po' tmpdepfile='$(DEPDIR)/collidedebrisship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collidedebrisship.o `test -f 'object/collidedebrisship.cpp' || echo '$(srcdir)/'`object/collidedebrisship.cpp

collidedebrisship.obj: object/collidedebrisship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collidedebrisship.obj -MD -MP -MF "$(DEPDIR)/collidedebrisship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collidedebrisship.obj `if test -f 'object/collidedebrisship.cpp'; then $(CYGPATH_W) 'object/collidedebrisship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collidedebrisship.Tpo" "$(DEPDIR)/collidedebrisship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collidedebrisship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisship.cpp' object='collidedebrisship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collidedebrisship.Po' tmpdepfile='$(DEPDIR)/collidedebrisship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collidedebrisship.obj `if test -f 'object/collidedebrisship.cpp'; then $(CYGPATH_W) 'object/collidedebrisship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisship.cpp'; fi`

collidedebrisweapon.o: object/collidedebrisweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collidedebrisweapon.o -MD -MP -MF "$(DEPDIR)/collidedebrisweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collidedebrisweapon.o `test -f 'object/collidedebrisweapon.cpp' || echo '$(srcdir)/'`object/collidedebrisweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collidedebrisweapon.Tpo" "$(DEPDIR)/collidedebrisweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collidedebrisweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisweapon.cpp' object='collidedebrisweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collidedebrisweapon.Po' tmpdepfile='$(DEPDIR)/collidedebrisweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collidedebrisweapon.o `test -f 'object/collidedebrisweapon.cpp' || echo '$(srcdir)/'`object/collidedebrisweapon.cpp

collidedebrisweapon.obj: object/collidedebrisweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collidedebrisweapon.obj -MD -MP -MF "$(DEPDIR)/collidedebrisweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collidedebrisweapon.obj `if test -f 'object/collidedebrisweapon.cpp'; then $(CYGPATH_W) 'object/collidedebrisweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collidedebrisweapon.Tpo" "$(DEPDIR)/collidedebrisweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collidedebrisweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collidedebrisweapon.cpp' object='collidedebrisweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collidedebrisweapon.Po' tmpdepfile='$(DEPDIR)/collidedebrisweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collidedebrisweapon.obj `if test -f 'object/collidedebrisweapon.cpp'; then $(CYGPATH_W) 'object/collidedebrisweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collidedebrisweapon.cpp'; fi`

collideshipship.o: object/collideshipship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideshipship.o -MD -MP -MF "$(DEPDIR)/collideshipship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideshipship.o `test -f 'object/collideshipship.cpp' || echo '$(srcdir)/'`object/collideshipship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideshipship.Tpo" "$(DEPDIR)/collideshipship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideshipship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipship.cpp' object='collideshipship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideshipship.Po' tmpdepfile='$(DEPDIR)/collideshipship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideshipship.o `test -f 'object/collideshipship.cpp' || echo '$(srcdir)/'`object/collideshipship.cpp

collideshipship.obj: object/collideshipship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideshipship.obj -MD -MP -MF "$(DEPDIR)/collideshipship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideshipship.obj `if test -f 'object/collideshipship.cpp'; then $(CYGPATH_W) 'object/collideshipship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideshipship.Tpo" "$(DEPDIR)/collideshipship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideshipship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipship.cpp' object='collideshipship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideshipship.Po' tmpdepfile='$(DEPDIR)/collideshipship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideshipship.obj `if test -f 'object/collideshipship.cpp'; then $(CYGPATH_W) 'object/collideshipship.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipship.cpp'; fi`

collideshipweapon.o: object/collideshipweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideshipweapon.o -MD -MP -MF "$(DEPDIR)/collideshipweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideshipweapon.o `test -f 'object/collideshipweapon.cpp' || echo '$(srcdir)/'`object/collideshipweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideshipweapon.Tpo" "$(DEPDIR)/collideshipweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideshipweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipweapon.cpp' object='collideshipweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideshipweapon.Po' tmpdepfile='$(DEPDIR)/collideshipweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideshipweapon.o `test -f 'object/collideshipweapon.cpp' || echo '$(srcdir)/'`object/collideshipweapon.cpp

collideshipweapon.obj: object/collideshipweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideshipweapon.obj -MD -MP -MF "$(DEPDIR)/collideshipweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideshipweapon.obj `if test -f 'object/collideshipweapon.cpp'; then $(CYGPATH_W) 'object/collideshipweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideshipweapon.Tpo" "$(DEPDIR)/collideshipweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideshipweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideshipweapon.cpp' object='collideshipweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideshipweapon.Po' tmpdepfile='$(DEPDIR)/collideshipweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideshipweapon.obj `if test -f 'object/collideshipweapon.cpp'; then $(CYGPATH_W) 'object/collideshipweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideshipweapon.cpp'; fi`

collideweaponweapon.o: object/collideweaponweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideweaponweapon.o -MD -MP -MF "$(DEPDIR)/collideweaponweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideweaponweapon.o `test -f 'object/collideweaponweapon.cpp' || echo '$(srcdir)/'`object/collideweaponweapon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideweaponweapon.Tpo" "$(DEPDIR)/collideweaponweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideweaponweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideweaponweapon.cpp' object='collideweaponweapon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideweaponweapon.Po' tmpdepfile='$(DEPDIR)/collideweaponweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideweaponweapon.o `test -f 'object/collideweaponweapon.cpp' || echo '$(srcdir)/'`object/collideweaponweapon.cpp

collideweaponweapon.obj: object/collideweaponweapon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collideweaponweapon.obj -MD -MP -MF "$(DEPDIR)/collideweaponweapon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o collideweaponweapon.obj `if test -f 'object/collideweaponweapon.cpp'; then $(CYGPATH_W) 'object/collideweaponweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideweaponweapon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/collideweaponweapon.Tpo" "$(DEPDIR)/collideweaponweapon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/collideweaponweapon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/collideweaponweapon.cpp' object='collideweaponweapon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/collideweaponweapon.Po' tmpdepfile='$(DEPDIR)/collideweaponweapon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collideweaponweapon.obj `if test -f 'object/collideweaponweapon.cpp'; then $(CYGPATH_W) 'object/collideweaponweapon.cpp'; else $(CYGPATH_W) '$(srcdir)/object/collideweaponweapon.cpp'; fi`

objcollide.o: object/objcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objcollide.o -MD -MP -MF "$(DEPDIR)/objcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objcollide.o `test -f 'object/objcollide.cpp' || echo '$(srcdir)/'`object/objcollide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objcollide.Tpo" "$(DEPDIR)/objcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objcollide.cpp' object='objcollide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objcollide.Po' tmpdepfile='$(DEPDIR)/objcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objcollide.o `test -f 'object/objcollide.cpp' || echo '$(srcdir)/'`object/objcollide.cpp

objcollide.obj: object/objcollide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objcollide.obj -MD -MP -MF "$(DEPDIR)/objcollide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objcollide.obj `if test -f 'object/objcollide.cpp'; then $(CYGPATH_W) 'object/objcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objcollide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objcollide.Tpo" "$(DEPDIR)/objcollide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objcollide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objcollide.cpp' object='objcollide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objcollide.Po' tmpdepfile='$(DEPDIR)/objcollide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objcollide.obj `if test -f 'object/objcollide.cpp'; then $(CYGPATH_W) 'object/objcollide.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objcollide.cpp'; fi`

object.o: object/object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object.o -MD -MP -MF "$(DEPDIR)/object.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o object.o `test -f 'object/object.cpp' || echo '$(srcdir)/'`object/object.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/object.Tpo" "$(DEPDIR)/object.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/object.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/object.cpp' object='object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/object.Po' tmpdepfile='$(DEPDIR)/object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object.o `test -f 'object/object.cpp' || echo '$(srcdir)/'`object/object.cpp

object.obj: object/object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object.obj -MD -MP -MF "$(DEPDIR)/object.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o object.obj `if test -f 'object/object.cpp'; then $(CYGPATH_W) 'object/object.cpp'; else $(CYGPATH_W) '$(srcdir)/object/object.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/object.Tpo" "$(DEPDIR)/object.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/object.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/object.cpp' object='object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/object.Po' tmpdepfile='$(DEPDIR)/object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object.obj `if test -f 'object/object.cpp'; then $(CYGPATH_W) 'object/object.cpp'; else $(CYGPATH_W) '$(srcdir)/object/object.cpp'; fi`

objectsort.o: object/objectsort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objectsort.o -MD -MP -MF "$(DEPDIR)/objectsort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objectsort.o `test -f 'object/objectsort.cpp' || echo '$(srcdir)/'`object/objectsort.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objectsort.Tpo" "$(DEPDIR)/objectsort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objectsort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsort.cpp' object='objectsort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objectsort.Po' tmpdepfile='$(DEPDIR)/objectsort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objectsort.o `test -f 'object/objectsort.cpp' || echo '$(srcdir)/'`object/objectsort.cpp

objectsort.obj: object/objectsort.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objectsort.obj -MD -MP -MF "$(DEPDIR)/objectsort.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objectsort.obj `if test -f 'object/objectsort.cpp'; then $(CYGPATH_W) 'object/objectsort.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsort.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objectsort.Tpo" "$(DEPDIR)/objectsort.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objectsort.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsort.cpp' object='objectsort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objectsort.Po' tmpdepfile='$(DEPDIR)/objectsort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objectsort.obj `if test -f 'object/objectsort.cpp'; then $(CYGPATH_W) 'object/objectsort.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsort.cpp'; fi`

observer.o: observer/observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT observer.o -MD -MP -MF "$(DEPDIR)/observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o observer.o `test -f 'observer/observer.cpp' || echo '$(srcdir)/'`observer/observer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/observer.Tpo" "$(DEPDIR)/observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='observer/observer.cpp' object='observer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/observer.Po' tmpdepfile='$(DEPDIR)/observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o observer.o `test -f 'observer/observer.cpp' || echo '$(srcdir)/'`observer/observer.cpp

observer.obj: observer/observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT observer.obj -MD -MP -MF "$(DEPDIR)/observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o observer.obj `if test -f 'observer/observer.cpp'; then $(CYGPATH_W) 'observer/observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer/observer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/observer.Tpo" "$(DEPDIR)/observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='observer/observer.cpp' object='observer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/observer.Po' tmpdepfile='$(DEPDIR)/observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o observer.obj `if test -f 'observer/observer.cpp'; then $(CYGPATH_W) 'observer/observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer/observer.cpp'; fi`

palman.o: palman/palman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT palman.o -MD -MP -MF "$(DEPDIR)/palman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o palman.o `test -f 'palman/palman.cpp' || echo '$(srcdir)/'`palman/palman.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/palman.Tpo" "$(DEPDIR)/palman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/palman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='palman/palman.cpp' object='palman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/palman.Po' tmpdepfile='$(DEPDIR)/palman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o palman.o `test -f 'palman/palman.cpp' || echo '$(srcdir)/'`palman/palman.cpp

palman.obj: palman/palman.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT palman.obj -MD -MP -MF "$(DEPDIR)/palman.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o palman.obj `if test -f 'palman/palman.cpp'; then $(CYGPATH_W) 'palman/palman.cpp'; else $(CYGPATH_W) '$(srcdir)/palman/palman.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/palman.Tpo" "$(DEPDIR)/palman.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/palman.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='palman/palman.cpp' object='palman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/palman.Po' tmpdepfile='$(DEPDIR)/palman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o palman.obj `if test -f 'palman/palman.cpp'; then $(CYGPATH_W) 'palman/palman.cpp'; else $(CYGPATH_W) '$(srcdir)/palman/palman.cpp'; fi`

encrypt.o: parse/encrypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encrypt.o -MD -MP -MF "$(DEPDIR)/encrypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o encrypt.o `test -f 'parse/encrypt.cpp' || echo '$(srcdir)/'`parse/encrypt.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/encrypt.Tpo" "$(DEPDIR)/encrypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/encrypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/encrypt.cpp' object='encrypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/encrypt.Po' tmpdepfile='$(DEPDIR)/encrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encrypt.o `test -f 'parse/encrypt.cpp' || echo '$(srcdir)/'`parse/encrypt.cpp

encrypt.obj: parse/encrypt.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encrypt.obj -MD -MP -MF "$(DEPDIR)/encrypt.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o encrypt.obj `if test -f 'parse/encrypt.cpp'; then $(CYGPATH_W) 'parse/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/encrypt.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/encrypt.Tpo" "$(DEPDIR)/encrypt.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/encrypt.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/encrypt.cpp' object='encrypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/encrypt.Po' tmpdepfile='$(DEPDIR)/encrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encrypt.obj `if test -f 'parse/encrypt.cpp'; then $(CYGPATH_W) 'parse/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/encrypt.cpp'; fi`

parselo.o: parse/parselo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parselo.o -MD -MP -MF "$(DEPDIR)/parselo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parselo.o `test -f 'parse/parselo.cpp' || echo '$(srcdir)/'`parse/parselo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/parselo.Tpo" "$(DEPDIR)/parselo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/parselo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/parselo.cpp' object='parselo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/parselo.Po' tmpdepfile='$(DEPDIR)/parselo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parselo.o `test -f 'parse/parselo.cpp' || echo '$(srcdir)/'`parse/parselo.cpp

parselo.obj: parse/parselo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parselo.obj -MD -MP -MF "$(DEPDIR)/parselo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parselo.obj `if test -f 'parse/parselo.cpp'; then $(CYGPATH_W) 'parse/parselo.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/parselo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/parselo.Tpo" "$(DEPDIR)/parselo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/parselo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/parselo.cpp' object='parselo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/parselo.Po' tmpdepfile='$(DEPDIR)/parselo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parselo.obj `if test -f 'parse/parselo.cpp'; then $(CYGPATH_W) 'parse/parselo.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/parselo.cpp'; fi`

sexp.o: parse/sexp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sexp.o -MD -MP -MF "$(DEPDIR)/sexp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sexp.o `test -f 'parse/sexp.cpp' || echo '$(srcdir)/'`parse/sexp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/sexp.Tpo" "$(DEPDIR)/sexp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sexp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/sexp.cpp' object='sexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sexp.Po' tmpdepfile='$(DEPDIR)/sexp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sexp.o `test -f 'parse/sexp.cpp' || echo '$(srcdir)/'`parse/sexp.cpp

sexp.obj: parse/sexp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sexp.obj -MD -MP -MF "$(DEPDIR)/sexp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sexp.obj `if test -f 'parse/sexp.cpp'; then $(CYGPATH_W) 'parse/sexp.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/sexp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/sexp.Tpo" "$(DEPDIR)/sexp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sexp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse/sexp.cpp' object='sexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sexp.Po' tmpdepfile='$(DEPDIR)/sexp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sexp.obj `if test -f 'parse/sexp.cpp'; then $(CYGPATH_W) 'parse/sexp.cpp'; else $(CYGPATH_W) '$(srcdir)/parse/sexp.cpp'; fi`

particle.o: particle/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT particle.o -MD -MP -MF "$(DEPDIR)/particle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o particle.o `test -f 'particle/particle.cpp' || echo '$(srcdir)/'`particle/particle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/particle.Tpo" "$(DEPDIR)/particle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/particle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='particle/particle.cpp' object='particle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/particle.Po' tmpdepfile='$(DEPDIR)/particle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o particle.o `test -f 'particle/particle.cpp' || echo '$(srcdir)/'`particle/particle.cpp

particle.obj: particle/particle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT particle.obj -MD -MP -MF "$(DEPDIR)/particle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o particle.obj `if test -f 'particle/particle.cpp'; then $(CYGPATH_W) 'particle/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/particle/particle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/particle.Tpo" "$(DEPDIR)/particle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/particle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='particle/particle.cpp' object='particle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/particle.Po' tmpdepfile='$(DEPDIR)/particle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o particle.obj `if test -f 'particle/particle.cpp'; then $(CYGPATH_W) 'particle/particle.cpp'; else $(CYGPATH_W) '$(srcdir)/particle/particle.cpp'; fi`

pcxutils.o: pcxutils/pcxutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcxutils.o -MD -MP -MF "$(DEPDIR)/pcxutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pcxutils.o `test -f 'pcxutils/pcxutils.cpp' || echo '$(srcdir)/'`pcxutils/pcxutils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pcxutils.Tpo" "$(DEPDIR)/pcxutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pcxutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pcxutils/pcxutils.cpp' object='pcxutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pcxutils.Po' tmpdepfile='$(DEPDIR)/pcxutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcxutils.o `test -f 'pcxutils/pcxutils.cpp' || echo '$(srcdir)/'`pcxutils/pcxutils.cpp

pcxutils.obj: pcxutils/pcxutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcxutils.obj -MD -MP -MF "$(DEPDIR)/pcxutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pcxutils.obj `if test -f 'pcxutils/pcxutils.cpp'; then $(CYGPATH_W) 'pcxutils/pcxutils.cpp'; else $(CYGPATH_W) '$(srcdir)/pcxutils/pcxutils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pcxutils.Tpo" "$(DEPDIR)/pcxutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pcxutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='pcxutils/pcxutils.cpp' object='pcxutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pcxutils.Po' tmpdepfile='$(DEPDIR)/pcxutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcxutils.obj `if test -f 'pcxutils/pcxutils.cpp'; then $(CYGPATH_W) 'pcxutils/pcxutils.cpp'; else $(CYGPATH_W) '$(srcdir)/pcxutils/pcxutils.cpp'; fi`

physics.o: physics/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physics.o -MD -MP -MF "$(DEPDIR)/physics.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o physics.o `test -f 'physics/physics.cpp' || echo '$(srcdir)/'`physics/physics.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/physics.Tpo" "$(DEPDIR)/physics.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/physics.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='physics/physics.cpp' object='physics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/physics.Po' tmpdepfile='$(DEPDIR)/physics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physics.o `test -f 'physics/physics.cpp' || echo '$(srcdir)/'`physics/physics.cpp

physics.obj: physics/physics.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT physics.obj -MD -MP -MF "$(DEPDIR)/physics.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o physics.obj `if test -f 'physics/physics.cpp'; then $(CYGPATH_W) 'physics/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/physics/physics.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/physics.Tpo" "$(DEPDIR)/physics.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/physics.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='physics/physics.cpp' object='physics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/physics.Po' tmpdepfile='$(DEPDIR)/physics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o physics.obj `if test -f 'physics/physics.cpp'; then $(CYGPATH_W) 'physics/physics.cpp'; else $(CYGPATH_W) '$(srcdir)/physics/physics.cpp'; fi`

managepilot.o: playerman/managepilot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT managepilot.o -MD -MP -MF "$(DEPDIR)/managepilot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o managepilot.o `test -f 'playerman/managepilot.cpp' || echo '$(srcdir)/'`playerman/managepilot.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/managepilot.Tpo" "$(DEPDIR)/managepilot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/managepilot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/managepilot.cpp' object='managepilot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/managepilot.Po' tmpdepfile='$(DEPDIR)/managepilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o managepilot.o `test -f 'playerman/managepilot.cpp' || echo '$(srcdir)/'`playerman/managepilot.cpp

managepilot.obj: playerman/managepilot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT managepilot.obj -MD -MP -MF "$(DEPDIR)/managepilot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o managepilot.obj `if test -f 'playerman/managepilot.cpp'; then $(CYGPATH_W) 'playerman/managepilot.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/managepilot.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/managepilot.Tpo" "$(DEPDIR)/managepilot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/managepilot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/managepilot.cpp' object='managepilot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/managepilot.Po' tmpdepfile='$(DEPDIR)/managepilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o managepilot.obj `if test -f 'playerman/managepilot.cpp'; then $(CYGPATH_W) 'playerman/managepilot.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/managepilot.cpp'; fi`

playercontrol.o: playerman/playercontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT playercontrol.o -MD -MP -MF "$(DEPDIR)/playercontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o playercontrol.o `test -f 'playerman/playercontrol.cpp' || echo '$(srcdir)/'`playerman/playercontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/playercontrol.Tpo" "$(DEPDIR)/playercontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/playercontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/playercontrol.cpp' object='playercontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/playercontrol.Po' tmpdepfile='$(DEPDIR)/playercontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o playercontrol.o `test -f 'playerman/playercontrol.cpp' || echo '$(srcdir)/'`playerman/playercontrol.cpp

playercontrol.obj: playerman/playercontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT playercontrol.obj -MD -MP -MF "$(DEPDIR)/playercontrol.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o playercontrol.obj `if test -f 'playerman/playercontrol.cpp'; then $(CYGPATH_W) 'playerman/playercontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/playercontrol.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/playercontrol.Tpo" "$(DEPDIR)/playercontrol.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/playercontrol.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playerman/playercontrol.cpp' object='playercontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/playercontrol.Po' tmpdepfile='$(DEPDIR)/playercontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o playercontrol.obj `if test -f 'playerman/playercontrol.cpp'; then $(CYGPATH_W) 'playerman/playercontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/playerman/playercontrol.cpp'; fi`

popup.o: popup/popup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT popup.o -MD -MP -MF "$(DEPDIR)/popup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o popup.o `test -f 'popup/popup.cpp' || echo '$(srcdir)/'`popup/popup.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/popup.Tpo" "$(DEPDIR)/popup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/popup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popup.cpp' object='popup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/popup.Po' tmpdepfile='$(DEPDIR)/popup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o popup.o `test -f 'popup/popup.cpp' || echo '$(srcdir)/'`popup/popup.cpp

popup.obj: popup/popup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT popup.obj -MD -MP -MF "$(DEPDIR)/popup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o popup.obj `if test -f 'popup/popup.cpp'; then $(CYGPATH_W) 'popup/popup.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popup.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/popup.Tpo" "$(DEPDIR)/popup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/popup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popup.cpp' object='popup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/popup.Po' tmpdepfile='$(DEPDIR)/popup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o popup.obj `if test -f 'popup/popup.cpp'; then $(CYGPATH_W) 'popup/popup.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popup.cpp'; fi`

popupdead.o: popup/popupdead.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT popupdead.o -MD -MP -MF "$(DEPDIR)/popupdead.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o popupdead.o `test -f 'popup/popupdead.cpp' || echo '$(srcdir)/'`popup/popupdead.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/popupdead.Tpo" "$(DEPDIR)/popupdead.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/popupdead.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popupdead.cpp' object='popupdead.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/popupdead.Po' tmpdepfile='$(DEPDIR)/popupdead.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o popupdead.o `test -f 'popup/popupdead.cpp' || echo '$(srcdir)/'`popup/popupdead.cpp

popupdead.obj: popup/popupdead.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT popupdead.obj -MD -MP -MF "$(DEPDIR)/popupdead.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o popupdead.obj `if test -f 'popup/popupdead.cpp'; then $(CYGPATH_W) 'popup/popupdead.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popupdead.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/popupdead.Tpo" "$(DEPDIR)/popupdead.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/popupdead.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='popup/popupdead.cpp' object='popupdead.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/popupdead.Po' tmpdepfile='$(DEPDIR)/popupdead.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o popupdead.obj `if test -f 'popup/popupdead.cpp'; then $(CYGPATH_W) 'popup/popupdead.cpp'; else $(CYGPATH_W) '$(srcdir)/popup/popupdead.cpp'; fi`

radar.o: radar/radar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radar.o -MD -MP -MF "$(DEPDIR)/radar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o radar.o `test -f 'radar/radar.cpp' || echo '$(srcdir)/'`radar/radar.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/radar.Tpo" "$(DEPDIR)/radar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/radar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='radar/radar.cpp' object='radar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/radar.Po' tmpdepfile='$(DEPDIR)/radar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radar.o `test -f 'radar/radar.cpp' || echo '$(srcdir)/'`radar/radar.cpp

radar.obj: radar/radar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radar.obj -MD -MP -MF "$(DEPDIR)/radar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o radar.obj `if test -f 'radar/radar.cpp'; then $(CYGPATH_W) 'radar/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/radar/radar.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/radar.Tpo" "$(DEPDIR)/radar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/radar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='radar/radar.cpp' object='radar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/radar.Po' tmpdepfile='$(DEPDIR)/radar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radar.obj `if test -f 'radar/radar.cpp'; then $(CYGPATH_W) 'radar/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/radar/radar.cpp'; fi`

3dclipper.o: render/3dclipper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dclipper.o -MD -MP -MF "$(DEPDIR)/3dclipper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dclipper.o `test -f 'render/3dclipper.cpp' || echo '$(srcdir)/'`render/3dclipper.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dclipper.Tpo" "$(DEPDIR)/3dclipper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dclipper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dclipper.cpp' object='3dclipper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dclipper.Po' tmpdepfile='$(DEPDIR)/3dclipper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dclipper.o `test -f 'render/3dclipper.cpp' || echo '$(srcdir)/'`render/3dclipper.cpp

3dclipper.obj: render/3dclipper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dclipper.obj -MD -MP -MF "$(DEPDIR)/3dclipper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dclipper.obj `if test -f 'render/3dclipper.cpp'; then $(CYGPATH_W) 'render/3dclipper.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dclipper.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dclipper.Tpo" "$(DEPDIR)/3dclipper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dclipper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dclipper.cpp' object='3dclipper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dclipper.Po' tmpdepfile='$(DEPDIR)/3dclipper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dclipper.obj `if test -f 'render/3dclipper.cpp'; then $(CYGPATH_W) 'render/3dclipper.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dclipper.cpp'; fi`

3ddraw.o: render/3ddraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3ddraw.o -MD -MP -MF "$(DEPDIR)/3ddraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3ddraw.o `test -f 'render/3ddraw.cpp' || echo '$(srcdir)/'`render/3ddraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3ddraw.Tpo" "$(DEPDIR)/3ddraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3ddraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3ddraw.cpp' object='3ddraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3ddraw.Po' tmpdepfile='$(DEPDIR)/3ddraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3ddraw.o `test -f 'render/3ddraw.cpp' || echo '$(srcdir)/'`render/3ddraw.cpp

3ddraw.obj: render/3ddraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3ddraw.obj -MD -MP -MF "$(DEPDIR)/3ddraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3ddraw.obj `if test -f 'render/3ddraw.cpp'; then $(CYGPATH_W) 'render/3ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3ddraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3ddraw.Tpo" "$(DEPDIR)/3ddraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3ddraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3ddraw.cpp' object='3ddraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3ddraw.Po' tmpdepfile='$(DEPDIR)/3ddraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3ddraw.obj `if test -f 'render/3ddraw.cpp'; then $(CYGPATH_W) 'render/3ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3ddraw.cpp'; fi`

3dlaser.o: render/3dlaser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dlaser.o -MD -MP -MF "$(DEPDIR)/3dlaser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dlaser.o `test -f 'render/3dlaser.cpp' || echo '$(srcdir)/'`render/3dlaser.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dlaser.Tpo" "$(DEPDIR)/3dlaser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dlaser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dlaser.cpp' object='3dlaser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dlaser.Po' tmpdepfile='$(DEPDIR)/3dlaser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dlaser.o `test -f 'render/3dlaser.cpp' || echo '$(srcdir)/'`render/3dlaser.cpp

3dlaser.obj: render/3dlaser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dlaser.obj -MD -MP -MF "$(DEPDIR)/3dlaser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dlaser.obj `if test -f 'render/3dlaser.cpp'; then $(CYGPATH_W) 'render/3dlaser.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dlaser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dlaser.Tpo" "$(DEPDIR)/3dlaser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dlaser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dlaser.cpp' object='3dlaser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dlaser.Po' tmpdepfile='$(DEPDIR)/3dlaser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dlaser.obj `if test -f 'render/3dlaser.cpp'; then $(CYGPATH_W) 'render/3dlaser.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dlaser.cpp'; fi`

3dmath.o: render/3dmath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dmath.o -MD -MP -MF "$(DEPDIR)/3dmath.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dmath.o `test -f 'render/3dmath.cpp' || echo '$(srcdir)/'`render/3dmath.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dmath.Tpo" "$(DEPDIR)/3dmath.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dmath.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dmath.cpp' object='3dmath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dmath.Po' tmpdepfile='$(DEPDIR)/3dmath.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dmath.o `test -f 'render/3dmath.cpp' || echo '$(srcdir)/'`render/3dmath.cpp

3dmath.obj: render/3dmath.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dmath.obj -MD -MP -MF "$(DEPDIR)/3dmath.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dmath.obj `if test -f 'render/3dmath.cpp'; then $(CYGPATH_W) 'render/3dmath.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dmath.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dmath.Tpo" "$(DEPDIR)/3dmath.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dmath.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dmath.cpp' object='3dmath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dmath.Po' tmpdepfile='$(DEPDIR)/3dmath.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dmath.obj `if test -f 'render/3dmath.cpp'; then $(CYGPATH_W) 'render/3dmath.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dmath.cpp'; fi`

3dsetup.o: render/3dsetup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dsetup.o -MD -MP -MF "$(DEPDIR)/3dsetup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dsetup.o `test -f 'render/3dsetup.cpp' || echo '$(srcdir)/'`render/3dsetup.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dsetup.Tpo" "$(DEPDIR)/3dsetup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dsetup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dsetup.cpp' object='3dsetup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dsetup.Po' tmpdepfile='$(DEPDIR)/3dsetup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dsetup.o `test -f 'render/3dsetup.cpp' || echo '$(srcdir)/'`render/3dsetup.cpp

3dsetup.obj: render/3dsetup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dsetup.obj -MD -MP -MF "$(DEPDIR)/3dsetup.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o 3dsetup.obj `if test -f 'render/3dsetup.cpp'; then $(CYGPATH_W) 'render/3dsetup.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dsetup.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/3dsetup.Tpo" "$(DEPDIR)/3dsetup.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/3dsetup.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='render/3dsetup.cpp' object='3dsetup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/3dsetup.Po' tmpdepfile='$(DEPDIR)/3dsetup.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dsetup.obj `if test -f 'render/3dsetup.cpp'; then $(CYGPATH_W) 'render/3dsetup.cpp'; else $(CYGPATH_W) '$(srcdir)/render/3dsetup.cpp'; fi`

afterburner.o: ship/afterburner.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afterburner.o -MD -MP -MF "$(DEPDIR)/afterburner.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o afterburner.o `test -f 'ship/afterburner.cpp' || echo '$(srcdir)/'`ship/afterburner.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/afterburner.Tpo" "$(DEPDIR)/afterburner.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/afterburner.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/afterburner.cpp' object='afterburner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/afterburner.Po' tmpdepfile='$(DEPDIR)/afterburner.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afterburner.o `test -f 'ship/afterburner.cpp' || echo '$(srcdir)/'`ship/afterburner.cpp

afterburner.obj: ship/afterburner.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afterburner.obj -MD -MP -MF "$(DEPDIR)/afterburner.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o afterburner.obj `if test -f 'ship/afterburner.cpp'; then $(CYGPATH_W) 'ship/afterburner.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/afterburner.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/afterburner.Tpo" "$(DEPDIR)/afterburner.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/afterburner.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/afterburner.cpp' object='afterburner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/afterburner.Po' tmpdepfile='$(DEPDIR)/afterburner.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afterburner.obj `if test -f 'ship/afterburner.cpp'; then $(CYGPATH_W) 'ship/afterburner.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/afterburner.cpp'; fi`

ai.o: ship/ai.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ai.o -MD -MP -MF "$(DEPDIR)/ai.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ai.o `test -f 'ship/ai.cpp' || echo '$(srcdir)/'`ship/ai.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ai.Tpo" "$(DEPDIR)/ai.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ai.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ai.cpp' object='ai.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ai.Po' tmpdepfile='$(DEPDIR)/ai.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ai.o `test -f 'ship/ai.cpp' || echo '$(srcdir)/'`ship/ai.cpp

ai.obj: ship/ai.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ai.obj -MD -MP -MF "$(DEPDIR)/ai.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ai.obj `if test -f 'ship/ai.cpp'; then $(CYGPATH_W) 'ship/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ai.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ai.Tpo" "$(DEPDIR)/ai.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ai.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ai.cpp' object='ai.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ai.Po' tmpdepfile='$(DEPDIR)/ai.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ai.obj `if test -f 'ship/ai.cpp'; then $(CYGPATH_W) 'ship/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ai.cpp'; fi`

aibig.o: ship/aibig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aibig.o -MD -MP -MF "$(DEPDIR)/aibig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aibig.o `test -f 'ship/aibig.cpp' || echo '$(srcdir)/'`ship/aibig.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aibig.Tpo" "$(DEPDIR)/aibig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aibig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aibig.cpp' object='aibig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aibig.Po' tmpdepfile='$(DEPDIR)/aibig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aibig.o `test -f 'ship/aibig.cpp' || echo '$(srcdir)/'`ship/aibig.cpp

aibig.obj: ship/aibig.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aibig.obj -MD -MP -MF "$(DEPDIR)/aibig.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aibig.obj `if test -f 'ship/aibig.cpp'; then $(CYGPATH_W) 'ship/aibig.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aibig.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aibig.Tpo" "$(DEPDIR)/aibig.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aibig.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aibig.cpp' object='aibig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aibig.Po' tmpdepfile='$(DEPDIR)/aibig.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aibig.obj `if test -f 'ship/aibig.cpp'; then $(CYGPATH_W) 'ship/aibig.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aibig.cpp'; fi`

aicode.o: ship/aicode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aicode.o -MD -MP -MF "$(DEPDIR)/aicode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aicode.o `test -f 'ship/aicode.cpp' || echo '$(srcdir)/'`ship/aicode.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aicode.Tpo" "$(DEPDIR)/aicode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aicode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aicode.cpp' object='aicode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aicode.Po' tmpdepfile='$(DEPDIR)/aicode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aicode.o `test -f 'ship/aicode.cpp' || echo '$(srcdir)/'`ship/aicode.cpp

aicode.obj: ship/aicode.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aicode.obj -MD -MP -MF "$(DEPDIR)/aicode.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aicode.obj `if test -f 'ship/aicode.cpp'; then $(CYGPATH_W) 'ship/aicode.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aicode.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aicode.Tpo" "$(DEPDIR)/aicode.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aicode.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aicode.cpp' object='aicode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aicode.Po' tmpdepfile='$(DEPDIR)/aicode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aicode.obj `if test -f 'ship/aicode.cpp'; then $(CYGPATH_W) 'ship/aicode.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aicode.cpp'; fi`

aigoals.o: ship/aigoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aigoals.o -MD -MP -MF "$(DEPDIR)/aigoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aigoals.o `test -f 'ship/aigoals.cpp' || echo '$(srcdir)/'`ship/aigoals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aigoals.Tpo" "$(DEPDIR)/aigoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aigoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aigoals.cpp' object='aigoals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aigoals.Po' tmpdepfile='$(DEPDIR)/aigoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aigoals.o `test -f 'ship/aigoals.cpp' || echo '$(srcdir)/'`ship/aigoals.cpp

aigoals.obj: ship/aigoals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aigoals.obj -MD -MP -MF "$(DEPDIR)/aigoals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o aigoals.obj `if test -f 'ship/aigoals.cpp'; then $(CYGPATH_W) 'ship/aigoals.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aigoals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/aigoals.Tpo" "$(DEPDIR)/aigoals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/aigoals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/aigoals.cpp' object='aigoals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/aigoals.Po' tmpdepfile='$(DEPDIR)/aigoals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aigoals.obj `if test -f 'ship/aigoals.cpp'; then $(CYGPATH_W) 'ship/aigoals.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/aigoals.cpp'; fi`

awacs.o: ship/awacs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT awacs.o -MD -MP -MF "$(DEPDIR)/awacs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o awacs.o `test -f 'ship/awacs.cpp' || echo '$(srcdir)/'`ship/awacs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/awacs.Tpo" "$(DEPDIR)/awacs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/awacs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/awacs.cpp' object='awacs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/awacs.Po' tmpdepfile='$(DEPDIR)/awacs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o awacs.o `test -f 'ship/awacs.cpp' || echo '$(srcdir)/'`ship/awacs.cpp

awacs.obj: ship/awacs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT awacs.obj -MD -MP -MF "$(DEPDIR)/awacs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o awacs.obj `if test -f 'ship/awacs.cpp'; then $(CYGPATH_W) 'ship/awacs.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/awacs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/awacs.Tpo" "$(DEPDIR)/awacs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/awacs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/awacs.cpp' object='awacs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/awacs.Po' tmpdepfile='$(DEPDIR)/awacs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o awacs.obj `if test -f 'ship/awacs.cpp'; then $(CYGPATH_W) 'ship/awacs.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/awacs.cpp'; fi`

shield.o: ship/shield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shield.o -MD -MP -MF "$(DEPDIR)/shield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shield.o `test -f 'ship/shield.cpp' || echo '$(srcdir)/'`ship/shield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shield.Tpo" "$(DEPDIR)/shield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shield.cpp' object='shield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shield.Po' tmpdepfile='$(DEPDIR)/shield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shield.o `test -f 'ship/shield.cpp' || echo '$(srcdir)/'`ship/shield.cpp

shield.obj: ship/shield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shield.obj -MD -MP -MF "$(DEPDIR)/shield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shield.obj `if test -f 'ship/shield.cpp'; then $(CYGPATH_W) 'ship/shield.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shield.Tpo" "$(DEPDIR)/shield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shield.cpp' object='shield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shield.Po' tmpdepfile='$(DEPDIR)/shield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shield.obj `if test -f 'ship/shield.cpp'; then $(CYGPATH_W) 'ship/shield.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shield.cpp'; fi`

ship.o: ship/ship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ship.o -MD -MP -MF "$(DEPDIR)/ship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ship.o `test -f 'ship/ship.cpp' || echo '$(srcdir)/'`ship/ship.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ship.Tpo" "$(DEPDIR)/ship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ship.cpp' object='ship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ship.Po' tmpdepfile='$(DEPDIR)/ship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ship.o `test -f 'ship/ship.cpp' || echo '$(srcdir)/'`ship/ship.cpp

ship.obj: ship/ship.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ship.obj -MD -MP -MF "$(DEPDIR)/ship.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ship.obj `if test -f 'ship/ship.cpp'; then $(CYGPATH_W) 'ship/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ship.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ship.Tpo" "$(DEPDIR)/ship.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ship.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/ship.cpp' object='ship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ship.Po' tmpdepfile='$(DEPDIR)/ship.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ship.obj `if test -f 'ship/ship.cpp'; then $(CYGPATH_W) 'ship/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/ship.cpp'; fi`

shipcontrails.o: ship/shipcontrails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shipcontrails.o -MD -MP -MF "$(DEPDIR)/shipcontrails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shipcontrails.o `test -f 'ship/shipcontrails.cpp' || echo '$(srcdir)/'`ship/shipcontrails.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shipcontrails.Tpo" "$(DEPDIR)/shipcontrails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shipcontrails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipcontrails.cpp' object='shipcontrails.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shipcontrails.Po' tmpdepfile='$(DEPDIR)/shipcontrails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shipcontrails.o `test -f 'ship/shipcontrails.cpp' || echo '$(srcdir)/'`ship/shipcontrails.cpp

shipcontrails.obj: ship/shipcontrails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shipcontrails.obj -MD -MP -MF "$(DEPDIR)/shipcontrails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shipcontrails.obj `if test -f 'ship/shipcontrails.cpp'; then $(CYGPATH_W) 'ship/shipcontrails.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipcontrails.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shipcontrails.Tpo" "$(DEPDIR)/shipcontrails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shipcontrails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipcontrails.cpp' object='shipcontrails.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shipcontrails.Po' tmpdepfile='$(DEPDIR)/shipcontrails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shipcontrails.obj `if test -f 'ship/shipcontrails.cpp'; then $(CYGPATH_W) 'ship/shipcontrails.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipcontrails.cpp'; fi`

shipfx.o: ship/shipfx.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shipfx.o -MD -MP -MF "$(DEPDIR)/shipfx.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shipfx.o `test -f 'ship/shipfx.cpp' || echo '$(srcdir)/'`ship/shipfx.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shipfx.Tpo" "$(DEPDIR)/shipfx.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shipfx.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipfx.cpp' object='shipfx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shipfx.Po' tmpdepfile='$(DEPDIR)/shipfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shipfx.o `test -f 'ship/shipfx.cpp' || echo '$(srcdir)/'`ship/shipfx.cpp

shipfx.obj: ship/shipfx.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shipfx.obj -MD -MP -MF "$(DEPDIR)/shipfx.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shipfx.obj `if test -f 'ship/shipfx.cpp'; then $(CYGPATH_W) 'ship/shipfx.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipfx.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shipfx.Tpo" "$(DEPDIR)/shipfx.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shipfx.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shipfx.cpp' object='shipfx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shipfx.Po' tmpdepfile='$(DEPDIR)/shipfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shipfx.obj `if test -f 'ship/shipfx.cpp'; then $(CYGPATH_W) 'ship/shipfx.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shipfx.cpp'; fi`

shiphit.o: ship/shiphit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shiphit.o -MD -MP -MF "$(DEPDIR)/shiphit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shiphit.o `test -f 'ship/shiphit.cpp' || echo '$(srcdir)/'`ship/shiphit.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shiphit.Tpo" "$(DEPDIR)/shiphit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shiphit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shiphit.cpp' object='shiphit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shiphit.Po' tmpdepfile='$(DEPDIR)/shiphit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shiphit.o `test -f 'ship/shiphit.cpp' || echo '$(srcdir)/'`ship/shiphit.cpp

shiphit.obj: ship/shiphit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shiphit.obj -MD -MP -MF "$(DEPDIR)/shiphit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shiphit.obj `if test -f 'ship/shiphit.cpp'; then $(CYGPATH_W) 'ship/shiphit.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shiphit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shiphit.Tpo" "$(DEPDIR)/shiphit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shiphit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ship/shiphit.cpp' object='shiphit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shiphit.Po' tmpdepfile='$(DEPDIR)/shiphit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shiphit.obj `if test -f 'ship/shiphit.cpp'; then $(CYGPATH_W) 'ship/shiphit.cpp'; else $(CYGPATH_W) '$(srcdir)/ship/shiphit.cpp'; fi`

nebula.o: starfield/nebula.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nebula.o -MD -MP -MF "$(DEPDIR)/nebula.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o nebula.o `test -f 'starfield/nebula.cpp' || echo '$(srcdir)/'`starfield/nebula.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/nebula.Tpo" "$(DEPDIR)/nebula.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/nebula.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/nebula.cpp' object='nebula.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/nebula.Po' tmpdepfile='$(DEPDIR)/nebula.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nebula.o `test -f 'starfield/nebula.cpp' || echo '$(srcdir)/'`starfield/nebula.cpp

nebula.obj: starfield/nebula.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nebula.obj -MD -MP -MF "$(DEPDIR)/nebula.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o nebula.obj `if test -f 'starfield/nebula.cpp'; then $(CYGPATH_W) 'starfield/nebula.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/nebula.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/nebula.Tpo" "$(DEPDIR)/nebula.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/nebula.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/nebula.cpp' object='nebula.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/nebula.Po' tmpdepfile='$(DEPDIR)/nebula.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nebula.obj `if test -f 'starfield/nebula.cpp'; then $(CYGPATH_W) 'starfield/nebula.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/nebula.cpp'; fi`

starfield.o: starfield/starfield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starfield.o -MD -MP -MF "$(DEPDIR)/starfield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o starfield.o `test -f 'starfield/starfield.cpp' || echo '$(srcdir)/'`starfield/starfield.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/starfield.Tpo" "$(DEPDIR)/starfield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/starfield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/starfield.cpp' object='starfield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/starfield.Po' tmpdepfile='$(DEPDIR)/starfield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starfield.o `test -f 'starfield/starfield.cpp' || echo '$(srcdir)/'`starfield/starfield.cpp

starfield.obj: starfield/starfield.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starfield.obj -MD -MP -MF "$(DEPDIR)/starfield.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o starfield.obj `if test -f 'starfield/starfield.cpp'; then $(CYGPATH_W) 'starfield/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/starfield.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/starfield.Tpo" "$(DEPDIR)/starfield.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/starfield.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/starfield.cpp' object='starfield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/starfield.Po' tmpdepfile='$(DEPDIR)/starfield.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starfield.obj `if test -f 'starfield/starfield.cpp'; then $(CYGPATH_W) 'starfield/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/starfield.cpp'; fi`

supernova.o: starfield/supernova.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supernova.o -MD -MP -MF "$(DEPDIR)/supernova.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o supernova.o `test -f 'starfield/supernova.cpp' || echo '$(srcdir)/'`starfield/supernova.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/supernova.Tpo" "$(DEPDIR)/supernova.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/supernova.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/supernova.cpp' object='supernova.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/supernova.Po' tmpdepfile='$(DEPDIR)/supernova.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supernova.o `test -f 'starfield/supernova.cpp' || echo '$(srcdir)/'`starfield/supernova.cpp

supernova.obj: starfield/supernova.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supernova.obj -MD -MP -MF "$(DEPDIR)/supernova.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o supernova.obj `if test -f 'starfield/supernova.cpp'; then $(CYGPATH_W) 'starfield/supernova.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/supernova.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/supernova.Tpo" "$(DEPDIR)/supernova.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/supernova.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='starfield/supernova.cpp' object='supernova.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/supernova.Po' tmpdepfile='$(DEPDIR)/supernova.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supernova.obj `if test -f 'starfield/supernova.cpp'; then $(CYGPATH_W) 'starfield/supernova.cpp'; else $(CYGPATH_W) '$(srcdir)/starfield/supernova.cpp'; fi`

medals.o: stats/medals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT medals.o -MD -MP -MF "$(DEPDIR)/medals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o medals.o `test -f 'stats/medals.cpp' || echo '$(srcdir)/'`stats/medals.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/medals.Tpo" "$(DEPDIR)/medals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/medals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/medals.cpp' object='medals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/medals.Po' tmpdepfile='$(DEPDIR)/medals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o medals.o `test -f 'stats/medals.cpp' || echo '$(srcdir)/'`stats/medals.cpp

medals.obj: stats/medals.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT medals.obj -MD -MP -MF "$(DEPDIR)/medals.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o medals.obj `if test -f 'stats/medals.cpp'; then $(CYGPATH_W) 'stats/medals.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/medals.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/medals.Tpo" "$(DEPDIR)/medals.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/medals.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/medals.cpp' object='medals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/medals.Po' tmpdepfile='$(DEPDIR)/medals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o medals.obj `if test -f 'stats/medals.cpp'; then $(CYGPATH_W) 'stats/medals.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/medals.cpp'; fi`

scoring.o: stats/scoring.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scoring.o -MD -MP -MF "$(DEPDIR)/scoring.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scoring.o `test -f 'stats/scoring.cpp' || echo '$(srcdir)/'`stats/scoring.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scoring.Tpo" "$(DEPDIR)/scoring.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scoring.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/scoring.cpp' object='scoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scoring.Po' tmpdepfile='$(DEPDIR)/scoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scoring.o `test -f 'stats/scoring.cpp' || echo '$(srcdir)/'`stats/scoring.cpp

scoring.obj: stats/scoring.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scoring.obj -MD -MP -MF "$(DEPDIR)/scoring.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scoring.obj `if test -f 'stats/scoring.cpp'; then $(CYGPATH_W) 'stats/scoring.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/scoring.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scoring.Tpo" "$(DEPDIR)/scoring.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scoring.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/scoring.cpp' object='scoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scoring.Po' tmpdepfile='$(DEPDIR)/scoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scoring.obj `if test -f 'stats/scoring.cpp'; then $(CYGPATH_W) 'stats/scoring.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/scoring.cpp'; fi`

stats.o: stats/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats.o -MD -MP -MF "$(DEPDIR)/stats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o stats.o `test -f 'stats/stats.cpp' || echo '$(srcdir)/'`stats/stats.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/stats.Tpo" "$(DEPDIR)/stats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/stats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/stats.cpp' object='stats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/stats.Po' tmpdepfile='$(DEPDIR)/stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats.o `test -f 'stats/stats.cpp' || echo '$(srcdir)/'`stats/stats.cpp

stats.obj: stats/stats.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stats.obj -MD -MP -MF "$(DEPDIR)/stats.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o stats.obj `if test -f 'stats/stats.cpp'; then $(CYGPATH_W) 'stats/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/stats.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/stats.Tpo" "$(DEPDIR)/stats.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/stats.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='stats/stats.cpp' object='stats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/stats.Po' tmpdepfile='$(DEPDIR)/stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stats.obj `if test -f 'stats/stats.cpp'; then $(CYGPATH_W) 'stats/stats.cpp'; else $(CYGPATH_W) '$(srcdir)/stats/stats.cpp'; fi`

tgautils.o: tgautils/tgautils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tgautils.o -MD -MP -MF "$(DEPDIR)/tgautils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tgautils.o `test -f 'tgautils/tgautils.cpp' || echo '$(srcdir)/'`tgautils/tgautils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/tgautils.Tpo" "$(DEPDIR)/tgautils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tgautils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tgautils/tgautils.cpp' object='tgautils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tgautils.Po' tmpdepfile='$(DEPDIR)/tgautils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tgautils.o `test -f 'tgautils/tgautils.cpp' || echo '$(srcdir)/'`tgautils/tgautils.cpp

tgautils.obj: tgautils/tgautils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tgautils.obj -MD -MP -MF "$(DEPDIR)/tgautils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tgautils.obj `if test -f 'tgautils/tgautils.cpp'; then $(CYGPATH_W) 'tgautils/tgautils.cpp'; else $(CYGPATH_W) '$(srcdir)/tgautils/tgautils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/tgautils.Tpo" "$(DEPDIR)/tgautils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tgautils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tgautils/tgautils.cpp' object='tgautils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tgautils.Po' tmpdepfile='$(DEPDIR)/tgautils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tgautils.obj `if test -f 'tgautils/tgautils.cpp'; then $(CYGPATH_W) 'tgautils/tgautils.cpp'; else $(CYGPATH_W) '$(srcdir)/tgautils/tgautils.cpp'; fi`

button.o: ui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button.o -MD -MP -MF "$(DEPDIR)/button.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o button.o `test -f 'ui/button.cpp' || echo '$(srcdir)/'`ui/button.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/button.Tpo" "$(DEPDIR)/button.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/button.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/button.cpp' object='button.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/button.Po' tmpdepfile='$(DEPDIR)/button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button.o `test -f 'ui/button.cpp' || echo '$(srcdir)/'`ui/button.cpp

button.obj: ui/button.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT button.obj -MD -MP -MF "$(DEPDIR)/button.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o button.obj `if test -f 'ui/button.cpp'; then $(CYGPATH_W) 'ui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/button.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/button.Tpo" "$(DEPDIR)/button.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/button.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/button.cpp' object='button.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/button.Po' tmpdepfile='$(DEPDIR)/button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o button.obj `if test -f 'ui/button.cpp'; then $(CYGPATH_W) 'ui/button.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/button.cpp'; fi`

checkbox.o: ui/checkbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT checkbox.o -MD -MP -MF "$(DEPDIR)/checkbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o checkbox.o `test -f 'ui/checkbox.cpp' || echo '$(srcdir)/'`ui/checkbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/checkbox.Tpo" "$(DEPDIR)/checkbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/checkbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/checkbox.cpp' object='checkbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/checkbox.Po' tmpdepfile='$(DEPDIR)/checkbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o checkbox.o `test -f 'ui/checkbox.cpp' || echo '$(srcdir)/'`ui/checkbox.cpp

checkbox.obj: ui/checkbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT checkbox.obj -MD -MP -MF "$(DEPDIR)/checkbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o checkbox.obj `if test -f 'ui/checkbox.cpp'; then $(CYGPATH_W) 'ui/checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/checkbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/checkbox.Tpo" "$(DEPDIR)/checkbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/checkbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/checkbox.cpp' object='checkbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/checkbox.Po' tmpdepfile='$(DEPDIR)/checkbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o checkbox.obj `if test -f 'ui/checkbox.cpp'; then $(CYGPATH_W) 'ui/checkbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/checkbox.cpp'; fi`

gadget.o: ui/gadget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gadget.o -MD -MP -MF "$(DEPDIR)/gadget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gadget.o `test -f 'ui/gadget.cpp' || echo '$(srcdir)/'`ui/gadget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gadget.Tpo" "$(DEPDIR)/gadget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gadget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/gadget.cpp' object='gadget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gadget.Po' tmpdepfile='$(DEPDIR)/gadget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gadget.o `test -f 'ui/gadget.cpp' || echo '$(srcdir)/'`ui/gadget.cpp

gadget.obj: ui/gadget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gadget.obj -MD -MP -MF "$(DEPDIR)/gadget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gadget.obj `if test -f 'ui/gadget.cpp'; then $(CYGPATH_W) 'ui/gadget.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gadget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gadget.Tpo" "$(DEPDIR)/gadget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gadget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/gadget.cpp' object='gadget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gadget.Po' tmpdepfile='$(DEPDIR)/gadget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gadget.obj `if test -f 'ui/gadget.cpp'; then $(CYGPATH_W) 'ui/gadget.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gadget.cpp'; fi`

icon.o: ui/icon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT icon.o -MD -MP -MF "$(DEPDIR)/icon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o icon.o `test -f 'ui/icon.cpp' || echo '$(srcdir)/'`ui/icon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/icon.Tpo" "$(DEPDIR)/icon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/icon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/icon.cpp' object='icon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/icon.Po' tmpdepfile='$(DEPDIR)/icon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o icon.o `test -f 'ui/icon.cpp' || echo '$(srcdir)/'`ui/icon.cpp

icon.obj: ui/icon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT icon.obj -MD -MP -MF "$(DEPDIR)/icon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o icon.obj `if test -f 'ui/icon.cpp'; then $(CYGPATH_W) 'ui/icon.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/icon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/icon.Tpo" "$(DEPDIR)/icon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/icon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/icon.cpp' object='icon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/icon.Po' tmpdepfile='$(DEPDIR)/icon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o icon.obj `if test -f 'ui/icon.cpp'; then $(CYGPATH_W) 'ui/icon.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/icon.cpp'; fi`

inputbox.o: ui/inputbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT inputbox.o -MD -MP -MF "$(DEPDIR)/inputbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o inputbox.o `test -f 'ui/inputbox.cpp' || echo '$(srcdir)/'`ui/inputbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/inputbox.Tpo" "$(DEPDIR)/inputbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/inputbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/inputbox.cpp' object='inputbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/inputbox.Po' tmpdepfile='$(DEPDIR)/inputbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o inputbox.o `test -f 'ui/inputbox.cpp' || echo '$(srcdir)/'`ui/inputbox.cpp

inputbox.obj: ui/inputbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT inputbox.obj -MD -MP -MF "$(DEPDIR)/inputbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o inputbox.obj `if test -f 'ui/inputbox.cpp'; then $(CYGPATH_W) 'ui/inputbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/inputbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/inputbox.Tpo" "$(DEPDIR)/inputbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/inputbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/inputbox.cpp' object='inputbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/inputbox.Po' tmpdepfile='$(DEPDIR)/inputbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o inputbox.obj `if test -f 'ui/inputbox.cpp'; then $(CYGPATH_W) 'ui/inputbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/inputbox.cpp'; fi`

keytrap.o: ui/keytrap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keytrap.o -MD -MP -MF "$(DEPDIR)/keytrap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o keytrap.o `test -f 'ui/keytrap.cpp' || echo '$(srcdir)/'`ui/keytrap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/keytrap.Tpo" "$(DEPDIR)/keytrap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/keytrap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/keytrap.cpp' object='keytrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/keytrap.Po' tmpdepfile='$(DEPDIR)/keytrap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keytrap.o `test -f 'ui/keytrap.cpp' || echo '$(srcdir)/'`ui/keytrap.cpp

keytrap.obj: ui/keytrap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keytrap.obj -MD -MP -MF "$(DEPDIR)/keytrap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o keytrap.obj `if test -f 'ui/keytrap.cpp'; then $(CYGPATH_W) 'ui/keytrap.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/keytrap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/keytrap.Tpo" "$(DEPDIR)/keytrap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/keytrap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/keytrap.cpp' object='keytrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/keytrap.Po' tmpdepfile='$(DEPDIR)/keytrap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keytrap.obj `if test -f 'ui/keytrap.cpp'; then $(CYGPATH_W) 'ui/keytrap.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/keytrap.cpp'; fi`

listbox.o: ui/listbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT listbox.o -MD -MP -MF "$(DEPDIR)/listbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o listbox.o `test -f 'ui/listbox.cpp' || echo '$(srcdir)/'`ui/listbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/listbox.Tpo" "$(DEPDIR)/listbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/listbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/listbox.cpp' object='listbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/listbox.Po' tmpdepfile='$(DEPDIR)/listbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o listbox.o `test -f 'ui/listbox.cpp' || echo '$(srcdir)/'`ui/listbox.cpp

listbox.obj: ui/listbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT listbox.obj -MD -MP -MF "$(DEPDIR)/listbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o listbox.obj `if test -f 'ui/listbox.cpp'; then $(CYGPATH_W) 'ui/listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/listbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/listbox.Tpo" "$(DEPDIR)/listbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/listbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/listbox.cpp' object='listbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/listbox.Po' tmpdepfile='$(DEPDIR)/listbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o listbox.obj `if test -f 'ui/listbox.cpp'; then $(CYGPATH_W) 'ui/listbox.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/listbox.cpp'; fi`

radio.o: ui/radio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radio.o -MD -MP -MF "$(DEPDIR)/radio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o radio.o `test -f 'ui/radio.cpp' || echo '$(srcdir)/'`ui/radio.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/radio.Tpo" "$(DEPDIR)/radio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/radio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/radio.cpp' object='radio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/radio.Po' tmpdepfile='$(DEPDIR)/radio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radio.o `test -f 'ui/radio.cpp' || echo '$(srcdir)/'`ui/radio.cpp

radio.obj: ui/radio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radio.obj -MD -MP -MF "$(DEPDIR)/radio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o radio.obj `if test -f 'ui/radio.cpp'; then $(CYGPATH_W) 'ui/radio.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/radio.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/radio.Tpo" "$(DEPDIR)/radio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/radio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/radio.cpp' object='radio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/radio.Po' tmpdepfile='$(DEPDIR)/radio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radio.obj `if test -f 'ui/radio.cpp'; then $(CYGPATH_W) 'ui/radio.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/radio.cpp'; fi`

scroll.o: ui/scroll.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scroll.o -MD -MP -MF "$(DEPDIR)/scroll.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scroll.o `test -f 'ui/scroll.cpp' || echo '$(srcdir)/'`ui/scroll.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scroll.Tpo" "$(DEPDIR)/scroll.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scroll.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/scroll.cpp' object='scroll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scroll.Po' tmpdepfile='$(DEPDIR)/scroll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scroll.o `test -f 'ui/scroll.cpp' || echo '$(srcdir)/'`ui/scroll.cpp

scroll.obj: ui/scroll.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scroll.obj -MD -MP -MF "$(DEPDIR)/scroll.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o scroll.obj `if test -f 'ui/scroll.cpp'; then $(CYGPATH_W) 'ui/scroll.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/scroll.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/scroll.Tpo" "$(DEPDIR)/scroll.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/scroll.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/scroll.cpp' object='scroll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/scroll.Po' tmpdepfile='$(DEPDIR)/scroll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scroll.obj `if test -f 'ui/scroll.cpp'; then $(CYGPATH_W) 'ui/scroll.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/scroll.cpp'; fi`

slider.o: ui/slider.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slider.o -MD -MP -MF "$(DEPDIR)/slider.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o slider.o `test -f 'ui/slider.cpp' || echo '$(srcdir)/'`ui/slider.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/slider.Tpo" "$(DEPDIR)/slider.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/slider.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider.cpp' object='slider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/slider.Po' tmpdepfile='$(DEPDIR)/slider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slider.o `test -f 'ui/slider.cpp' || echo '$(srcdir)/'`ui/slider.cpp

slider.obj: ui/slider.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slider.obj -MD -MP -MF "$(DEPDIR)/slider.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o slider.obj `if test -f 'ui/slider.cpp'; then $(CYGPATH_W) 'ui/slider.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/slider.Tpo" "$(DEPDIR)/slider.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/slider.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider.cpp' object='slider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/slider.Po' tmpdepfile='$(DEPDIR)/slider.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slider.obj `if test -f 'ui/slider.cpp'; then $(CYGPATH_W) 'ui/slider.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider.cpp'; fi`

slider2.o: ui/slider2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slider2.o -MD -MP -MF "$(DEPDIR)/slider2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o slider2.o `test -f 'ui/slider2.cpp' || echo '$(srcdir)/'`ui/slider2.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/slider2.Tpo" "$(DEPDIR)/slider2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/slider2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider2.cpp' object='slider2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/slider2.Po' tmpdepfile='$(DEPDIR)/slider2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slider2.o `test -f 'ui/slider2.cpp' || echo '$(srcdir)/'`ui/slider2.cpp

slider2.obj: ui/slider2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slider2.obj -MD -MP -MF "$(DEPDIR)/slider2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o slider2.obj `if test -f 'ui/slider2.cpp'; then $(CYGPATH_W) 'ui/slider2.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/slider2.Tpo" "$(DEPDIR)/slider2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/slider2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/slider2.cpp' object='slider2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/slider2.Po' tmpdepfile='$(DEPDIR)/slider2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slider2.obj `if test -f 'ui/slider2.cpp'; then $(CYGPATH_W) 'ui/slider2.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/slider2.cpp'; fi`

uidraw.o: ui/uidraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uidraw.o -MD -MP -MF "$(DEPDIR)/uidraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o uidraw.o `test -f 'ui/uidraw.cpp' || echo '$(srcdir)/'`ui/uidraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/uidraw.Tpo" "$(DEPDIR)/uidraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/uidraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uidraw.cpp' object='uidraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/uidraw.Po' tmpdepfile='$(DEPDIR)/uidraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uidraw.o `test -f 'ui/uidraw.cpp' || echo '$(srcdir)/'`ui/uidraw.cpp

uidraw.obj: ui/uidraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uidraw.obj -MD -MP -MF "$(DEPDIR)/uidraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o uidraw.obj `if test -f 'ui/uidraw.cpp'; then $(CYGPATH_W) 'ui/uidraw.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uidraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/uidraw.Tpo" "$(DEPDIR)/uidraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/uidraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uidraw.cpp' object='uidraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/uidraw.Po' tmpdepfile='$(DEPDIR)/uidraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uidraw.obj `if test -f 'ui/uidraw.cpp'; then $(CYGPATH_W) 'ui/uidraw.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uidraw.cpp'; fi`

uimouse.o: ui/uimouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uimouse.o -MD -MP -MF "$(DEPDIR)/uimouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o uimouse.o `test -f 'ui/uimouse.cpp' || echo '$(srcdir)/'`ui/uimouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/uimouse.Tpo" "$(DEPDIR)/uimouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/uimouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uimouse.cpp' object='uimouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/uimouse.Po' tmpdepfile='$(DEPDIR)/uimouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uimouse.o `test -f 'ui/uimouse.cpp' || echo '$(srcdir)/'`ui/uimouse.cpp

uimouse.obj: ui/uimouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uimouse.obj -MD -MP -MF "$(DEPDIR)/uimouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o uimouse.obj `if test -f 'ui/uimouse.cpp'; then $(CYGPATH_W) 'ui/uimouse.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uimouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/uimouse.Tpo" "$(DEPDIR)/uimouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/uimouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/uimouse.cpp' object='uimouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/uimouse.Po' tmpdepfile='$(DEPDIR)/uimouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uimouse.obj `if test -f 'ui/uimouse.cpp'; then $(CYGPATH_W) 'ui/uimouse.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/uimouse.cpp'; fi`

window.o: ui/window.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT window.o -MD -MP -MF "$(DEPDIR)/window.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o window.o `test -f 'ui/window.cpp' || echo '$(srcdir)/'`ui/window.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/window.Tpo" "$(DEPDIR)/window.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/window.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/window.cpp' object='window.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/window.Po' tmpdepfile='$(DEPDIR)/window.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o window.o `test -f 'ui/window.cpp' || echo '$(srcdir)/'`ui/window.cpp

window.obj: ui/window.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT window.obj -MD -MP -MF "$(DEPDIR)/window.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o window.obj `if test -f 'ui/window.cpp'; then $(CYGPATH_W) 'ui/window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/window.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/window.Tpo" "$(DEPDIR)/window.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/window.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ui/window.cpp' object='window.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/window.Po' tmpdepfile='$(DEPDIR)/window.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o window.obj `if test -f 'ui/window.cpp'; then $(CYGPATH_W) 'ui/window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/window.cpp'; fi`

beam.o: weapon/beam.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT beam.o -MD -MP -MF "$(DEPDIR)/beam.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o beam.o `test -f 'weapon/beam.cpp' || echo '$(srcdir)/'`weapon/beam.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/beam.Tpo" "$(DEPDIR)/beam.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/beam.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/beam.cpp' object='beam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/beam.Po' tmpdepfile='$(DEPDIR)/beam.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o beam.o `test -f 'weapon/beam.cpp' || echo '$(srcdir)/'`weapon/beam.cpp

beam.obj: weapon/beam.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT beam.obj -MD -MP -MF "$(DEPDIR)/beam.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o beam.obj `if test -f 'weapon/beam.cpp'; then $(CYGPATH_W) 'weapon/beam.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/beam.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/beam.Tpo" "$(DEPDIR)/beam.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/beam.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/beam.cpp' object='beam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/beam.Po' tmpdepfile='$(DEPDIR)/beam.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o beam.obj `if test -f 'weapon/beam.cpp'; then $(CYGPATH_W) 'weapon/beam.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/beam.cpp'; fi`

corkscrew.o: weapon/corkscrew.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT corkscrew.o -MD -MP -MF "$(DEPDIR)/corkscrew.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o corkscrew.o `test -f 'weapon/corkscrew.cpp' || echo '$(srcdir)/'`weapon/corkscrew.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/corkscrew.Tpo" "$(DEPDIR)/corkscrew.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/corkscrew.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/corkscrew.cpp' object='corkscrew.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/corkscrew.Po' tmpdepfile='$(DEPDIR)/corkscrew.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o corkscrew.o `test -f 'weapon/corkscrew.cpp' || echo '$(srcdir)/'`weapon/corkscrew.cpp

corkscrew.obj: weapon/corkscrew.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT corkscrew.obj -MD -MP -MF "$(DEPDIR)/corkscrew.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o corkscrew.obj `if test -f 'weapon/corkscrew.cpp'; then $(CYGPATH_W) 'weapon/corkscrew.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/corkscrew.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/corkscrew.Tpo" "$(DEPDIR)/corkscrew.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/corkscrew.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/corkscrew.cpp' object='corkscrew.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/corkscrew.Po' tmpdepfile='$(DEPDIR)/corkscrew.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o corkscrew.obj `if test -f 'weapon/corkscrew.cpp'; then $(CYGPATH_W) 'weapon/corkscrew.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/corkscrew.cpp'; fi`

emp.o: weapon/emp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT emp.o -MD -MP -MF "$(DEPDIR)/emp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o emp.o `test -f 'weapon/emp.cpp' || echo '$(srcdir)/'`weapon/emp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/emp.Tpo" "$(DEPDIR)/emp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/emp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/emp.cpp' object='emp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/emp.Po' tmpdepfile='$(DEPDIR)/emp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o emp.o `test -f 'weapon/emp.cpp' || echo '$(srcdir)/'`weapon/emp.cpp

emp.obj: weapon/emp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT emp.obj -MD -MP -MF "$(DEPDIR)/emp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o emp.obj `if test -f 'weapon/emp.cpp'; then $(CYGPATH_W) 'weapon/emp.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/emp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/emp.Tpo" "$(DEPDIR)/emp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/emp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/emp.cpp' object='emp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/emp.Po' tmpdepfile='$(DEPDIR)/emp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o emp.obj `if test -f 'weapon/emp.cpp'; then $(CYGPATH_W) 'weapon/emp.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/emp.cpp'; fi`

flak.o: weapon/flak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flak.o -MD -MP -MF "$(DEPDIR)/flak.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o flak.o `test -f 'weapon/flak.cpp' || echo '$(srcdir)/'`weapon/flak.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/flak.Tpo" "$(DEPDIR)/flak.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/flak.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/flak.cpp' object='flak.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/flak.Po' tmpdepfile='$(DEPDIR)/flak.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flak.o `test -f 'weapon/flak.cpp' || echo '$(srcdir)/'`weapon/flak.cpp

flak.obj: weapon/flak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flak.obj -MD -MP -MF "$(DEPDIR)/flak.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o flak.obj `if test -f 'weapon/flak.cpp'; then $(CYGPATH_W) 'weapon/flak.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/flak.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/flak.Tpo" "$(DEPDIR)/flak.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/flak.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/flak.cpp' object='flak.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/flak.Po' tmpdepfile='$(DEPDIR)/flak.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flak.obj `if test -f 'weapon/flak.cpp'; then $(CYGPATH_W) 'weapon/flak.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/flak.cpp'; fi`

muzzleflash.o: weapon/muzzleflash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT muzzleflash.o -MD -MP -MF "$(DEPDIR)/muzzleflash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o muzzleflash.o `test -f 'weapon/muzzleflash.cpp' || echo '$(srcdir)/'`weapon/muzzleflash.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/muzzleflash.Tpo" "$(DEPDIR)/muzzleflash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/muzzleflash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/muzzleflash.cpp' object='muzzleflash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/muzzleflash.Po' tmpdepfile='$(DEPDIR)/muzzleflash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o muzzleflash.o `test -f 'weapon/muzzleflash.cpp' || echo '$(srcdir)/'`weapon/muzzleflash.cpp

muzzleflash.obj: weapon/muzzleflash.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT muzzleflash.obj -MD -MP -MF "$(DEPDIR)/muzzleflash.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o muzzleflash.obj `if test -f 'weapon/muzzleflash.cpp'; then $(CYGPATH_W) 'weapon/muzzleflash.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/muzzleflash.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/muzzleflash.Tpo" "$(DEPDIR)/muzzleflash.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/muzzleflash.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/muzzleflash.cpp' object='muzzleflash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/muzzleflash.Po' tmpdepfile='$(DEPDIR)/muzzleflash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o muzzleflash.obj `if test -f 'weapon/muzzleflash.cpp'; then $(CYGPATH_W) 'weapon/muzzleflash.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/muzzleflash.cpp'; fi`

shockwave.o: weapon/shockwave.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shockwave.o -MD -MP -MF "$(DEPDIR)/shockwave.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shockwave.o `test -f 'weapon/shockwave.cpp' || echo '$(srcdir)/'`weapon/shockwave.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shockwave.Tpo" "$(DEPDIR)/shockwave.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shockwave.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/shockwave.cpp' object='shockwave.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shockwave.Po' tmpdepfile='$(DEPDIR)/shockwave.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shockwave.o `test -f 'weapon/shockwave.cpp' || echo '$(srcdir)/'`weapon/shockwave.cpp

shockwave.obj: weapon/shockwave.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shockwave.obj -MD -MP -MF "$(DEPDIR)/shockwave.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o shockwave.obj `if test -f 'weapon/shockwave.cpp'; then $(CYGPATH_W) 'weapon/shockwave.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/shockwave.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/shockwave.Tpo" "$(DEPDIR)/shockwave.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/shockwave.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/shockwave.cpp' object='shockwave.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/shockwave.Po' tmpdepfile='$(DEPDIR)/shockwave.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shockwave.obj `if test -f 'weapon/shockwave.cpp'; then $(CYGPATH_W) 'weapon/shockwave.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/shockwave.cpp'; fi`

swarm.o: weapon/swarm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT swarm.o -MD -MP -MF "$(DEPDIR)/swarm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o swarm.o `test -f 'weapon/swarm.cpp' || echo '$(srcdir)/'`weapon/swarm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/swarm.Tpo" "$(DEPDIR)/swarm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/swarm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/swarm.cpp' object='swarm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/swarm.Po' tmpdepfile='$(DEPDIR)/swarm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o swarm.o `test -f 'weapon/swarm.cpp' || echo '$(srcdir)/'`weapon/swarm.cpp

swarm.obj: weapon/swarm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT swarm.obj -MD -MP -MF "$(DEPDIR)/swarm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o swarm.obj `if test -f 'weapon/swarm.cpp'; then $(CYGPATH_W) 'weapon/swarm.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/swarm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/swarm.Tpo" "$(DEPDIR)/swarm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/swarm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/swarm.cpp' object='swarm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/swarm.Po' tmpdepfile='$(DEPDIR)/swarm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o swarm.obj `if test -f 'weapon/swarm.cpp'; then $(CYGPATH_W) 'weapon/swarm.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/swarm.cpp'; fi`

trails.o: weapon/trails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trails.o -MD -MP -MF "$(DEPDIR)/trails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o trails.o `test -f 'weapon/trails.cpp' || echo '$(srcdir)/'`weapon/trails.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/trails.Tpo" "$(DEPDIR)/trails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/trails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/trails.cpp' object='trails.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/trails.Po' tmpdepfile='$(DEPDIR)/trails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trails.o `test -f 'weapon/trails.cpp' || echo '$(srcdir)/'`weapon/trails.cpp

trails.obj: weapon/trails.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trails.obj -MD -MP -MF "$(DEPDIR)/trails.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o trails.obj `if test -f 'weapon/trails.cpp'; then $(CYGPATH_W) 'weapon/trails.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/trails.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/trails.Tpo" "$(DEPDIR)/trails.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/trails.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/trails.cpp' object='trails.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/trails.Po' tmpdepfile='$(DEPDIR)/trails.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trails.obj `if test -f 'weapon/trails.cpp'; then $(CYGPATH_W) 'weapon/trails.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/trails.cpp'; fi`

weapons.o: weapon/weapons.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapons.o -MD -MP -MF "$(DEPDIR)/weapons.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o weapons.o `test -f 'weapon/weapons.cpp' || echo '$(srcdir)/'`weapon/weapons.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/weapons.Tpo" "$(DEPDIR)/weapons.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/weapons.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons.cpp' object='weapons.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/weapons.Po' tmpdepfile='$(DEPDIR)/weapons.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapons.o `test -f 'weapon/weapons.cpp' || echo '$(srcdir)/'`weapon/weapons.cpp

weapons.obj: weapon/weapons.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weapons.obj -MD -MP -MF "$(DEPDIR)/weapons.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o weapons.obj `if test -f 'weapon/weapons.cpp'; then $(CYGPATH_W) 'weapon/weapons.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/weapons.Tpo" "$(DEPDIR)/weapons.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/weapons.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='weapon/weapons.cpp' object='weapons.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/weapons.Po' tmpdepfile='$(DEPDIR)/weapons.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weapons.obj `if test -f 'weapon/weapons.cpp'; then $(CYGPATH_W) 'weapon/weapons.cpp'; else $(CYGPATH_W) '$(srcdir)/weapon/weapons.cpp'; fi`

joy.o: io/joy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT joy.o -MD -MP -MF "$(DEPDIR)/joy.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o joy.o `test -f 'io/joy.cpp' || echo '$(srcdir)/'`io/joy.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/joy.Tpo" "$(DEPDIR)/joy.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/joy.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy.cpp' object='joy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/joy.Po' tmpdepfile='$(DEPDIR)/joy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o joy.o `test -f 'io/joy.cpp' || echo '$(srcdir)/'`io/joy.cpp

joy.obj: io/joy.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT joy.obj -MD -MP -MF "$(DEPDIR)/joy.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o joy.obj `if test -f 'io/joy.cpp'; then $(CYGPATH_W) 'io/joy.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/joy.Tpo" "$(DEPDIR)/joy.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/joy.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy.cpp' object='joy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/joy.Po' tmpdepfile='$(DEPDIR)/joy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o joy.obj `if test -f 'io/joy.cpp'; then $(CYGPATH_W) 'io/joy.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy.cpp'; fi`

joy_ff.o: io/joy_ff.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT joy_ff.o -MD -MP -MF "$(DEPDIR)/joy_ff.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o joy_ff.o `test -f 'io/joy_ff.cpp' || echo '$(srcdir)/'`io/joy_ff.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/joy_ff.Tpo" "$(DEPDIR)/joy_ff.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/joy_ff.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy_ff.cpp' object='joy_ff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/joy_ff.Po' tmpdepfile='$(DEPDIR)/joy_ff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o joy_ff.o `test -f 'io/joy_ff.cpp' || echo '$(srcdir)/'`io/joy_ff.cpp

joy_ff.obj: io/joy_ff.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT joy_ff.obj -MD -MP -MF "$(DEPDIR)/joy_ff.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o joy_ff.obj `if test -f 'io/joy_ff.cpp'; then $(CYGPATH_W) 'io/joy_ff.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy_ff.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/joy_ff.Tpo" "$(DEPDIR)/joy_ff.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/joy_ff.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/joy_ff.cpp' object='joy_ff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/joy_ff.Po' tmpdepfile='$(DEPDIR)/joy_ff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o joy_ff.obj `if test -f 'io/joy_ff.cpp'; then $(CYGPATH_W) 'io/joy_ff.cpp'; else $(CYGPATH_W) '$(srcdir)/io/joy_ff.cpp'; fi`

swff_lib.o: io/swff_lib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT swff_lib.o -MD -MP -MF "$(DEPDIR)/swff_lib.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o swff_lib.o `test -f 'io/swff_lib.cpp' || echo '$(srcdir)/'`io/swff_lib.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/swff_lib.Tpo" "$(DEPDIR)/swff_lib.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/swff_lib.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/swff_lib.cpp' object='swff_lib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/swff_lib.Po' tmpdepfile='$(DEPDIR)/swff_lib.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o swff_lib.o `test -f 'io/swff_lib.cpp' || echo '$(srcdir)/'`io/swff_lib.cpp

swff_lib.obj: io/swff_lib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT swff_lib.obj -MD -MP -MF "$(DEPDIR)/swff_lib.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o swff_lib.obj `if test -f 'io/swff_lib.cpp'; then $(CYGPATH_W) 'io/swff_lib.cpp'; else $(CYGPATH_W) '$(srcdir)/io/swff_lib.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/swff_lib.Tpo" "$(DEPDIR)/swff_lib.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/swff_lib.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/swff_lib.cpp' object='swff_lib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/swff_lib.Po' tmpdepfile='$(DEPDIR)/swff_lib.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o swff_lib.obj `if test -f 'io/swff_lib.cpp'; then $(CYGPATH_W) 'io/swff_lib.cpp'; else $(CYGPATH_W) '$(srcdir)/io/swff_lib.cpp'; fi`

hudobserver.o: hud/hudobserver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudobserver.o -MD -MP -MF "$(DEPDIR)/hudobserver.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudobserver.o `test -f 'hud/hudobserver.cpp' || echo '$(srcdir)/'`hud/hudobserver.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudobserver.Tpo" "$(DEPDIR)/hudobserver.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudobserver.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudobserver.cpp' object='hudobserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudobserver.Po' tmpdepfile='$(DEPDIR)/hudobserver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudobserver.o `test -f 'hud/hudobserver.cpp' || echo '$(srcdir)/'`hud/hudobserver.cpp

hudobserver.obj: hud/hudobserver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hudobserver.obj -MD -MP -MF "$(DEPDIR)/hudobserver.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o hudobserver.obj `if test -f 'hud/hudobserver.cpp'; then $(CYGPATH_W) 'hud/hudobserver.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudobserver.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/hudobserver.Tpo" "$(DEPDIR)/hudobserver.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/hudobserver.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hud/hudobserver.cpp' object='hudobserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/hudobserver.Po' tmpdepfile='$(DEPDIR)/hudobserver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hudobserver.obj `if test -f 'hud/hudobserver.cpp'; then $(CYGPATH_W) 'hud/hudobserver.cpp'; else $(CYGPATH_W) '$(srcdir)/hud/hudobserver.cpp'; fi`

multi.o: network/multi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi.o -MD -MP -MF "$(DEPDIR)/multi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi.o `test -f 'network/multi.cpp' || echo '$(srcdir)/'`network/multi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi.Tpo" "$(DEPDIR)/multi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi.cpp' object='multi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi.Po' tmpdepfile='$(DEPDIR)/multi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi.o `test -f 'network/multi.cpp' || echo '$(srcdir)/'`network/multi.cpp

multi.obj: network/multi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi.obj -MD -MP -MF "$(DEPDIR)/multi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi.obj `if test -f 'network/multi.cpp'; then $(CYGPATH_W) 'network/multi.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi.Tpo" "$(DEPDIR)/multi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi.cpp' object='multi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi.Po' tmpdepfile='$(DEPDIR)/multi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi.obj `if test -f 'network/multi.cpp'; then $(CYGPATH_W) 'network/multi.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi.cpp'; fi`

multimsgs.o: network/multimsgs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multimsgs.o -MD -MP -MF "$(DEPDIR)/multimsgs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multimsgs.o `test -f 'network/multimsgs.cpp' || echo '$(srcdir)/'`network/multimsgs.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multimsgs.Tpo" "$(DEPDIR)/multimsgs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multimsgs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multimsgs.cpp' object='multimsgs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multimsgs.Po' tmpdepfile='$(DEPDIR)/multimsgs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multimsgs.o `test -f 'network/multimsgs.cpp' || echo '$(srcdir)/'`network/multimsgs.cpp

multimsgs.obj: network/multimsgs.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multimsgs.obj -MD -MP -MF "$(DEPDIR)/multimsgs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multimsgs.obj `if test -f 'network/multimsgs.cpp'; then $(CYGPATH_W) 'network/multimsgs.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multimsgs.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multimsgs.Tpo" "$(DEPDIR)/multimsgs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multimsgs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multimsgs.cpp' object='multimsgs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multimsgs.Po' tmpdepfile='$(DEPDIR)/multimsgs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multimsgs.obj `if test -f 'network/multimsgs.cpp'; then $(CYGPATH_W) 'network/multimsgs.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multimsgs.cpp'; fi`

multiteamselect.o: network/multiteamselect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiteamselect.o -MD -MP -MF "$(DEPDIR)/multiteamselect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiteamselect.o `test -f 'network/multiteamselect.cpp' || echo '$(srcdir)/'`network/multiteamselect.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiteamselect.Tpo" "$(DEPDIR)/multiteamselect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiteamselect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiteamselect.cpp' object='multiteamselect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiteamselect.Po' tmpdepfile='$(DEPDIR)/multiteamselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiteamselect.o `test -f 'network/multiteamselect.cpp' || echo '$(srcdir)/'`network/multiteamselect.cpp

multiteamselect.obj: network/multiteamselect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiteamselect.obj -MD -MP -MF "$(DEPDIR)/multiteamselect.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiteamselect.obj `if test -f 'network/multiteamselect.cpp'; then $(CYGPATH_W) 'network/multiteamselect.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiteamselect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiteamselect.Tpo" "$(DEPDIR)/multiteamselect.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiteamselect.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiteamselect.cpp' object='multiteamselect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiteamselect.Po' tmpdepfile='$(DEPDIR)/multiteamselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiteamselect.obj `if test -f 'network/multiteamselect.cpp'; then $(CYGPATH_W) 'network/multiteamselect.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiteamselect.cpp'; fi`

multiui.o: network/multiui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiui.o -MD -MP -MF "$(DEPDIR)/multiui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiui.o `test -f 'network/multiui.cpp' || echo '$(srcdir)/'`network/multiui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiui.Tpo" "$(DEPDIR)/multiui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiui.cpp' object='multiui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiui.Po' tmpdepfile='$(DEPDIR)/multiui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiui.o `test -f 'network/multiui.cpp' || echo '$(srcdir)/'`network/multiui.cpp

multiui.obj: network/multiui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiui.obj -MD -MP -MF "$(DEPDIR)/multiui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiui.obj `if test -f 'network/multiui.cpp'; then $(CYGPATH_W) 'network/multiui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiui.Tpo" "$(DEPDIR)/multiui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiui.cpp' object='multiui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiui.Po' tmpdepfile='$(DEPDIR)/multiui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiui.obj `if test -f 'network/multiui.cpp'; then $(CYGPATH_W) 'network/multiui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiui.cpp'; fi`

multiutil.o: network/multiutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiutil.o -MD -MP -MF "$(DEPDIR)/multiutil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiutil.o `test -f 'network/multiutil.cpp' || echo '$(srcdir)/'`network/multiutil.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiutil.Tpo" "$(DEPDIR)/multiutil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiutil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiutil.cpp' object='multiutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiutil.Po' tmpdepfile='$(DEPDIR)/multiutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiutil.o `test -f 'network/multiutil.cpp' || echo '$(srcdir)/'`network/multiutil.cpp

multiutil.obj: network/multiutil.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiutil.obj -MD -MP -MF "$(DEPDIR)/multiutil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multiutil.obj `if test -f 'network/multiutil.cpp'; then $(CYGPATH_W) 'network/multiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiutil.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multiutil.Tpo" "$(DEPDIR)/multiutil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multiutil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multiutil.cpp' object='multiutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multiutil.Po' tmpdepfile='$(DEPDIR)/multiutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiutil.obj `if test -f 'network/multiutil.cpp'; then $(CYGPATH_W) 'network/multiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multiutil.cpp'; fi`

multi_campaign.o: network/multi_campaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_campaign.o -MD -MP -MF "$(DEPDIR)/multi_campaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_campaign.o `test -f 'network/multi_campaign.cpp' || echo '$(srcdir)/'`network/multi_campaign.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_campaign.Tpo" "$(DEPDIR)/multi_campaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_campaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_campaign.cpp' object='multi_campaign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_campaign.Po' tmpdepfile='$(DEPDIR)/multi_campaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_campaign.o `test -f 'network/multi_campaign.cpp' || echo '$(srcdir)/'`network/multi_campaign.cpp

multi_campaign.obj: network/multi_campaign.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_campaign.obj -MD -MP -MF "$(DEPDIR)/multi_campaign.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_campaign.obj `if test -f 'network/multi_campaign.cpp'; then $(CYGPATH_W) 'network/multi_campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_campaign.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_campaign.Tpo" "$(DEPDIR)/multi_campaign.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_campaign.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_campaign.cpp' object='multi_campaign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_campaign.Po' tmpdepfile='$(DEPDIR)/multi_campaign.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_campaign.obj `if test -f 'network/multi_campaign.cpp'; then $(CYGPATH_W) 'network/multi_campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_campaign.cpp'; fi`

multi_data.o: network/multi_data.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_data.o -MD -MP -MF "$(DEPDIR)/multi_data.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_data.o `test -f 'network/multi_data.cpp' || echo '$(srcdir)/'`network/multi_data.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_data.Tpo" "$(DEPDIR)/multi_data.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_data.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_data.cpp' object='multi_data.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_data.Po' tmpdepfile='$(DEPDIR)/multi_data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_data.o `test -f 'network/multi_data.cpp' || echo '$(srcdir)/'`network/multi_data.cpp

multi_data.obj: network/multi_data.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_data.obj -MD -MP -MF "$(DEPDIR)/multi_data.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_data.obj `if test -f 'network/multi_data.cpp'; then $(CYGPATH_W) 'network/multi_data.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_data.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_data.Tpo" "$(DEPDIR)/multi_data.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_data.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_data.cpp' object='multi_data.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_data.Po' tmpdepfile='$(DEPDIR)/multi_data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_data.obj `if test -f 'network/multi_data.cpp'; then $(CYGPATH_W) 'network/multi_data.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_data.cpp'; fi`

multi_dogfight.o: network/multi_dogfight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_dogfight.o -MD -MP -MF "$(DEPDIR)/multi_dogfight.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_dogfight.o `test -f 'network/multi_dogfight.cpp' || echo '$(srcdir)/'`network/multi_dogfight.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_dogfight.Tpo" "$(DEPDIR)/multi_dogfight.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_dogfight.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_dogfight.cpp' object='multi_dogfight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_dogfight.Po' tmpdepfile='$(DEPDIR)/multi_dogfight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_dogfight.o `test -f 'network/multi_dogfight.cpp' || echo '$(srcdir)/'`network/multi_dogfight.cpp

multi_dogfight.obj: network/multi_dogfight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_dogfight.obj -MD -MP -MF "$(DEPDIR)/multi_dogfight.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_dogfight.obj `if test -f 'network/multi_dogfight.cpp'; then $(CYGPATH_W) 'network/multi_dogfight.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_dogfight.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_dogfight.Tpo" "$(DEPDIR)/multi_dogfight.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_dogfight.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_dogfight.cpp' object='multi_dogfight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_dogfight.Po' tmpdepfile='$(DEPDIR)/multi_dogfight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_dogfight.obj `if test -f 'network/multi_dogfight.cpp'; then $(CYGPATH_W) 'network/multi_dogfight.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_dogfight.cpp'; fi`

multi_endgame.o: network/multi_endgame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_endgame.o -MD -MP -MF "$(DEPDIR)/multi_endgame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_endgame.o `test -f 'network/multi_endgame.cpp' || echo '$(srcdir)/'`network/multi_endgame.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_endgame.Tpo" "$(DEPDIR)/multi_endgame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_endgame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_endgame.cpp' object='multi_endgame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_endgame.Po' tmpdepfile='$(DEPDIR)/multi_endgame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_endgame.o `test -f 'network/multi_endgame.cpp' || echo '$(srcdir)/'`network/multi_endgame.cpp

multi_endgame.obj: network/multi_endgame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_endgame.obj -MD -MP -MF "$(DEPDIR)/multi_endgame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_endgame.obj `if test -f 'network/multi_endgame.cpp'; then $(CYGPATH_W) 'network/multi_endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_endgame.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_endgame.Tpo" "$(DEPDIR)/multi_endgame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_endgame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_endgame.cpp' object='multi_endgame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_endgame.Po' tmpdepfile='$(DEPDIR)/multi_endgame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_endgame.obj `if test -f 'network/multi_endgame.cpp'; then $(CYGPATH_W) 'network/multi_endgame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_endgame.cpp'; fi`

multi_ingame.o: network/multi_ingame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_ingame.o -MD -MP -MF "$(DEPDIR)/multi_ingame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_ingame.o `test -f 'network/multi_ingame.cpp' || echo '$(srcdir)/'`network/multi_ingame.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_ingame.Tpo" "$(DEPDIR)/multi_ingame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_ingame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ingame.cpp' object='multi_ingame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_ingame.Po' tmpdepfile='$(DEPDIR)/multi_ingame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_ingame.o `test -f 'network/multi_ingame.cpp' || echo '$(srcdir)/'`network/multi_ingame.cpp

multi_ingame.obj: network/multi_ingame.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_ingame.obj -MD -MP -MF "$(DEPDIR)/multi_ingame.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_ingame.obj `if test -f 'network/multi_ingame.cpp'; then $(CYGPATH_W) 'network/multi_ingame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ingame.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_ingame.Tpo" "$(DEPDIR)/multi_ingame.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_ingame.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ingame.cpp' object='multi_ingame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_ingame.Po' tmpdepfile='$(DEPDIR)/multi_ingame.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_ingame.obj `if test -f 'network/multi_ingame.cpp'; then $(CYGPATH_W) 'network/multi_ingame.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ingame.cpp'; fi`

multi_kick.o: network/multi_kick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_kick.o -MD -MP -MF "$(DEPDIR)/multi_kick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_kick.o `test -f 'network/multi_kick.cpp' || echo '$(srcdir)/'`network/multi_kick.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_kick.Tpo" "$(DEPDIR)/multi_kick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_kick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_kick.cpp' object='multi_kick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_kick.Po' tmpdepfile='$(DEPDIR)/multi_kick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_kick.o `test -f 'network/multi_kick.cpp' || echo '$(srcdir)/'`network/multi_kick.cpp

multi_kick.obj: network/multi_kick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_kick.obj -MD -MP -MF "$(DEPDIR)/multi_kick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_kick.obj `if test -f 'network/multi_kick.cpp'; then $(CYGPATH_W) 'network/multi_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_kick.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_kick.Tpo" "$(DEPDIR)/multi_kick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_kick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_kick.cpp' object='multi_kick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_kick.Po' tmpdepfile='$(DEPDIR)/multi_kick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_kick.obj `if test -f 'network/multi_kick.cpp'; then $(CYGPATH_W) 'network/multi_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_kick.cpp'; fi`

multi_log.o: network/multi_log.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_log.o -MD -MP -MF "$(DEPDIR)/multi_log.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_log.o `test -f 'network/multi_log.cpp' || echo '$(srcdir)/'`network/multi_log.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_log.Tpo" "$(DEPDIR)/multi_log.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_log.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_log.cpp' object='multi_log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_log.Po' tmpdepfile='$(DEPDIR)/multi_log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_log.o `test -f 'network/multi_log.cpp' || echo '$(srcdir)/'`network/multi_log.cpp

multi_log.obj: network/multi_log.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_log.obj -MD -MP -MF "$(DEPDIR)/multi_log.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_log.obj `if test -f 'network/multi_log.cpp'; then $(CYGPATH_W) 'network/multi_log.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_log.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_log.Tpo" "$(DEPDIR)/multi_log.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_log.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_log.cpp' object='multi_log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_log.Po' tmpdepfile='$(DEPDIR)/multi_log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_log.obj `if test -f 'network/multi_log.cpp'; then $(CYGPATH_W) 'network/multi_log.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_log.cpp'; fi`

multi_obj.o: network/multi_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_obj.o -MD -MP -MF "$(DEPDIR)/multi_obj.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_obj.o `test -f 'network/multi_obj.cpp' || echo '$(srcdir)/'`network/multi_obj.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_obj.Tpo" "$(DEPDIR)/multi_obj.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_obj.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_obj.cpp' object='multi_obj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_obj.Po' tmpdepfile='$(DEPDIR)/multi_obj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_obj.o `test -f 'network/multi_obj.cpp' || echo '$(srcdir)/'`network/multi_obj.cpp

multi_obj.obj: network/multi_obj.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_obj.obj -MD -MP -MF "$(DEPDIR)/multi_obj.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_obj.obj `if test -f 'network/multi_obj.cpp'; then $(CYGPATH_W) 'network/multi_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_obj.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_obj.Tpo" "$(DEPDIR)/multi_obj.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_obj.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_obj.cpp' object='multi_obj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_obj.Po' tmpdepfile='$(DEPDIR)/multi_obj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_obj.obj `if test -f 'network/multi_obj.cpp'; then $(CYGPATH_W) 'network/multi_obj.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_obj.cpp'; fi`

multi_observer.o: network/multi_observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_observer.o -MD -MP -MF "$(DEPDIR)/multi_observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_observer.o `test -f 'network/multi_observer.cpp' || echo '$(srcdir)/'`network/multi_observer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_observer.Tpo" "$(DEPDIR)/multi_observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_observer.cpp' object='multi_observer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_observer.Po' tmpdepfile='$(DEPDIR)/multi_observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_observer.o `test -f 'network/multi_observer.cpp' || echo '$(srcdir)/'`network/multi_observer.cpp

multi_observer.obj: network/multi_observer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_observer.obj -MD -MP -MF "$(DEPDIR)/multi_observer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_observer.obj `if test -f 'network/multi_observer.cpp'; then $(CYGPATH_W) 'network/multi_observer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_observer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_observer.Tpo" "$(DEPDIR)/multi_observer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_observer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_observer.cpp' object='multi_observer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_observer.Po' tmpdepfile='$(DEPDIR)/multi_observer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_observer.obj `if test -f 'network/multi_observer.cpp'; then $(CYGPATH_W) 'network/multi_observer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_observer.cpp'; fi`

multi_options.o: network/multi_options.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_options.o -MD -MP -MF "$(DEPDIR)/multi_options.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_options.o `test -f 'network/multi_options.cpp' || echo '$(srcdir)/'`network/multi_options.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_options.Tpo" "$(DEPDIR)/multi_options.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_options.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_options.cpp' object='multi_options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_options.Po' tmpdepfile='$(DEPDIR)/multi_options.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_options.o `test -f 'network/multi_options.cpp' || echo '$(srcdir)/'`network/multi_options.cpp

multi_options.obj: network/multi_options.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_options.obj -MD -MP -MF "$(DEPDIR)/multi_options.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_options.obj `if test -f 'network/multi_options.cpp'; then $(CYGPATH_W) 'network/multi_options.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_options.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_options.Tpo" "$(DEPDIR)/multi_options.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_options.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_options.cpp' object='multi_options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_options.Po' tmpdepfile='$(DEPDIR)/multi_options.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_options.obj `if test -f 'network/multi_options.cpp'; then $(CYGPATH_W) 'network/multi_options.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_options.cpp'; fi`

multi_pause.o: network/multi_pause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pause.o -MD -MP -MF "$(DEPDIR)/multi_pause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pause.o `test -f 'network/multi_pause.cpp' || echo '$(srcdir)/'`network/multi_pause.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pause.Tpo" "$(DEPDIR)/multi_pause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pause.cpp' object='multi_pause.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pause.Po' tmpdepfile='$(DEPDIR)/multi_pause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pause.o `test -f 'network/multi_pause.cpp' || echo '$(srcdir)/'`network/multi_pause.cpp

multi_pause.obj: network/multi_pause.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pause.obj -MD -MP -MF "$(DEPDIR)/multi_pause.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pause.obj `if test -f 'network/multi_pause.cpp'; then $(CYGPATH_W) 'network/multi_pause.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pause.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pause.Tpo" "$(DEPDIR)/multi_pause.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pause.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pause.cpp' object='multi_pause.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pause.Po' tmpdepfile='$(DEPDIR)/multi_pause.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pause.obj `if test -f 'network/multi_pause.cpp'; then $(CYGPATH_W) 'network/multi_pause.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pause.cpp'; fi`

multi_pinfo.o: network/multi_pinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pinfo.o -MD -MP -MF "$(DEPDIR)/multi_pinfo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pinfo.o `test -f 'network/multi_pinfo.cpp' || echo '$(srcdir)/'`network/multi_pinfo.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pinfo.Tpo" "$(DEPDIR)/multi_pinfo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pinfo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pinfo.cpp' object='multi_pinfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pinfo.Po' tmpdepfile='$(DEPDIR)/multi_pinfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pinfo.o `test -f 'network/multi_pinfo.cpp' || echo '$(srcdir)/'`network/multi_pinfo.cpp

multi_pinfo.obj: network/multi_pinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pinfo.obj -MD -MP -MF "$(DEPDIR)/multi_pinfo.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pinfo.obj `if test -f 'network/multi_pinfo.cpp'; then $(CYGPATH_W) 'network/multi_pinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pinfo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pinfo.Tpo" "$(DEPDIR)/multi_pinfo.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pinfo.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pinfo.cpp' object='multi_pinfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pinfo.Po' tmpdepfile='$(DEPDIR)/multi_pinfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pinfo.obj `if test -f 'network/multi_pinfo.cpp'; then $(CYGPATH_W) 'network/multi_pinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pinfo.cpp'; fi`

multi_ping.o: network/multi_ping.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_ping.o -MD -MP -MF "$(DEPDIR)/multi_ping.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_ping.o `test -f 'network/multi_ping.cpp' || echo '$(srcdir)/'`network/multi_ping.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_ping.Tpo" "$(DEPDIR)/multi_ping.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_ping.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ping.cpp' object='multi_ping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_ping.Po' tmpdepfile='$(DEPDIR)/multi_ping.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_ping.o `test -f 'network/multi_ping.cpp' || echo '$(srcdir)/'`network/multi_ping.cpp

multi_ping.obj: network/multi_ping.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_ping.obj -MD -MP -MF "$(DEPDIR)/multi_ping.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_ping.obj `if test -f 'network/multi_ping.cpp'; then $(CYGPATH_W) 'network/multi_ping.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ping.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_ping.Tpo" "$(DEPDIR)/multi_ping.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_ping.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_ping.cpp' object='multi_ping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_ping.Po' tmpdepfile='$(DEPDIR)/multi_ping.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_ping.obj `if test -f 'network/multi_ping.cpp'; then $(CYGPATH_W) 'network/multi_ping.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_ping.cpp'; fi`

multi_pmsg.o: network/multi_pmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pmsg.o -MD -MP -MF "$(DEPDIR)/multi_pmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pmsg.o `test -f 'network/multi_pmsg.cpp' || echo '$(srcdir)/'`network/multi_pmsg.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pmsg.Tpo" "$(DEPDIR)/multi_pmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pmsg.cpp' object='multi_pmsg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pmsg.Po' tmpdepfile='$(DEPDIR)/multi_pmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pmsg.o `test -f 'network/multi_pmsg.cpp' || echo '$(srcdir)/'`network/multi_pmsg.cpp

multi_pmsg.obj: network/multi_pmsg.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_pmsg.obj -MD -MP -MF "$(DEPDIR)/multi_pmsg.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_pmsg.obj `if test -f 'network/multi_pmsg.cpp'; then $(CYGPATH_W) 'network/multi_pmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pmsg.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_pmsg.Tpo" "$(DEPDIR)/multi_pmsg.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_pmsg.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_pmsg.cpp' object='multi_pmsg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_pmsg.Po' tmpdepfile='$(DEPDIR)/multi_pmsg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_pmsg.obj `if test -f 'network/multi_pmsg.cpp'; then $(CYGPATH_W) 'network/multi_pmsg.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_pmsg.cpp'; fi`

multi_rate.o: network/multi_rate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_rate.o -MD -MP -MF "$(DEPDIR)/multi_rate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_rate.o `test -f 'network/multi_rate.cpp' || echo '$(srcdir)/'`network/multi_rate.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_rate.Tpo" "$(DEPDIR)/multi_rate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_rate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_rate.cpp' object='multi_rate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_rate.Po' tmpdepfile='$(DEPDIR)/multi_rate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_rate.o `test -f 'network/multi_rate.cpp' || echo '$(srcdir)/'`network/multi_rate.cpp

multi_rate.obj: network/multi_rate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_rate.obj -MD -MP -MF "$(DEPDIR)/multi_rate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_rate.obj `if test -f 'network/multi_rate.cpp'; then $(CYGPATH_W) 'network/multi_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_rate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_rate.Tpo" "$(DEPDIR)/multi_rate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_rate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_rate.cpp' object='multi_rate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_rate.Po' tmpdepfile='$(DEPDIR)/multi_rate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_rate.obj `if test -f 'network/multi_rate.cpp'; then $(CYGPATH_W) 'network/multi_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_rate.cpp'; fi`

multi_respawn.o: network/multi_respawn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_respawn.o -MD -MP -MF "$(DEPDIR)/multi_respawn.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_respawn.o `test -f 'network/multi_respawn.cpp' || echo '$(srcdir)/'`network/multi_respawn.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_respawn.Tpo" "$(DEPDIR)/multi_respawn.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_respawn.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_respawn.cpp' object='multi_respawn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_respawn.Po' tmpdepfile='$(DEPDIR)/multi_respawn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_respawn.o `test -f 'network/multi_respawn.cpp' || echo '$(srcdir)/'`network/multi_respawn.cpp

multi_respawn.obj: network/multi_respawn.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_respawn.obj -MD -MP -MF "$(DEPDIR)/multi_respawn.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_respawn.obj `if test -f 'network/multi_respawn.cpp'; then $(CYGPATH_W) 'network/multi_respawn.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_respawn.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_respawn.Tpo" "$(DEPDIR)/multi_respawn.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_respawn.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_respawn.cpp' object='multi_respawn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_respawn.Po' tmpdepfile='$(DEPDIR)/multi_respawn.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_respawn.obj `if test -f 'network/multi_respawn.cpp'; then $(CYGPATH_W) 'network/multi_respawn.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_respawn.cpp'; fi`

multi_team.o: network/multi_team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_team.o -MD -MP -MF "$(DEPDIR)/multi_team.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_team.o `test -f 'network/multi_team.cpp' || echo '$(srcdir)/'`network/multi_team.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_team.Tpo" "$(DEPDIR)/multi_team.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_team.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_team.cpp' object='multi_team.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_team.Po' tmpdepfile='$(DEPDIR)/multi_team.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_team.o `test -f 'network/multi_team.cpp' || echo '$(srcdir)/'`network/multi_team.cpp

multi_team.obj: network/multi_team.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_team.obj -MD -MP -MF "$(DEPDIR)/multi_team.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_team.obj `if test -f 'network/multi_team.cpp'; then $(CYGPATH_W) 'network/multi_team.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_team.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_team.Tpo" "$(DEPDIR)/multi_team.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_team.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_team.cpp' object='multi_team.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_team.Po' tmpdepfile='$(DEPDIR)/multi_team.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_team.obj `if test -f 'network/multi_team.cpp'; then $(CYGPATH_W) 'network/multi_team.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_team.cpp'; fi`

multi_voice.o: network/multi_voice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_voice.o -MD -MP -MF "$(DEPDIR)/multi_voice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_voice.o `test -f 'network/multi_voice.cpp' || echo '$(srcdir)/'`network/multi_voice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_voice.Tpo" "$(DEPDIR)/multi_voice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_voice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_voice.cpp' object='multi_voice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_voice.Po' tmpdepfile='$(DEPDIR)/multi_voice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_voice.o `test -f 'network/multi_voice.cpp' || echo '$(srcdir)/'`network/multi_voice.cpp

multi_voice.obj: network/multi_voice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_voice.obj -MD -MP -MF "$(DEPDIR)/multi_voice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_voice.obj `if test -f 'network/multi_voice.cpp'; then $(CYGPATH_W) 'network/multi_voice.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_voice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_voice.Tpo" "$(DEPDIR)/multi_voice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_voice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_voice.cpp' object='multi_voice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_voice.Po' tmpdepfile='$(DEPDIR)/multi_voice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_voice.obj `if test -f 'network/multi_voice.cpp'; then $(CYGPATH_W) 'network/multi_voice.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_voice.cpp'; fi`

multi_xfer.o: network/multi_xfer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_xfer.o -MD -MP -MF "$(DEPDIR)/multi_xfer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_xfer.o `test -f 'network/multi_xfer.cpp' || echo '$(srcdir)/'`network/multi_xfer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_xfer.Tpo" "$(DEPDIR)/multi_xfer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_xfer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_xfer.cpp' object='multi_xfer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_xfer.Po' tmpdepfile='$(DEPDIR)/multi_xfer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_xfer.o `test -f 'network/multi_xfer.cpp' || echo '$(srcdir)/'`network/multi_xfer.cpp

multi_xfer.obj: network/multi_xfer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_xfer.obj -MD -MP -MF "$(DEPDIR)/multi_xfer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o multi_xfer.obj `if test -f 'network/multi_xfer.cpp'; then $(CYGPATH_W) 'network/multi_xfer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_xfer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/multi_xfer.Tpo" "$(DEPDIR)/multi_xfer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/multi_xfer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/multi_xfer.cpp' object='multi_xfer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/multi_xfer.Po' tmpdepfile='$(DEPDIR)/multi_xfer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_xfer.obj `if test -f 'network/multi_xfer.cpp'; then $(CYGPATH_W) 'network/multi_xfer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/multi_xfer.cpp'; fi`

psnet.o: network/psnet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT psnet.o -MD -MP -MF "$(DEPDIR)/psnet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o psnet.o `test -f 'network/psnet.cpp' || echo '$(srcdir)/'`network/psnet.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/psnet.Tpo" "$(DEPDIR)/psnet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/psnet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet.cpp' object='psnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/psnet.Po' tmpdepfile='$(DEPDIR)/psnet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o psnet.o `test -f 'network/psnet.cpp' || echo '$(srcdir)/'`network/psnet.cpp

psnet.obj: network/psnet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT psnet.obj -MD -MP -MF "$(DEPDIR)/psnet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o psnet.obj `if test -f 'network/psnet.cpp'; then $(CYGPATH_W) 'network/psnet.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/psnet.Tpo" "$(DEPDIR)/psnet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/psnet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet.cpp' object='psnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/psnet.Po' tmpdepfile='$(DEPDIR)/psnet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o psnet.obj `if test -f 'network/psnet.cpp'; then $(CYGPATH_W) 'network/psnet.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet.cpp'; fi`

psnet2.o: network/psnet2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT psnet2.o -MD -MP -MF "$(DEPDIR)/psnet2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o psnet2.o `test -f 'network/psnet2.cpp' || echo '$(srcdir)/'`network/psnet2.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/psnet2.Tpo" "$(DEPDIR)/psnet2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/psnet2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet2.cpp' object='psnet2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/psnet2.Po' tmpdepfile='$(DEPDIR)/psnet2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o psnet2.o `test -f 'network/psnet2.cpp' || echo '$(srcdir)/'`network/psnet2.cpp

psnet2.obj: network/psnet2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT psnet2.obj -MD -MP -MF "$(DEPDIR)/psnet2.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o psnet2.obj `if test -f 'network/psnet2.cpp'; then $(CYGPATH_W) 'network/psnet2.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/psnet2.Tpo" "$(DEPDIR)/psnet2.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/psnet2.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/psnet2.cpp' object='psnet2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/psnet2.Po' tmpdepfile='$(DEPDIR)/psnet2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o psnet2.obj `if test -f 'network/psnet2.cpp'; then $(CYGPATH_W) 'network/psnet2.cpp'; else $(CYGPATH_W) '$(srcdir)/network/psnet2.cpp'; fi`

optionsmenumulti.o: menuui/optionsmenumulti.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT optionsmenumulti.o -MD -MP -MF "$(DEPDIR)/optionsmenumulti.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o optionsmenumulti.o `test -f 'menuui/optionsmenumulti.cpp' || echo '$(srcdir)/'`menuui/optionsmenumulti.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/optionsmenumulti.Tpo" "$(DEPDIR)/optionsmenumulti.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/optionsmenumulti.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenumulti.cpp' object='optionsmenumulti.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/optionsmenumulti.Po' tmpdepfile='$(DEPDIR)/optionsmenumulti.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o optionsmenumulti.o `test -f 'menuui/optionsmenumulti.cpp' || echo '$(srcdir)/'`menuui/optionsmenumulti.cpp

optionsmenumulti.obj: menuui/optionsmenumulti.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT optionsmenumulti.obj -MD -MP -MF "$(DEPDIR)/optionsmenumulti.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o optionsmenumulti.obj `if test -f 'menuui/optionsmenumulti.cpp'; then $(CYGPATH_W) 'menuui/optionsmenumulti.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenumulti.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/optionsmenumulti.Tpo" "$(DEPDIR)/optionsmenumulti.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/optionsmenumulti.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menuui/optionsmenumulti.cpp' object='optionsmenumulti.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/optionsmenumulti.Po' tmpdepfile='$(DEPDIR)/optionsmenumulti.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o optionsmenumulti.obj `if test -f 'menuui/optionsmenumulti.cpp'; then $(CYGPATH_W) 'menuui/optionsmenumulti.cpp'; else $(CYGPATH_W) '$(srcdir)/menuui/optionsmenumulti.cpp'; fi`

chatbox.o: missionui/chatbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chatbox.o -MD -MP -MF "$(DEPDIR)/chatbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o chatbox.o `test -f 'missionui/chatbox.cpp' || echo '$(srcdir)/'`missionui/chatbox.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/chatbox.Tpo" "$(DEPDIR)/chatbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/chatbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/chatbox.cpp' object='chatbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/chatbox.Po' tmpdepfile='$(DEPDIR)/chatbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chatbox.o `test -f 'missionui/chatbox.cpp' || echo '$(srcdir)/'`missionui/chatbox.cpp

chatbox.obj: missionui/chatbox.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chatbox.obj -MD -MP -MF "$(DEPDIR)/chatbox.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o chatbox.obj `if test -f 'missionui/chatbox.cpp'; then $(CYGPATH_W) 'missionui/chatbox.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/chatbox.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/chatbox.Tpo" "$(DEPDIR)/chatbox.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/chatbox.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='missionui/chatbox.cpp' object='chatbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/chatbox.Po' tmpdepfile='$(DEPDIR)/chatbox.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chatbox.obj `if test -f 'missionui/chatbox.cpp'; then $(CYGPATH_W) 'missionui/chatbox.cpp'; else $(CYGPATH_W) '$(srcdir)/missionui/chatbox.cpp'; fi`

eventmusic.o: gamesnd/eventmusic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eventmusic.o -MD -MP -MF "$(DEPDIR)/eventmusic.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o eventmusic.o `test -f 'gamesnd/eventmusic.cpp' || echo '$(srcdir)/'`gamesnd/eventmusic.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/eventmusic.Tpo" "$(DEPDIR)/eventmusic.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/eventmusic.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/eventmusic.cpp' object='eventmusic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/eventmusic.Po' tmpdepfile='$(DEPDIR)/eventmusic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eventmusic.o `test -f 'gamesnd/eventmusic.cpp' || echo '$(srcdir)/'`gamesnd/eventmusic.cpp

eventmusic.obj: gamesnd/eventmusic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eventmusic.obj -MD -MP -MF "$(DEPDIR)/eventmusic.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o eventmusic.obj `if test -f 'gamesnd/eventmusic.cpp'; then $(CYGPATH_W) 'gamesnd/eventmusic.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/eventmusic.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/eventmusic.Tpo" "$(DEPDIR)/eventmusic.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/eventmusic.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/eventmusic.cpp' object='eventmusic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/eventmusic.Po' tmpdepfile='$(DEPDIR)/eventmusic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eventmusic.obj `if test -f 'gamesnd/eventmusic.cpp'; then $(CYGPATH_W) 'gamesnd/eventmusic.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/eventmusic.cpp'; fi`

gamesnd.o: gamesnd/gamesnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamesnd.o -MD -MP -MF "$(DEPDIR)/gamesnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gamesnd.o `test -f 'gamesnd/gamesnd.cpp' || echo '$(srcdir)/'`gamesnd/gamesnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gamesnd.Tpo" "$(DEPDIR)/gamesnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gamesnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/gamesnd.cpp' object='gamesnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gamesnd.Po' tmpdepfile='$(DEPDIR)/gamesnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamesnd.o `test -f 'gamesnd/gamesnd.cpp' || echo '$(srcdir)/'`gamesnd/gamesnd.cpp

gamesnd.obj: gamesnd/gamesnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamesnd.obj -MD -MP -MF "$(DEPDIR)/gamesnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o gamesnd.obj `if test -f 'gamesnd/gamesnd.cpp'; then $(CYGPATH_W) 'gamesnd/gamesnd.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/gamesnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/gamesnd.Tpo" "$(DEPDIR)/gamesnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/gamesnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamesnd/gamesnd.cpp' object='gamesnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/gamesnd.Po' tmpdepfile='$(DEPDIR)/gamesnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamesnd.obj `if test -f 'gamesnd/gamesnd.cpp'; then $(CYGPATH_W) 'gamesnd/gamesnd.cpp'; else $(CYGPATH_W) '$(srcdir)/gamesnd/gamesnd.cpp'; fi`

objectsnd.o: object/objectsnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objectsnd.o -MD -MP -MF "$(DEPDIR)/objectsnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objectsnd.o `test -f 'object/objectsnd.cpp' || echo '$(srcdir)/'`object/objectsnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objectsnd.Tpo" "$(DEPDIR)/objectsnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objectsnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsnd.cpp' object='objectsnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objectsnd.Po' tmpdepfile='$(DEPDIR)/objectsnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objectsnd.o `test -f 'object/objectsnd.cpp' || echo '$(srcdir)/'`object/objectsnd.cpp

objectsnd.obj: object/objectsnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objectsnd.obj -MD -MP -MF "$(DEPDIR)/objectsnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o objectsnd.obj `if test -f 'object/objectsnd.cpp'; then $(CYGPATH_W) 'object/objectsnd.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/objectsnd.Tpo" "$(DEPDIR)/objectsnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/objectsnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object/objectsnd.cpp' object='objectsnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/objectsnd.Po' tmpdepfile='$(DEPDIR)/objectsnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objectsnd.obj `if test -f 'object/objectsnd.cpp'; then $(CYGPATH_W) 'object/objectsnd.cpp'; else $(CYGPATH_W) '$(srcdir)/object/objectsnd.cpp'; fi`

acm.o: sound/acm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT acm.o -MD -MP -MF "$(DEPDIR)/acm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o acm.o `test -f 'sound/acm.cpp' || echo '$(srcdir)/'`sound/acm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/acm.Tpo" "$(DEPDIR)/acm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/acm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/acm.cpp' object='acm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/acm.Po' tmpdepfile='$(DEPDIR)/acm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o acm.o `test -f 'sound/acm.cpp' || echo '$(srcdir)/'`sound/acm.cpp

acm.obj: sound/acm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT acm.obj -MD -MP -MF "$(DEPDIR)/acm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o acm.obj `if test -f 'sound/acm.cpp'; then $(CYGPATH_W) 'sound/acm.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/acm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/acm.Tpo" "$(DEPDIR)/acm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/acm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/acm.cpp' object='acm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/acm.Po' tmpdepfile='$(DEPDIR)/acm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o acm.obj `if test -f 'sound/acm.cpp'; then $(CYGPATH_W) 'sound/acm.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/acm.cpp'; fi`

audiostr.o: sound/audiostr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT audiostr.o -MD -MP -MF "$(DEPDIR)/audiostr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o audiostr.o `test -f 'sound/audiostr.cpp' || echo '$(srcdir)/'`sound/audiostr.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/audiostr.Tpo" "$(DEPDIR)/audiostr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/audiostr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/audiostr.cpp' object='audiostr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/audiostr.Po' tmpdepfile='$(DEPDIR)/audiostr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o audiostr.o `test -f 'sound/audiostr.cpp' || echo '$(srcdir)/'`sound/audiostr.cpp

audiostr.obj: sound/audiostr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT audiostr.obj -MD -MP -MF "$(DEPDIR)/audiostr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o audiostr.obj `if test -f 'sound/audiostr.cpp'; then $(CYGPATH_W) 'sound/audiostr.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/audiostr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/audiostr.Tpo" "$(DEPDIR)/audiostr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/audiostr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/audiostr.cpp' object='audiostr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/audiostr.Po' tmpdepfile='$(DEPDIR)/audiostr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o audiostr.obj `if test -f 'sound/audiostr.cpp'; then $(CYGPATH_W) 'sound/audiostr.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/audiostr.cpp'; fi`

ds.o: sound/ds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ds.o -MD -MP -MF "$(DEPDIR)/ds.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ds.o `test -f 'sound/ds.cpp' || echo '$(srcdir)/'`sound/ds.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ds.Tpo" "$(DEPDIR)/ds.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ds.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds.cpp' object='ds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ds.Po' tmpdepfile='$(DEPDIR)/ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ds.o `test -f 'sound/ds.cpp' || echo '$(srcdir)/'`sound/ds.cpp

ds.obj: sound/ds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ds.obj -MD -MP -MF "$(DEPDIR)/ds.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ds.obj `if test -f 'sound/ds.cpp'; then $(CYGPATH_W) 'sound/ds.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ds.Tpo" "$(DEPDIR)/ds.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ds.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds.cpp' object='ds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ds.Po' tmpdepfile='$(DEPDIR)/ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ds.obj `if test -f 'sound/ds.cpp'; then $(CYGPATH_W) 'sound/ds.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds.cpp'; fi`

ds3d.o: sound/ds3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ds3d.o -MD -MP -MF "$(DEPDIR)/ds3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ds3d.o `test -f 'sound/ds3d.cpp' || echo '$(srcdir)/'`sound/ds3d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ds3d.Tpo" "$(DEPDIR)/ds3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ds3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds3d.cpp' object='ds3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ds3d.Po' tmpdepfile='$(DEPDIR)/ds3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ds3d.o `test -f 'sound/ds3d.cpp' || echo '$(srcdir)/'`sound/ds3d.cpp

ds3d.obj: sound/ds3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ds3d.obj -MD -MP -MF "$(DEPDIR)/ds3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ds3d.obj `if test -f 'sound/ds3d.cpp'; then $(CYGPATH_W) 'sound/ds3d.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ds3d.Tpo" "$(DEPDIR)/ds3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ds3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/ds3d.cpp' object='ds3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ds3d.Po' tmpdepfile='$(DEPDIR)/ds3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ds3d.obj `if test -f 'sound/ds3d.cpp'; then $(CYGPATH_W) 'sound/ds3d.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/ds3d.cpp'; fi`

dscap.o: sound/dscap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dscap.o -MD -MP -MF "$(DEPDIR)/dscap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dscap.o `test -f 'sound/dscap.cpp' || echo '$(srcdir)/'`sound/dscap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dscap.Tpo" "$(DEPDIR)/dscap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dscap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/dscap.cpp' object='dscap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dscap.Po' tmpdepfile='$(DEPDIR)/dscap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dscap.o `test -f 'sound/dscap.cpp' || echo '$(srcdir)/'`sound/dscap.cpp

dscap.obj: sound/dscap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dscap.obj -MD -MP -MF "$(DEPDIR)/dscap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dscap.obj `if test -f 'sound/dscap.cpp'; then $(CYGPATH_W) 'sound/dscap.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/dscap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dscap.Tpo" "$(DEPDIR)/dscap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dscap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/dscap.cpp' object='dscap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dscap.Po' tmpdepfile='$(DEPDIR)/dscap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dscap.obj `if test -f 'sound/dscap.cpp'; then $(CYGPATH_W) 'sound/dscap.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/dscap.cpp'; fi`

midifile.o: sound/midifile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT midifile.o -MD -MP -MF "$(DEPDIR)/midifile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o midifile.o `test -f 'sound/midifile.cpp' || echo '$(srcdir)/'`sound/midifile.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/midifile.Tpo" "$(DEPDIR)/midifile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/midifile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/midifile.cpp' object='midifile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/midifile.Po' tmpdepfile='$(DEPDIR)/midifile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o midifile.o `test -f 'sound/midifile.cpp' || echo '$(srcdir)/'`sound/midifile.cpp

midifile.obj: sound/midifile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT midifile.obj -MD -MP -MF "$(DEPDIR)/midifile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o midifile.obj `if test -f 'sound/midifile.cpp'; then $(CYGPATH_W) 'sound/midifile.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/midifile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/midifile.Tpo" "$(DEPDIR)/midifile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/midifile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/midifile.cpp' object='midifile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/midifile.Po' tmpdepfile='$(DEPDIR)/midifile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o midifile.obj `if test -f 'sound/midifile.cpp'; then $(CYGPATH_W) 'sound/midifile.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/midifile.cpp'; fi`

rbaudio.o: sound/rbaudio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rbaudio.o -MD -MP -MF "$(DEPDIR)/rbaudio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rbaudio.o `test -f 'sound/rbaudio.cpp' || echo '$(srcdir)/'`sound/rbaudio.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rbaudio.Tpo" "$(DEPDIR)/rbaudio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rbaudio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rbaudio.cpp' object='rbaudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rbaudio.Po' tmpdepfile='$(DEPDIR)/rbaudio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rbaudio.o `test -f 'sound/rbaudio.cpp' || echo '$(srcdir)/'`sound/rbaudio.cpp

rbaudio.obj: sound/rbaudio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rbaudio.obj -MD -MP -MF "$(DEPDIR)/rbaudio.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rbaudio.obj `if test -f 'sound/rbaudio.cpp'; then $(CYGPATH_W) 'sound/rbaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rbaudio.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rbaudio.Tpo" "$(DEPDIR)/rbaudio.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rbaudio.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rbaudio.cpp' object='rbaudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rbaudio.Po' tmpdepfile='$(DEPDIR)/rbaudio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rbaudio.obj `if test -f 'sound/rbaudio.cpp'; then $(CYGPATH_W) 'sound/rbaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rbaudio.cpp'; fi`

rtvoice.o: sound/rtvoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rtvoice.o -MD -MP -MF "$(DEPDIR)/rtvoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rtvoice.o `test -f 'sound/rtvoice.cpp' || echo '$(srcdir)/'`sound/rtvoice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rtvoice.Tpo" "$(DEPDIR)/rtvoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rtvoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rtvoice.cpp' object='rtvoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rtvoice.Po' tmpdepfile='$(DEPDIR)/rtvoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rtvoice.o `test -f 'sound/rtvoice.cpp' || echo '$(srcdir)/'`sound/rtvoice.cpp

rtvoice.obj: sound/rtvoice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rtvoice.obj -MD -MP -MF "$(DEPDIR)/rtvoice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o rtvoice.obj `if test -f 'sound/rtvoice.cpp'; then $(CYGPATH_W) 'sound/rtvoice.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rtvoice.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/rtvoice.Tpo" "$(DEPDIR)/rtvoice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/rtvoice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/rtvoice.cpp' object='rtvoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/rtvoice.Po' tmpdepfile='$(DEPDIR)/rtvoice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rtvoice.obj `if test -f 'sound/rtvoice.cpp'; then $(CYGPATH_W) 'sound/rtvoice.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/rtvoice.cpp'; fi`

sound.o: sound/sound.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sound.o -MD -MP -MF "$(DEPDIR)/sound.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sound.o `test -f 'sound/sound.cpp' || echo '$(srcdir)/'`sound/sound.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/sound.Tpo" "$(DEPDIR)/sound.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sound.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/sound.cpp' object='sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sound.Po' tmpdepfile='$(DEPDIR)/sound.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sound.o `test -f 'sound/sound.cpp' || echo '$(srcdir)/'`sound/sound.cpp

sound.obj: sound/sound.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sound.obj -MD -MP -MF "$(DEPDIR)/sound.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o sound.obj `if test -f 'sound/sound.cpp'; then $(CYGPATH_W) 'sound/sound.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/sound.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/sound.Tpo" "$(DEPDIR)/sound.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/sound.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/sound.cpp' object='sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/sound.Po' tmpdepfile='$(DEPDIR)/sound.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sound.obj `if test -f 'sound/sound.cpp'; then $(CYGPATH_W) 'sound/sound.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/sound.cpp'; fi`

winmidi.o: sound/winmidi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT winmidi.o -MD -MP -MF "$(DEPDIR)/winmidi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o winmidi.o `test -f 'sound/winmidi.cpp' || echo '$(srcdir)/'`sound/winmidi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/winmidi.Tpo" "$(DEPDIR)/winmidi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/winmidi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi.cpp' object='winmidi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/winmidi.Po' tmpdepfile='$(DEPDIR)/winmidi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o winmidi.o `test -f 'sound/winmidi.cpp' || echo '$(srcdir)/'`sound/winmidi.cpp

winmidi.obj: sound/winmidi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT winmidi.obj -MD -MP -MF "$(DEPDIR)/winmidi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o winmidi.obj `if test -f 'sound/winmidi.cpp'; then $(CYGPATH_W) 'sound/winmidi.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/winmidi.Tpo" "$(DEPDIR)/winmidi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/winmidi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi.cpp' object='winmidi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/winmidi.Po' tmpdepfile='$(DEPDIR)/winmidi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o winmidi.obj `if test -f 'sound/winmidi.cpp'; then $(CYGPATH_W) 'sound/winmidi.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi.cpp'; fi`

winmidi_base.o: sound/winmidi_base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT winmidi_base.o -MD -MP -MF "$(DEPDIR)/winmidi_base.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o winmidi_base.o `test -f 'sound/winmidi_base.cpp' || echo '$(srcdir)/'`sound/winmidi_base.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/winmidi_base.Tpo" "$(DEPDIR)/winmidi_base.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/winmidi_base.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi_base.cpp' object='winmidi_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/winmidi_base.Po' tmpdepfile='$(DEPDIR)/winmidi_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o winmidi_base.o `test -f 'sound/winmidi_base.cpp' || echo '$(srcdir)/'`sound/winmidi_base.cpp

winmidi_base.obj: sound/winmidi_base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT winmidi_base.obj -MD -MP -MF "$(DEPDIR)/winmidi_base.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o winmidi_base.obj `if test -f 'sound/winmidi_base.cpp'; then $(CYGPATH_W) 'sound/winmidi_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi_base.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/winmidi_base.Tpo" "$(DEPDIR)/winmidi_base.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/winmidi_base.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sound/winmidi_base.cpp' object='winmidi_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/winmidi_base.Po' tmpdepfile='$(DEPDIR)/winmidi_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o winmidi_base.obj `if test -f 'sound/winmidi_base.cpp'; then $(CYGPATH_W) 'sound/winmidi_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sound/winmidi_base.cpp'; fi`

codec1.o: vcodec/codec1.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codec1.o -MD -MP -MF "$(DEPDIR)/codec1.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o codec1.o `test -f 'vcodec/codec1.cpp' || echo '$(srcdir)/'`vcodec/codec1.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/codec1.Tpo" "$(DEPDIR)/codec1.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/codec1.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='vcodec/codec1.cpp' object='codec1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/codec1.Po' tmpdepfile='$(DEPDIR)/codec1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codec1.o `test -f 'vcodec/codec1.cpp' || echo '$(srcdir)/'`vcodec/codec1.cpp

codec1.obj: vcodec/codec1.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codec1.obj -MD -MP -MF "$(DEPDIR)/codec1.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o codec1.obj `if test -f 'vcodec/codec1.cpp'; then $(CYGPATH_W) 'vcodec/codec1.cpp'; else $(CYGPATH_W) '$(srcdir)/vcodec/codec1.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/codec1.Tpo" "$(DEPDIR)/codec1.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/codec1.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='vcodec/codec1.cpp' object='codec1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/codec1.Po' tmpdepfile='$(DEPDIR)/codec1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codec1.obj `if test -f 'vcodec/codec1.cpp'; then $(CYGPATH_W) 'vcodec/codec1.cpp'; else $(CYGPATH_W) '$(srcdir)/vcodec/codec1.cpp'; fi`

grsoft.o: graphics/grsoft.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grsoft.o -MD -MP -MF "$(DEPDIR)/grsoft.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grsoft.o `test -f 'graphics/grsoft.cpp' || echo '$(srcdir)/'`graphics/grsoft.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grsoft.Tpo" "$(DEPDIR)/grsoft.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grsoft.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grsoft.cpp' object='grsoft.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grsoft.Po' tmpdepfile='$(DEPDIR)/grsoft.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grsoft.o `test -f 'graphics/grsoft.cpp' || echo '$(srcdir)/'`graphics/grsoft.cpp

grsoft.obj: graphics/grsoft.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grsoft.obj -MD -MP -MF "$(DEPDIR)/grsoft.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grsoft.obj `if test -f 'graphics/grsoft.cpp'; then $(CYGPATH_W) 'graphics/grsoft.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grsoft.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grsoft.Tpo" "$(DEPDIR)/grsoft.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grsoft.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grsoft.cpp' object='grsoft.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grsoft.Po' tmpdepfile='$(DEPDIR)/grsoft.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grsoft.obj `if test -f 'graphics/grsoft.cpp'; then $(CYGPATH_W) 'graphics/grsoft.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grsoft.cpp'; fi`

tmapper.o: graphics/tmapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tmapper.o -MD -MP -MF "$(DEPDIR)/tmapper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tmapper.o `test -f 'graphics/tmapper.cpp' || echo '$(srcdir)/'`graphics/tmapper.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/tmapper.Tpo" "$(DEPDIR)/tmapper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tmapper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/tmapper.cpp' object='tmapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tmapper.Po' tmpdepfile='$(DEPDIR)/tmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tmapper.o `test -f 'graphics/tmapper.cpp' || echo '$(srcdir)/'`graphics/tmapper.cpp

tmapper.obj: graphics/tmapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tmapper.obj -MD -MP -MF "$(DEPDIR)/tmapper.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o tmapper.obj `if test -f 'graphics/tmapper.cpp'; then $(CYGPATH_W) 'graphics/tmapper.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/tmapper.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/tmapper.Tpo" "$(DEPDIR)/tmapper.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/tmapper.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/tmapper.cpp' object='tmapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/tmapper.Po' tmpdepfile='$(DEPDIR)/tmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tmapper.obj `if test -f 'graphics/tmapper.cpp'; then $(CYGPATH_W) 'graphics/tmapper.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/tmapper.cpp'; fi`

movie.o: cutscene/movie.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movie.o -MD -MP -MF "$(DEPDIR)/movie.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o movie.o `test -f 'cutscene/movie.cpp' || echo '$(srcdir)/'`cutscene/movie.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/movie.Tpo" "$(DEPDIR)/movie.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/movie.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/movie.cpp' object='movie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/movie.Po' tmpdepfile='$(DEPDIR)/movie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movie.o `test -f 'cutscene/movie.cpp' || echo '$(srcdir)/'`cutscene/movie.cpp

movie.obj: cutscene/movie.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movie.obj -MD -MP -MF "$(DEPDIR)/movie.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o movie.obj `if test -f 'cutscene/movie.cpp'; then $(CYGPATH_W) 'cutscene/movie.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/movie.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/movie.Tpo" "$(DEPDIR)/movie.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/movie.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cutscene/movie.cpp' object='movie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/movie.Po' tmpdepfile='$(DEPDIR)/movie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movie.obj `if test -f 'cutscene/movie.cpp'; then $(CYGPATH_W) 'cutscene/movie.cpp'; else $(CYGPATH_W) '$(srcdir)/cutscene/movie.cpp'; fi`

dx8show.o: directx/dx8show.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dx8show.o -MD -MP -MF "$(DEPDIR)/dx8show.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dx8show.o `test -f 'directx/dx8show.cpp' || echo '$(srcdir)/'`directx/dx8show.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dx8show.Tpo" "$(DEPDIR)/dx8show.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dx8show.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='directx/dx8show.cpp' object='dx8show.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dx8show.Po' tmpdepfile='$(DEPDIR)/dx8show.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dx8show.o `test -f 'directx/dx8show.cpp' || echo '$(srcdir)/'`directx/dx8show.cpp

dx8show.obj: directx/dx8show.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dx8show.obj -MD -MP -MF "$(DEPDIR)/dx8show.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dx8show.obj `if test -f 'directx/dx8show.cpp'; then $(CYGPATH_W) 'directx/dx8show.cpp'; else $(CYGPATH_W) '$(srcdir)/directx/dx8show.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dx8show.Tpo" "$(DEPDIR)/dx8show.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dx8show.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='directx/dx8show.cpp' object='dx8show.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dx8show.Po' tmpdepfile='$(DEPDIR)/dx8show.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dx8show.obj `if test -f 'directx/dx8show.cpp'; then $(CYGPATH_W) 'directx/dx8show.cpp'; else $(CYGPATH_W) '$(srcdir)/directx/dx8show.cpp'; fi`

ddsutils.o: ddsutils/ddsutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ddsutils.o -MD -MP -MF "$(DEPDIR)/ddsutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ddsutils.o `test -f 'ddsutils/ddsutils.cpp' || echo '$(srcdir)/'`ddsutils/ddsutils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ddsutils.Tpo" "$(DEPDIR)/ddsutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ddsutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ddsutils/ddsutils.cpp' object='ddsutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ddsutils.Po' tmpdepfile='$(DEPDIR)/ddsutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ddsutils.o `test -f 'ddsutils/ddsutils.cpp' || echo '$(srcdir)/'`ddsutils/ddsutils.cpp

ddsutils.obj: ddsutils/ddsutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ddsutils.obj -MD -MP -MF "$(DEPDIR)/ddsutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ddsutils.obj `if test -f 'ddsutils/ddsutils.cpp'; then $(CYGPATH_W) 'ddsutils/ddsutils.cpp'; else $(CYGPATH_W) '$(srcdir)/ddsutils/ddsutils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ddsutils.Tpo" "$(DEPDIR)/ddsutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ddsutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ddsutils/ddsutils.cpp' object='ddsutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ddsutils.Po' tmpdepfile='$(DEPDIR)/ddsutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ddsutils.obj `if test -f 'ddsutils/ddsutils.cpp'; then $(CYGPATH_W) 'ddsutils/ddsutils.cpp'; else $(CYGPATH_W) '$(srcdir)/ddsutils/ddsutils.cpp'; fi`

windebug.o: globalincs/windebug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT windebug.o -MD -MP -MF "$(DEPDIR)/windebug.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o windebug.o `test -f 'globalincs/windebug.cpp' || echo '$(srcdir)/'`globalincs/windebug.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/windebug.Tpo" "$(DEPDIR)/windebug.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/windebug.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/windebug.cpp' object='windebug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/windebug.Po' tmpdepfile='$(DEPDIR)/windebug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o windebug.o `test -f 'globalincs/windebug.cpp' || echo '$(srcdir)/'`globalincs/windebug.cpp

windebug.obj: globalincs/windebug.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT windebug.obj -MD -MP -MF "$(DEPDIR)/windebug.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o windebug.obj `if test -f 'globalincs/windebug.cpp'; then $(CYGPATH_W) 'globalincs/windebug.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/windebug.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/windebug.Tpo" "$(DEPDIR)/windebug.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/windebug.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='globalincs/windebug.cpp' object='windebug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/windebug.Po' tmpdepfile='$(DEPDIR)/windebug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o windebug.obj `if test -f 'globalincs/windebug.cpp'; then $(CYGPATH_W) 'globalincs/windebug.cpp'; else $(CYGPATH_W) '$(srcdir)/globalincs/windebug.cpp'; fi`

glide.o: glide/glide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT glide.o -MD -MP -MF "$(DEPDIR)/glide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o glide.o `test -f 'glide/glide.cpp' || echo '$(srcdir)/'`glide/glide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/glide.Tpo" "$(DEPDIR)/glide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/glide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='glide/glide.cpp' object='glide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/glide.Po' tmpdepfile='$(DEPDIR)/glide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o glide.o `test -f 'glide/glide.cpp' || echo '$(srcdir)/'`glide/glide.cpp

glide.obj: glide/glide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT glide.obj -MD -MP -MF "$(DEPDIR)/glide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o glide.obj `if test -f 'glide/glide.cpp'; then $(CYGPATH_W) 'glide/glide.cpp'; else $(CYGPATH_W) '$(srcdir)/glide/glide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/glide.Tpo" "$(DEPDIR)/glide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/glide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='glide/glide.cpp' object='glide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/glide.Po' tmpdepfile='$(DEPDIR)/glide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o glide.obj `if test -f 'glide/glide.cpp'; then $(CYGPATH_W) 'glide/glide.cpp'; else $(CYGPATH_W) '$(srcdir)/glide/glide.cpp'; fi`

grd3d.o: graphics/grd3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3d.o -MD -MP -MF "$(DEPDIR)/grd3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3d.o `test -f 'graphics/grd3d.cpp' || echo '$(srcdir)/'`graphics/grd3d.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3d.Tpo" "$(DEPDIR)/grd3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3d.cpp' object='grd3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3d.Po' tmpdepfile='$(DEPDIR)/grd3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3d.o `test -f 'graphics/grd3d.cpp' || echo '$(srcdir)/'`graphics/grd3d.cpp

grd3d.obj: graphics/grd3d.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3d.obj -MD -MP -MF "$(DEPDIR)/grd3d.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3d.obj `if test -f 'graphics/grd3d.cpp'; then $(CYGPATH_W) 'graphics/grd3d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3d.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3d.Tpo" "$(DEPDIR)/grd3d.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3d.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3d.cpp' object='grd3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3d.Po' tmpdepfile='$(DEPDIR)/grd3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3d.obj `if test -f 'graphics/grd3d.cpp'; then $(CYGPATH_W) 'graphics/grd3d.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3d.cpp'; fi`

grd3drender.o: graphics/grd3drender.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3drender.o -MD -MP -MF "$(DEPDIR)/grd3drender.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3drender.o `test -f 'graphics/grd3drender.cpp' || echo '$(srcdir)/'`graphics/grd3drender.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3drender.Tpo" "$(DEPDIR)/grd3drender.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3drender.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3drender.cpp' object='grd3drender.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3drender.Po' tmpdepfile='$(DEPDIR)/grd3drender.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3drender.o `test -f 'graphics/grd3drender.cpp' || echo '$(srcdir)/'`graphics/grd3drender.cpp

grd3drender.obj: graphics/grd3drender.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3drender.obj -MD -MP -MF "$(DEPDIR)/grd3drender.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3drender.obj `if test -f 'graphics/grd3drender.cpp'; then $(CYGPATH_W) 'graphics/grd3drender.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3drender.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3drender.Tpo" "$(DEPDIR)/grd3drender.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3drender.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3drender.cpp' object='grd3drender.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3drender.Po' tmpdepfile='$(DEPDIR)/grd3drender.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3drender.obj `if test -f 'graphics/grd3drender.cpp'; then $(CYGPATH_W) 'graphics/grd3drender.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3drender.cpp'; fi`

grd3dtexture.o: graphics/grd3dtexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3dtexture.o -MD -MP -MF "$(DEPDIR)/grd3dtexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3dtexture.o `test -f 'graphics/grd3dtexture.cpp' || echo '$(srcdir)/'`graphics/grd3dtexture.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3dtexture.Tpo" "$(DEPDIR)/grd3dtexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3dtexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3dtexture.cpp' object='grd3dtexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3dtexture.Po' tmpdepfile='$(DEPDIR)/grd3dtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3dtexture.o `test -f 'graphics/grd3dtexture.cpp' || echo '$(srcdir)/'`graphics/grd3dtexture.cpp

grd3dtexture.obj: graphics/grd3dtexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grd3dtexture.obj -MD -MP -MF "$(DEPDIR)/grd3dtexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grd3dtexture.obj `if test -f 'graphics/grd3dtexture.cpp'; then $(CYGPATH_W) 'graphics/grd3dtexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3dtexture.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grd3dtexture.Tpo" "$(DEPDIR)/grd3dtexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grd3dtexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grd3dtexture.cpp' object='grd3dtexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grd3dtexture.Po' tmpdepfile='$(DEPDIR)/grd3dtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grd3dtexture.obj `if test -f 'graphics/grd3dtexture.cpp'; then $(CYGPATH_W) 'graphics/grd3dtexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grd3dtexture.cpp'; fi`

grdirectdraw.o: graphics/grdirectdraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grdirectdraw.o -MD -MP -MF "$(DEPDIR)/grdirectdraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grdirectdraw.o `test -f 'graphics/grdirectdraw.cpp' || echo '$(srcdir)/'`graphics/grdirectdraw.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grdirectdraw.Tpo" "$(DEPDIR)/grdirectdraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grdirectdraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grdirectdraw.cpp' object='grdirectdraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grdirectdraw.Po' tmpdepfile='$(DEPDIR)/grdirectdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grdirectdraw.o `test -f 'graphics/grdirectdraw.cpp' || echo '$(srcdir)/'`graphics/grdirectdraw.cpp

grdirectdraw.obj: graphics/grdirectdraw.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grdirectdraw.obj -MD -MP -MF "$(DEPDIR)/grdirectdraw.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grdirectdraw.obj `if test -f 'graphics/grdirectdraw.cpp'; then $(CYGPATH_W) 'graphics/grdirectdraw.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grdirectdraw.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grdirectdraw.Tpo" "$(DEPDIR)/grdirectdraw.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grdirectdraw.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grdirectdraw.cpp' object='grdirectdraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grdirectdraw.Po' tmpdepfile='$(DEPDIR)/grdirectdraw.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grdirectdraw.obj `if test -f 'graphics/grdirectdraw.cpp'; then $(CYGPATH_W) 'graphics/grdirectdraw.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grdirectdraw.cpp'; fi`

grglide.o: graphics/grglide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grglide.o -MD -MP -MF "$(DEPDIR)/grglide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grglide.o `test -f 'graphics/grglide.cpp' || echo '$(srcdir)/'`graphics/grglide.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grglide.Tpo" "$(DEPDIR)/grglide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grglide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglide.cpp' object='grglide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grglide.Po' tmpdepfile='$(DEPDIR)/grglide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grglide.o `test -f 'graphics/grglide.cpp' || echo '$(srcdir)/'`graphics/grglide.cpp

grglide.obj: graphics/grglide.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grglide.obj -MD -MP -MF "$(DEPDIR)/grglide.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grglide.obj `if test -f 'graphics/grglide.cpp'; then $(CYGPATH_W) 'graphics/grglide.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglide.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grglide.Tpo" "$(DEPDIR)/grglide.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grglide.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglide.cpp' object='grglide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grglide.Po' tmpdepfile='$(DEPDIR)/grglide.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grglide.obj `if test -f 'graphics/grglide.cpp'; then $(CYGPATH_W) 'graphics/grglide.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglide.cpp'; fi`

grglidetexture.o: graphics/grglidetexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grglidetexture.o -MD -MP -MF "$(DEPDIR)/grglidetexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grglidetexture.o `test -f 'graphics/grglidetexture.cpp' || echo '$(srcdir)/'`graphics/grglidetexture.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grglidetexture.Tpo" "$(DEPDIR)/grglidetexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grglidetexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglidetexture.cpp' object='grglidetexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grglidetexture.Po' tmpdepfile='$(DEPDIR)/grglidetexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grglidetexture.o `test -f 'graphics/grglidetexture.cpp' || echo '$(srcdir)/'`graphics/grglidetexture.cpp

grglidetexture.obj: graphics/grglidetexture.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grglidetexture.obj -MD -MP -MF "$(DEPDIR)/grglidetexture.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o grglidetexture.obj `if test -f 'graphics/grglidetexture.cpp'; then $(CYGPATH_W) 'graphics/grglidetexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglidetexture.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/grglidetexture.Tpo" "$(DEPDIR)/grglidetexture.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/grglidetexture.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphics/grglidetexture.cpp' object='grglidetexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/grglidetexture.Po' tmpdepfile='$(DEPDIR)/grglidetexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grglidetexture.obj `if test -f 'graphics/grglidetexture.cpp'; then $(CYGPATH_W) 'graphics/grglidetexture.cpp'; else $(CYGPATH_W) '$(srcdir)/graphics/grglidetexture.cpp'; fi`

stand_gui.o: network/stand_gui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stand_gui.o -MD -MP -MF "$(DEPDIR)/stand_gui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o stand_gui.o `test -f 'network/stand_gui.cpp' || echo '$(srcdir)/'`network/stand_gui.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/stand_gui.Tpo" "$(DEPDIR)/stand_gui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/stand_gui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/stand_gui.cpp' object='stand_gui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/stand_gui.Po' tmpdepfile='$(DEPDIR)/stand_gui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stand_gui.o `test -f 'network/stand_gui.cpp' || echo '$(srcdir)/'`network/stand_gui.cpp

stand_gui.obj: network/stand_gui.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stand_gui.obj -MD -MP -MF "$(DEPDIR)/stand_gui.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o stand_gui.obj `if test -f 'network/stand_gui.cpp'; then $(CYGPATH_W) 'network/stand_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/stand_gui.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/stand_gui.Tpo" "$(DEPDIR)/stand_gui.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/stand_gui.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='network/stand_gui.cpp' object='stand_gui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/stand_gui.Po' tmpdepfile='$(DEPDIR)/stand_gui.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stand_gui.obj `if test -f 'network/stand_gui.cpp'; then $(CYGPATH_W) 'network/stand_gui.cpp'; else $(CYGPATH_W) '$(srcdir)/network/stand_gui.cpp'; fi`

osapi.o: osapi/osapi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osapi.o -MD -MP -MF "$(DEPDIR)/osapi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osapi.o `test -f 'osapi/osapi.cpp' || echo '$(srcdir)/'`osapi/osapi.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osapi.Tpo" "$(DEPDIR)/osapi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osapi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi.cpp' object='osapi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osapi.Po' tmpdepfile='$(DEPDIR)/osapi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osapi.o `test -f 'osapi/osapi.cpp' || echo '$(srcdir)/'`osapi/osapi.cpp

osapi.obj: osapi/osapi.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osapi.obj -MD -MP -MF "$(DEPDIR)/osapi.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osapi.obj `if test -f 'osapi/osapi.cpp'; then $(CYGPATH_W) 'osapi/osapi.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osapi.Tpo" "$(DEPDIR)/osapi.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osapi.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi.cpp' object='osapi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osapi.Po' tmpdepfile='$(DEPDIR)/osapi.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osapi.obj `if test -f 'osapi/osapi.cpp'; then $(CYGPATH_W) 'osapi/osapi.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi.cpp'; fi`

osregistry.o: osapi/osregistry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osregistry.o -MD -MP -MF "$(DEPDIR)/osregistry.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osregistry.o `test -f 'osapi/osregistry.cpp' || echo '$(srcdir)/'`osapi/osregistry.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osregistry.Tpo" "$(DEPDIR)/osregistry.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osregistry.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry.cpp' object='osregistry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osregistry.Po' tmpdepfile='$(DEPDIR)/osregistry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osregistry.o `test -f 'osapi/osregistry.cpp' || echo '$(srcdir)/'`osapi/osregistry.cpp

osregistry.obj: osapi/osregistry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osregistry.obj -MD -MP -MF "$(DEPDIR)/osregistry.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osregistry.obj `if test -f 'osapi/osregistry.cpp'; then $(CYGPATH_W) 'osapi/osregistry.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osregistry.Tpo" "$(DEPDIR)/osregistry.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osregistry.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry.cpp' object='osregistry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osregistry.Po' tmpdepfile='$(DEPDIR)/osregistry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osregistry.obj `if test -f 'osapi/osregistry.cpp'; then $(CYGPATH_W) 'osapi/osregistry.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry.cpp'; fi`

outwnd.o: osapi/outwnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT outwnd.o -MD -MP -MF "$(DEPDIR)/outwnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o outwnd.o `test -f 'osapi/outwnd.cpp' || echo '$(srcdir)/'`osapi/outwnd.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/outwnd.Tpo" "$(DEPDIR)/outwnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/outwnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd.cpp' object='outwnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/outwnd.Po' tmpdepfile='$(DEPDIR)/outwnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o outwnd.o `test -f 'osapi/outwnd.cpp' || echo '$(srcdir)/'`osapi/outwnd.cpp

outwnd.obj: osapi/outwnd.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT outwnd.obj -MD -MP -MF "$(DEPDIR)/outwnd.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o outwnd.obj `if test -f 'osapi/outwnd.cpp'; then $(CYGPATH_W) 'osapi/outwnd.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/outwnd.Tpo" "$(DEPDIR)/outwnd.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/outwnd.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd.cpp' object='outwnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/outwnd.Po' tmpdepfile='$(DEPDIR)/outwnd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o outwnd.obj `if test -f 'osapi/outwnd.cpp'; then $(CYGPATH_W) 'osapi/outwnd.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd.cpp'; fi`

xmouse.o: io/xmouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xmouse.o -MD -MP -MF "$(DEPDIR)/xmouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o xmouse.o `test -f 'io/xmouse.cpp' || echo '$(srcdir)/'`io/xmouse.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/xmouse.Tpo" "$(DEPDIR)/xmouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/xmouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/xmouse.cpp' object='xmouse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/xmouse.Po' tmpdepfile='$(DEPDIR)/xmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xmouse.o `test -f 'io/xmouse.cpp' || echo '$(srcdir)/'`io/xmouse.cpp

xmouse.obj: io/xmouse.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xmouse.obj -MD -MP -MF "$(DEPDIR)/xmouse.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o xmouse.obj `if test -f 'io/xmouse.cpp'; then $(CYGPATH_W) 'io/xmouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/xmouse.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/xmouse.Tpo" "$(DEPDIR)/xmouse.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/xmouse.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='io/xmouse.cpp' object='xmouse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/xmouse.Po' tmpdepfile='$(DEPDIR)/xmouse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xmouse.obj `if test -f 'io/xmouse.cpp'; then $(CYGPATH_W) 'io/xmouse.cpp'; else $(CYGPATH_W) '$(srcdir)/io/xmouse.cpp'; fi`

osapi_unix.o: osapi/osapi_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osapi_unix.o -MD -MP -MF "$(DEPDIR)/osapi_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osapi_unix.o `test -f 'osapi/osapi_unix.cpp' || echo '$(srcdir)/'`osapi/osapi_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osapi_unix.Tpo" "$(DEPDIR)/osapi_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osapi_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi_unix.cpp' object='osapi_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osapi_unix.Po' tmpdepfile='$(DEPDIR)/osapi_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osapi_unix.o `test -f 'osapi/osapi_unix.cpp' || echo '$(srcdir)/'`osapi/osapi_unix.cpp

osapi_unix.obj: osapi/osapi_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osapi_unix.obj -MD -MP -MF "$(DEPDIR)/osapi_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osapi_unix.obj `if test -f 'osapi/osapi_unix.cpp'; then $(CYGPATH_W) 'osapi/osapi_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osapi_unix.Tpo" "$(DEPDIR)/osapi_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osapi_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osapi_unix.cpp' object='osapi_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osapi_unix.Po' tmpdepfile='$(DEPDIR)/osapi_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osapi_unix.obj `if test -f 'osapi/osapi_unix.cpp'; then $(CYGPATH_W) 'osapi/osapi_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osapi_unix.cpp'; fi`

osregistry_unix.o: osapi/osregistry_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osregistry_unix.o -MD -MP -MF "$(DEPDIR)/osregistry_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osregistry_unix.o `test -f 'osapi/osregistry_unix.cpp' || echo '$(srcdir)/'`osapi/osregistry_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osregistry_unix.Tpo" "$(DEPDIR)/osregistry_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osregistry_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry_unix.cpp' object='osregistry_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osregistry_unix.Po' tmpdepfile='$(DEPDIR)/osregistry_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osregistry_unix.o `test -f 'osapi/osregistry_unix.cpp' || echo '$(srcdir)/'`osapi/osregistry_unix.cpp

osregistry_unix.obj: osapi/osregistry_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osregistry_unix.obj -MD -MP -MF "$(DEPDIR)/osregistry_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o osregistry_unix.obj `if test -f 'osapi/osregistry_unix.cpp'; then $(CYGPATH_W) 'osapi/osregistry_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/osregistry_unix.Tpo" "$(DEPDIR)/osregistry_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/osregistry_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/osregistry_unix.cpp' object='osregistry_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/osregistry_unix.Po' tmpdepfile='$(DEPDIR)/osregistry_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osregistry_unix.obj `if test -f 'osapi/osregistry_unix.cpp'; then $(CYGPATH_W) 'osapi/osregistry_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/osregistry_unix.cpp'; fi`

outwnd_unix.o: osapi/outwnd_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT outwnd_unix.o -MD -MP -MF "$(DEPDIR)/outwnd_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o outwnd_unix.o `test -f 'osapi/outwnd_unix.cpp' || echo '$(srcdir)/'`osapi/outwnd_unix.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/outwnd_unix.Tpo" "$(DEPDIR)/outwnd_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/outwnd_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd_unix.cpp' object='outwnd_unix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/outwnd_unix.Po' tmpdepfile='$(DEPDIR)/outwnd_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o outwnd_unix.o `test -f 'osapi/outwnd_unix.cpp' || echo '$(srcdir)/'`osapi/outwnd_unix.cpp

outwnd_unix.obj: osapi/outwnd_unix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT outwnd_unix.obj -MD -MP -MF "$(DEPDIR)/outwnd_unix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o outwnd_unix.obj `if test -f 'osapi/outwnd_unix.cpp'; then $(CYGPATH_W) 'osapi/outwnd_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd_unix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/outwnd_unix.Tpo" "$(DEPDIR)/outwnd_unix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/outwnd_unix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='osapi/outwnd_unix.cpp' object='outwnd_unix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/outwnd_unix.Po' tmpdepfile='$(DEPDIR)/outwnd_unix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o outwnd_unix.obj `if test -f 'osapi/outwnd_unix.cpp'; then $(CYGPATH_W) 'osapi/outwnd_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/osapi/outwnd_unix.cpp'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
